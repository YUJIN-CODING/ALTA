{"version":3,"file":"static/js/7918.353f2ba6.chunk.js","mappings":"4OAAO,IAAMA,EAAY,UACZC,EAAW,UACXC,EAAa,UACbC,EAAa,UACbC,EAAa,W,iMCEnB,SAASC,EAAcC,EAAeC,EAAcC,GACzDC,IAAAA,KAAU,CACRH,MAAAA,EACAC,KAAAA,EACAG,mBAAmB,EACnBC,KAAM,UACNC,UAAWZ,EAAAA,GACXa,mBAAoBb,EAAAA,GACpBc,kBAAmB,eACnBC,MAAOZ,EAAAA,GACPa,WAAYZ,EAAAA,KACXa,MAAK,WACFT,GAAUA,OAIX,SAASU,EAAcZ,EAAeC,EAAcC,GACzDC,IAAAA,KAAU,CACRH,MAAAA,EACAC,KAAAA,EACAI,KAAM,QACNC,UAAWV,EAAAA,GACXa,MAAOZ,EAAAA,GACPa,WAAYZ,EAAAA,GACZM,mBAAmB,EACnBG,mBAAoBX,EAAAA,GACpBY,kBAAmB,6BAClBG,MAAK,WACFT,GAAUA,OAIX,SAASW,EAAcb,EAAeC,GAC3CE,IAAAA,KAAU,CACRH,MAAAA,EACAC,KAAAA,EACAQ,MAAOZ,EAAAA,GACPS,UAAWZ,EAAAA,GACXgB,WAAYZ,EAAAA,GACZgB,mBAAmB,EACnBC,kBAAkB,EAClBC,kBAAkB,EAClBC,QAAQ,WAAD,wBAAE,8EACPd,IAAAA,cADO,2CAAF,kDAAC,KAML,SAASe,EACdlB,EACAC,EACAkB,EACAC,EACAlB,GAEAC,IAAAA,KAAU,CACRH,MAAAA,EACAC,KAAAA,EACAI,KAAM,UACNU,kBAAkB,EAClBR,mBAAoBb,EAAAA,GACpBc,kBAAmB,eACnBa,kBAAmBzB,EAAAA,GACnBa,MAAOZ,EAAAA,GACPa,WAAYZ,EAAAA,KACXa,MAAK,SAACW,GACHA,EAAOC,aACTpB,IAAAA,KAAU,CACRH,MAAM,GAAD,OAAKmB,GACVlB,KAAK,GAAD,OAAKmB,GACTf,KAAM,UACND,mBAAmB,EACnBG,mBAAoBb,EAAAA,GACpBc,kBAAmB,eACnBC,MAAOZ,EAAAA,GACPa,WAAYZ,EAAAA,KACXa,MAAK,WACFT,GAAUA,Y,iKC3EP,SAASsB,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,IAAIC,IAAIC,OAAOC,OAAOC,WAAWC,aAClCL,EAAOM,IAAI,WAEdtB,EAAAA,EAAAA,IAAc,gEAAe,IAAI,kBAAMa,EAAS,QAE3D,IAAMU,EAAML,OAAOF,EAAOM,IAAI,UACxBE,EAAUN,OAAOF,EAAOM,IAAI,UAElCG,aAAaC,QAAQ,MAAOH,GAC5BE,aAAaC,QAAQ,UAAWF,GAEhCX,EAAS,eAGT,SAACc,EAAD,WACE,SAAC,IAAD,CAAkB9B,MAAM,cAK9B,IAAM8B,EAAMC,EAAAA,EAAAA,IAAH,0JAMa1C,EAAAA","sources":["modules/colorChart.ts","modules/generateAlert.ts","pages/ALTA_AuthPage.tsx"],"sourcesContent":["export const mainColor = '#6d9886';\r\nexport const subColor = '#d9cab3';\r\nexport const errorColor = '#c99f9f';\r\nexport const blackColor = '#212121';\r\nexport const whiteColor = '#f6f6f6';\r\n","import { stringify } from 'querystring';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport '../style/AlertStyle.css';\r\nimport { mainColor, whiteColor, blackColor, errorColor } from './colorChart';\r\n\r\nexport function generateCheck(title: string, text: string, callback: () => void | Promise<void> | null) {\r\n  Swal.fire({\r\n    title,\r\n    text,\r\n    showConfirmButton: true,\r\n    icon: 'success',\r\n    iconColor: mainColor,\r\n    confirmButtonColor: mainColor,\r\n    confirmButtonText: '확인',\r\n    color: blackColor,\r\n    background: whiteColor,\r\n  }).then(() => {\r\n    if (callback) callback();\r\n  });\r\n}\r\n\r\nexport function generateError(title: string, text: string, callback?: any) {\r\n  Swal.fire({\r\n    title,\r\n    text,\r\n    icon: 'error',\r\n    iconColor: errorColor,\r\n    color: blackColor,\r\n    background: whiteColor,\r\n    showConfirmButton: true,\r\n    confirmButtonColor: errorColor,\r\n    confirmButtonText: '돌아가기',\r\n  }).then(() => {\r\n    if (callback) callback();\r\n  });\r\n}\r\n\r\nexport function generateTimer(title: string, text: string) {\r\n  Swal.fire({\r\n    title,\r\n    text,\r\n    color: blackColor,\r\n    iconColor: mainColor,\r\n    background: whiteColor,\r\n    allowOutsideClick: false,\r\n    showCancelButton: false,\r\n    timerProgressBar: true,\r\n    didOpen: async () => {\r\n      Swal.showLoading();\r\n    },\r\n  });\r\n}\r\n\r\nexport function generateConfirm(\r\n  title: string,\r\n  text: string,\r\n  subTitle: string,\r\n  subText: string,\r\n  callback: () => Promise<any> | null,\r\n) {\r\n  Swal.fire({\r\n    title,\r\n    text,\r\n    icon: 'warning',\r\n    showCancelButton: true,\r\n    confirmButtonColor: mainColor,\r\n    confirmButtonText: '확인',\r\n    cancelButtonColor: errorColor,\r\n    color: blackColor,\r\n    background: whiteColor,\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      Swal.fire({\r\n        title: `${subTitle}`,\r\n        text: `${subText}`,\r\n        icon: 'success',\r\n        showConfirmButton: true,\r\n        confirmButtonColor: mainColor,\r\n        confirmButtonText: '확인',\r\n        color: blackColor,\r\n        background: whiteColor,\r\n      }).then(() => {\r\n        if (callback) callback();\r\n      });\r\n    }\r\n  });\r\n}\r\n","import styled from '@emotion/styled';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\n\r\nimport { generateError } from '../modules/generateAlert';\r\nimport { whiteColor } from '../modules/colorChart';\r\n\r\nexport default function ALTA_AuthPage() {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const params = new URL(String(window.location)).searchParams;\r\n    const error = params.get('error');\r\n\r\n    if (error) generateError('로그인에 실패했습니다', '', () => navigate('/'));\r\n\r\n    const jwt = String(params.get('jwtAT'));\r\n    const refresh = String(params.get('jwtRT'));\r\n\r\n    localStorage.setItem('jwt', jwt);\r\n    localStorage.setItem('refresh', refresh);\r\n\r\n    navigate('/mypage');\r\n  });\r\n  return (\r\n    <Div>\r\n      <CircularProgress color=\"primary\" />\r\n    </Div>\r\n  );\r\n}\r\n\r\nconst Div = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: ${whiteColor};\r\n`;\r\n"],"names":["mainColor","subColor","errorColor","blackColor","whiteColor","generateCheck","title","text","callback","Swal","showConfirmButton","icon","iconColor","confirmButtonColor","confirmButtonText","color","background","then","generateError","generateTimer","allowOutsideClick","showCancelButton","timerProgressBar","didOpen","generateConfirm","subTitle","subText","cancelButtonColor","result","isConfirmed","ALTA_AuthPage","navigate","useNavigate","useEffect","params","URL","String","window","location","searchParams","get","jwt","refresh","localStorage","setItem","Div","styled"],"sourceRoot":""}