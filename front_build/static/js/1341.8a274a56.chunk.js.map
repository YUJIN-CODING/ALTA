{"version":3,"file":"static/js/1341.8a274a56.chunk.js","mappings":"gLAKe,SAASA,EAAT,GAAkD,IAApBC,EAAmB,EAAnBA,SAC3C,OAAO,SAAC,IAAD,CAAYC,GAAIC,EAAhB,SAAwBF,IAGjC,IAAME,EAAQ,CACZC,MAAO,OACPC,OAAQ,OACRC,OAAQ,UACRC,UAAW,SACXC,SAAU,OACVC,WAAY,OACZC,WAAY,OACZC,aAAc,MACdC,gBAAiB,4B,4aCFJ,SAASC,EAAT,GAAmD,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,QACvCC,GAA6BC,EAAAA,EAAAA,MAE7BC,EAAa,mCAAG,WAAOC,GAAP,kFACRC,EAAAA,EAAAA,KADQ,iBACMC,OADN,gBACcL,EAAS,KADvB,wBAEdM,EAAAA,EAAAA,IAAaC,OAAOJ,EAAEK,UAFR,OAGpBL,EAAEM,WAAY,EAHM,2CAAH,sDAcnB,OACE,8BACGX,EAAKY,KAAI,SAACP,GAAD,OACR,SAACQ,EAAA,EAAD,CAEEC,QAAS,YAbG,SAACT,GACdA,EAAEM,WACLP,EAAcC,GAEhBH,EAAS,GAAD,OAAIG,EAAEU,MACdd,GAAQ,GASAe,CAAYX,IAHhB,UAME,SAACY,EAAA,EAAD,CAAK7B,GAAI8B,EAAT,UACE,UAACC,EAAA,EAAD,CAAOC,MAAOC,EAAeC,UAAW,EAAxC,WACE,SAACC,EAAA,EAAD,CAAQC,WAAW,SAACC,EAAA,EAAD,IAAeC,eAAa,EAACtC,GAAIuC,KACpD,SAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,UAAU,MAAM1C,GAAI2C,EAApC,UACE,UAACH,EAAA,GAAD,CAAMI,MAAI,EAAC5C,GAAIiB,EAAEM,UAAYsB,EAAY,KAAzC,WACE,UAACL,EAAA,GAAD,CAAMxC,GAAI8C,EAAV,WACE,SAACjB,EAAA,EAAD,WACE,wBAAKZ,EAAE8B,oBAET,SAACC,EAAA,EAAD,CAAYhD,GAAIiD,EAAhB,UAA4BC,EAAAA,EAAAA,GAAUjC,EAAEkC,YAE1C,SAACH,EAAA,EAAD,CAAYhD,GAAIoD,EAAhB,SAAsCnC,EAAEoC,qBAhB3CpC,EAAEK,cA2BjB,IAAMQ,EAAsB,CAC1BwB,SAAU,WACVC,aAAc,GAGVtB,EAAgB,CACpB/B,MAAO,OACPE,OAAQ,UAGJuC,EAAgB,CACpBa,YAAa,EACbC,aAAc,EACdC,SAAU,GAGNnB,EAAc,CAClBoB,MAAO,UACPL,SAAU,WACVM,MAAO,OACPC,IAAK,OACLC,QAAS,EACTC,SAAU,QAGNjB,EAAY,CAChBkB,QAAS,OACTC,eAAgB,iBAGZhB,EAAY,CAChBU,MAAO,OACPO,YAAa,OACbC,UAAW,QAOPtB,EAAY,CAChBc,MAAO,OACPS,eAAgB,eAChBC,OAAQ,WAgBJjB,EAAsB,CAC1BG,aAAc,G,0CCvGD,SAASe,IACtB,IAAMxD,GAA6BC,EAAAA,EAAAA,MACnC,GAA6CwD,EAAAA,EAAAA,YAAWC,EAAAA,IAAhDC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,YAC7B,GAAwBC,EAAAA,EAAAA,WAAkB,GAA1C,eAAOC,EAAP,KAAahE,EAAb,KACA,GAAsB+D,EAAAA,EAAAA,UAAiB,GAAvC,eAAOE,EAAP,KAAYC,EAAZ,KACA,GAA8BH,EAAAA,EAAAA,WAAkB,GAAhD,eAAOI,EAAP,KAAgBC,EAAhB,KAEMC,GAAYC,EAAAA,EAAAA,QAAsB,MAEpCC,EAAwBX,EAAUY,QAAO,SAACpE,GAAD,OAA2C,IAAhBA,EAAEM,cAE1E+D,EAAAA,EAAAA,YAAU,WACRL,GAAW,GACXG,EAAWX,EAAUY,QAAO,SAACpE,GAAD,OAA2C,IAAhBA,EAAEM,aACzDoD,EAAYS,EAASG,UACpB,KAEHD,EAAAA,EAAAA,YAAU,WACRX,EAAYS,EAASG,UACpB,CAACH,IAEJ,IAIMI,EAAU,mCAAG,+FACLtE,EAAAA,EAAAA,KADK,iBACSC,OADT,gBACiBL,EAAS,KAD1B,cAEjBmE,GAAW,GAFM,UAGXQ,EAAAA,EAAAA,MAHW,OAIjB5E,GAAQ,GACR8D,EAAY,GACZS,EAAWX,EAAUY,QAAO,SAACpE,GAAD,OAA2C,IAAhBA,EAAEM,aANxC,4CAAH,qDAShB,OACE,UAACM,EAAA,EAAD,YACE,SAAC6D,EAAA,EAAD,CAAczF,MAAM,eAApB,UACE,SAAC0F,EAAA,EAAD,CACEC,aAAclB,EACdmB,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAChDC,QAAQ,WACRhG,GAAIiG,EAJN,UAME,SAACC,EAAA,EAAD,CACEC,IAAKjB,EACLlF,GAAI,CAAEM,SAAU,OAAQ+D,OAAQ,WAChC+B,GAAG,eACH,gBAAevB,EAAO,kBAAewB,EACrC,gBAAc,OACd,gBAAexB,EAAO,YAASwB,EAC/B3E,QAAS,kBAAMb,GAASgE,WAI9B,UAACyB,EAAA,EAAD,CACEF,GAAG,aACHG,SAAUrB,EAAUsB,QACpB3B,KAAMA,EACN4B,QAAS,kBAAM5F,GAASgE,IACxB6B,cAAe,CACb,kBAAmB,gBANvB,WASE,SAAC7E,EAAA,EAAD,CAAK7B,GAAI,CAAE2G,aAAc,EAAGC,YAAa,WAAzC,UACE,UAACC,EAAA,EAAD,CAAMC,MAAOhC,EAAKiC,SA3CL,SAACC,EAA6BC,GACjDlC,EAAOkC,IA0CyC,aAAW,qBAArD,WACE,SAACC,EAAA,GAAD,QAAKC,MAAM,sDAAiBC,GAAU,MACtC,SAACF,EAAA,GAAD,QAAKC,MAAM,0CAAeC,GAAU,WAGxC,UAACvF,EAAA,EAAD,CAAK7B,GAAIqH,EAAT,WACE,SAACC,GAAD,CAAUR,MAAOhC,EAAKyC,MAAO,EAA7B,SACG7C,GACC,UAAC7C,EAAA,EAAD,uCAEGmD,GACC,SAACwC,EAAA,EAAD,WAAa,SAACC,EAAA,EAAD,CAAwBzH,GAAI0H,OAEzC,SAACF,EAAA,EAAD,CAAY9F,QAAS8D,EAArB,UAAkC,SAACmC,EAAA,EAAD,CAA+B3H,GAAI4H,QAEvE,SAACjH,EAAD,CAAgBC,KAAMwE,EAAUvE,QAASA,QAG3C,SAACmC,EAAA,EAAD,CAAYhD,GAAI,CAAE2D,MAAO,aAAcrD,SAAU,QAAjD,+EAGJ,SAACgH,GAAD,CAAUR,MAAOhC,EAAKyC,MAAO,EAA7B,UACE,SAAC5G,EAAD,CAAgBC,KAAM6D,EAAW5D,QAASA,eAQtD,I,IAAMwG,EAAY,CAChBnH,MAAO,QACP8D,QAAS,OACT7D,OAAQ,SAGJ8F,EAAa,CACjB,oBAAqB,CACnBtC,MAAO,eACPjD,gBAAiB,mBAIfgH,EAAgB,CACpB/D,MAAO,gBAGHiE,GAAkB,CACtBjE,MAAO,QAGT,SAAS2D,GAASO,GAChB,IAAQ9H,EAAqC8H,EAArC9H,SAAU+G,EAA2Be,EAA3Bf,MAAOS,EAAoBM,EAApBN,MAAUO,GAAnC,OAA6CD,EAA7C,GAEA,OACE,gCACEE,KAAK,WACLC,OAAQlB,IAAUS,EAClBnB,GAAE,0BAAqBmB,GACvB,uCAA+BA,IAC3BO,GALN,aAOGhB,IAAUS,IAAS,SAAC1F,EAAA,EAAD,CAAK7B,GAAI,CAAEiI,EAAG,GAAd,SAAoBlI,OAK9C,SAASqH,GAAUG,GACjB,MAAO,CACL,GAAK,cAAL,OAAoBA,GACpB,gBAAgB,mBAAhB,OAAoCA,IChJzB,SAASW,KACtB,IAAMpH,GAAWC,EAAAA,EAAAA,MASjB,OACE,SAACc,EAAA,EAAD,CAAK7B,GAAImI,GAAT,UACE,UAACC,EAAA,EAAD,CAAQpI,GAAIqI,GAAZ,WACE,SAACC,GAAD,CAAWC,IAAKC,EAAMC,IAAI,MAC1B,UAAC5G,EAAA,EAAD,CACE7B,GAAI,CACFgE,QAAS,OACT0E,WAAY,UAHhB,WAME,SAACC,GAAD,WACE,SAACrE,EAAD,OAEF,SAACoB,EAAA,EAAD,CAAczF,MAAM,kCAApB,UACE,SAAC0I,GAAD,CAASjH,QAAS,kBAAMZ,EAAS,YAAjC,UACE,SAAC8H,EAAA,EAAD,CAAgB5I,GAAI,CAAEM,SAAU,OAAQ+D,OAAQ,kBAGpD,SAACqB,EAAA,EAAD,CAAczF,MAAM,2BAApB,UACE,SAAC0I,GAAD,CAASjH,QA1BJ,WACbmH,aAAaC,WAAW,OACxBD,aAAaC,WAAW,WACxBD,aAAaC,WAAW,YACxBhI,EAAS,MAsBD,UACE,SAACiI,EAAA,EAAD,CAAY/I,GAAI,CAAEM,SAAU,OAAQ+D,OAAQ,yBAS1D,IAAM8D,GAAe,CACnBhI,OAAQ,QAGJkI,GAAW,CACfrE,QAAS,OACTgF,cAAe,MACf/E,eAAgB,gBAChByE,WAAY,SACZvI,OAAQ,OACR2D,QAAS,UAGLwE,GAAYW,EAAAA,EAAAA,IAAH,yCAITN,GAAUM,EAAAA,EAAAA,OAAH,0I,+EC9DE,SAASC,EAAT,GAA0C,IAApBnJ,EAAmB,EAAnBA,SACnC,OACE,SAAC,IAAD,CAAKoJ,UAAU,YAAYnJ,GAAIoJ,EAA/B,SACGrJ,IAKP,IAAMqJ,EAAkB,CACtBrF,SAAU,QACVsF,SAAU,QACVlJ,OAAQ,OACRC,OAAQ,SACRM,gBAAiB,Y,yFCVJ,SAAS4I,EAAT,GAAqD,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,SAC9C,OACE,UAAC,IAAD,CAAKxJ,GAAIyJ,EAAT,WACE,SAAC,IAAD,CAAKzJ,GAAI0J,EAAT,SAAuBH,KACvB,SAAC,IAAD,CAAKvJ,GAAI2J,EAAT,SAAyBH,OAK/B,IAAMC,EAAc,CAClBzF,QAAS,OACTgF,cAAe,SACf7I,OAAQ,SAGJuJ,EAAc,CAClBE,KAAM,WACN1J,MAAO,QAEHyJ,EAAgB,CACpBC,KAAM,WACNC,UAAW,SACXC,eAAgB,S,gKC1BZC,GAAgBd,EAAAA,EAAAA,KAAO,gBAAGE,EAAH,EAAGA,UAActB,GAAjB,mBAC3B,SAAC,KAAD,kBAAaA,GAAb,IAAoBmC,OAAK,EAACC,QAAS,CAAEC,OAAQf,QADzBF,EAEnB,oDACMkB,EAAAA,EAAAA,OAAyB,CAC9BxG,MAAOyG,EAAAA,MAFR,sBAIMD,EAAAA,EAAAA,SAA2B,CAChCzJ,gBAAiB0J,EAAAA,KALlB,KAcY,SAAS1E,EAAT,GAAmD,IAA3B3F,EAA0B,EAA1BA,SAAUE,EAAgB,EAAhBA,MAC/C,OAAO,SAAC8J,EAAD,CAAe9J,MAAOA,EAAtB,SAA8BF,M,uJCrBhC,IAAMsK,EAAY,UACZC,EAAW,UACXC,EAAa,UACbH,EAAa,UACbI,EAAa,W,sBCJnB,SAAStH,EAAU4D,GACxB,IAAM2D,EAAQ,IAAIC,KACZC,EAAY,IAAID,KAAK5D,GACrB8D,EAAUC,KAAKC,OAAOL,EAAMM,UAAYJ,EAAUI,WAAa,IAAO,IAC5E,GAAIH,EAAU,EAAG,MAAM,sBACvB,GAAIA,EAAU,GAAI,MAAM,GAAN,OAAUA,EAAV,iBAClB,IAAMI,EAAQH,KAAKC,MAAMF,EAAU,IACnC,GAAII,EAAQ,GAAI,MAAM,GAAN,OAAUA,EAAV,uBAChB,IAAMC,EAAOJ,KAAKC,MAAME,EAAQ,IAChC,OAAIC,EAAO,EAAS,GAAN,OAAUA,EAAV,iBACT,UAAUN,EAAUO,cAApB,aAAsCP,EAAUQ,WAAa,EAA7D,aAAmER,EAAUS,W,kOCJ7E,SAASC,EAAcpL,EAAeqL,EAAcC,GACzDC,IAAAA,KAAU,CACRvL,MAAAA,EACAqL,KAAAA,EACAG,mBAAmB,EACnBC,KAAM,UACNC,UAAWtB,EAAAA,GACXuB,mBAAoBvB,EAAAA,GACpBwB,kBAAmB,eACnBlI,MAAOyG,EAAAA,GACP0B,WAAYtB,EAAAA,KACXuB,MAAK,WACFR,GAAUA,OAIX,SAASS,EAAc/L,EAAeqL,EAAcC,GACzDC,IAAAA,KAAU,CACRvL,MAAAA,EACAqL,KAAAA,EACAI,KAAM,QACNC,UAAWpB,EAAAA,GACX5G,MAAOyG,EAAAA,GACP0B,WAAYtB,EAAAA,GACZiB,mBAAmB,EACnBG,mBAAoBrB,EAAAA,GACpBsB,kBAAmB,6BAClBE,MAAK,WACFR,GAAUA,OAIX,SAASU,EAAchM,EAAeqL,GAC3CE,IAAAA,KAAU,CACRvL,MAAAA,EACAqL,KAAAA,EACA3H,MAAOyG,EAAAA,GACPuB,UAAWtB,EAAAA,GACXyB,WAAYtB,EAAAA,GACZ0B,mBAAmB,EACnBC,kBAAkB,EAClBC,kBAAkB,EAClBC,QAAQ,WAAD,wBAAE,8EACPb,IAAAA,cADO,2CAAF,kDAAC,KAML,SAASc,EACdrM,EACAqL,EACAiB,EACAC,EACAjB,GAEAC,IAAAA,KAAU,CACRvL,MAAAA,EACAqL,KAAAA,EACAI,KAAM,UACNS,kBAAkB,EAClBP,mBAAoBvB,EAAAA,GACpBwB,kBAAmB,eACnBY,kBAAmBlC,EAAAA,GACnB5G,MAAOyG,EAAAA,GACP0B,WAAYtB,EAAAA,KACXuB,MAAK,SAACW,GACHA,EAAOC,aACTnB,IAAAA,KAAU,CACRvL,MAAM,GAAD,OAAKsM,GACVjB,KAAK,GAAD,OAAKkB,GACTd,KAAM,UACND,mBAAmB,EACnBG,mBAAoBvB,EAAAA,GACpBwB,kBAAmB,eACnBlI,MAAOyG,EAAAA,GACP0B,WAAYtB,EAAAA,KACXuB,MAAK,WACFR,GAAUA,Y,qCCjFhBqB,EAAc,CAClB,uBAAwB,CACtB1M,MAAO,MACPQ,gBAAiB2J,EAAAA,GACjB5J,aAAc,QAEhB,6BAA8B,CAC5BC,gBAAiB4J,EAAAA,GACjB7J,aAAc,SAGlB,O,8JCPMoM,EAAiC,CACrCC,QAAS,GACTC,WAAY,kBAAM,MAClBC,UAAW,GACXC,aAAc,kBAAM,MACpBC,UAAW,EACXC,aAAc,kBAAM,MACpBC,WAAY,kBAAM,MAClBC,QAAS,GACTC,WAAY,kBAAM,MAClBC,WAAW,EACXC,aAAc,kBAAM,OAETC,EAAcC,EAAAA,cAAoBb,GAGhC,SAASc,EAAT,GAAqD,IAA3B5N,EAA0B,EAA1BA,SACvC,GAA8B6E,EAAAA,EAAAA,UAAmB,IAAjD,eAAOkI,EAAP,KAAgBC,EAAhB,KACA,GAAkCnI,EAAAA,EAAAA,UAAiB,IAAnD,eAAOoI,EAAP,KAAkBC,EAAlB,KACA,GAAkCrI,EAAAA,EAAAA,UAAiB,GAAnD,eAAOsI,EAAP,KAAkBC,EAAlB,KACA,GAA8BvI,EAAAA,EAAAA,UAAmB,CAE/C,CAAEwB,GAAI,WAAYe,MAAO,qBAAOjH,MAAO,IACvC,CAAEkG,GAAI,QAASe,MAAO,qBAAOjH,MAAO,KACpC,CAAEkG,GAAI,mBAAoBe,MAAO,qBAAOjH,MAAO,IAC/C,CAAEkG,GAAI,QAASe,MAAO,eAAMjH,MAAO,MALrC,eAAOmN,EAAP,KAAgBC,EAAhB,KAUA,GAAkC1I,EAAAA,EAAAA,WAAkB,GAApD,eAAO2I,EAAP,KAAkBC,EAAlB,KAEMJ,EAAU,mCAAG,WAAOQ,GAAP,wFACS1M,EAAAA,EAAAA,KADT,iBAEAC,OAFA,yCAEe,CAAEA,QAAS,EAAG0M,QAAS,sBAFtC,iCAKGC,EAAAA,EAAAA,IAAwBF,GAL3B,cAKTG,EALS,OAMfhB,EAAWgB,EAAIjB,SACfG,EAAac,EAAIf,WACjBG,EAAaY,EAAIC,gBARF,kBASR,CAAE7M,OAAQ,EAAG0M,QAAS,6BATd,2DAWR,CAAE1M,QAAS,EAAG0M,QAAS,0BAXf,0DAAH,sDAeV/G,EAAQ,CACZgG,QAAAA,EACAC,WAAAA,EACAC,UAAAA,EACAC,aAAAA,EACAC,UAAAA,EACAC,aAAAA,EACAC,WAAAA,EACAC,QAAAA,EACAC,WAAAA,EACAC,UAAAA,EACAC,aAAAA,GAEF,OAAO,SAACC,EAAYQ,SAAb,CAAsBnH,MAAOA,EAA7B,SAAqC/G,I,kNC3C/B,SAASmO,EAAT,GAA4D,IAAjCN,EAAgC,EAAhCA,QAClC9M,GAA6BC,EAAAA,EAAAA,MACnC,GAA6CwD,EAAAA,EAAAA,YAAWkJ,GAAhDD,EAAR,EAAQA,aAER,GAFA,EAAsBV,QAAtB,EAA+BI,WAEKtI,EAAAA,EAAAA,WAAkB,IAAtD,eAAOuJ,EAAP,KAAmBC,EAAnB,KACA,GAAoCxJ,EAAAA,EAAAA,UAAiB,IAArD,eAAOyJ,EAAP,KAAmBC,EAAnB,KACA,GAAgC1J,EAAAA,EAAAA,UAAqB,IAArD,eAAO2J,EAAP,KAAiBC,EAAjB,KACA,GAA8B5J,EAAAA,EAAAA,UAAkBuJ,GAAkC,IAApBI,EAAShJ,QAAvE,eAAOkJ,EAAP,KAAgBC,EAAhB,KACA,GAAoC9J,EAAAA,EAAAA,UAAmB+J,EAAAA,IAAvD,eAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAU,mCAAG,WAAOC,GAAP,gFACjBT,EAAcS,GADG,UAEL7N,EAAAA,EAAAA,KAFK,iBAESC,OAFT,gBAEiBL,EAAS,KAF1B,cAGjB4N,GAAW,GAHM,mBAKGM,EAAAA,EAAAA,IAAgBD,GALnB,OAKThB,EALS,OAMfS,EAAYT,GACZW,GAAW,IACLO,EAASV,EAASW,MAAK,SAACC,GAAD,OAASA,EAAIJ,WAAaA,OAErDF,EAAcI,GAVD,kDAafP,GAAW,GAbI,0DAAH,sDAiBVU,EAAY,mCAAG,+FACPlO,EAAAA,EAAAA,KADO,iBACOC,OADP,gBACeL,EAAS,KADxB,2BAGjBmL,EAAAA,EAAAA,IAAc,qDAAD,iBAAkB2C,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAYG,SAA9B,0GACTV,EAJa,qBAKXO,EAAWS,MALA,4CAOOC,EAAAA,EAAAA,IAAY1B,EAAS2B,SAASX,EAAWxI,KAPhD,gBAQXiF,EAAAA,EAAAA,IAAc,4BAAD,UAAauD,EAAWG,SAAxB,mGAAuD,kBAClEvB,GAAa,MATJ,mDAYXxB,EAAAA,EAAAA,IAAc,kEAAD,UAAqB,KAAIwD,SAAS5O,KAAKiN,UAZzC,iCAeb7B,EAAAA,EAAAA,IAAc,GAAD,OAAI4C,EAAWG,SAAf,iGAfA,iCAkBf/C,EAAAA,EAAAA,IAAc,sGAAD,IAlBE,QAoBjBsC,EAAc,IACdE,EAAY,IArBK,0DAAH,qDAyBlB,OACE,UAAC3M,EAAA,EAAD,CAAK7B,GAAIyP,EAAT,WACE,SAAC3P,EAAA,EAAD,2CACA,SAAC+B,EAAA,EAAD,CAAK7B,GAAI0P,EAAT,UACE,UAAClN,EAAA,GAAD,CAAMC,WAAS,EAAC4K,QAAS,GAAIsC,QAAS,EAAtC,WACE,SAACnN,EAAA,GAAD,CAAMI,MAAI,EAACgN,GAAI,GAAf,UACE,SAACC,EAAA,EAAD,CACEhL,KAAMsJ,EACN2B,OAAQ,WACN1B,GAAc,IAEhB3H,QAAS,WACP2H,GAAc,IAEhB2B,qBAAsB,SAACC,EAAQlJ,GAAT,OAA4BkJ,IAAWlJ,GAE7DC,SAAU,SAACkJ,EAAyCC,GAC9CA,IACFrB,EAAcqB,GACd5B,EAAc4B,EAAInB,YAGtBoB,cAAe,SAACF,GACVA,GAAGnB,EAAYmB,EAAEG,OAA4BtJ,QAEnDuH,WAAYA,EACZgC,eAAgB,SAACL,GAAD,OAA8BA,EAAOjB,UACrDuB,QAAO,CAAG1B,GAAH,eAAkBL,IACzBgC,cAAe,6EACf9B,QAASA,EACT+B,YAAa,SAACC,GAAD,OACX,UAACjO,EAAA,GAAD,CAAMC,WAAS,EAACiG,WAAW,SAA3B,WACE,SAAClG,EAAA,GAAD,CAAMI,MAAI,EAACgN,GAAI,EAAG5P,GAAI0Q,EAAtB,UACE,SAACC,EAAA,EAAD,CAAYC,QAAQ,iBAAiB5Q,GAAI6Q,EAAzC,mCAIF,SAACrO,EAAA,GAAD,CAAMI,MAAI,EAACgN,GAAI,GAAf,UACE,SAACkB,EAAA,GAAD,kBACML,GADN,IAEErK,GAAG,iBACH2K,YAAY,sGACZC,KAAK,QACLC,YAAU,kBACLR,EAAOQ,YADF,IAERC,cACE,SAAC,WAAD,UACGzC,GAAU,SAAC0C,EAAA,EAAD,CAAkBxN,MAAM,UAAUqN,KAAM,KAAS,uBAU9E,SAACxO,EAAA,GAAD,CAAMI,MAAI,EAACgN,GAAI,EAAG5P,GAAIoR,EAAtB,UACE,SAACjP,EAAA,EAAD,CAAQkP,QAAQ,YAAYrR,GAAIsR,EAAgB5P,QAAS0N,EAAzD,oCAUZ,IAAMK,EAAiB,CACrB8B,cAAe,GAKXD,EAAiB,CACrB,gBAAmB,iBACnB,MAAS,UACT,UAAW,CACT5Q,gBAAiB,YASfmQ,EAAiB,CACrBtQ,WAAY,OACZoD,MAAO,WAGH+M,EAAa,CACjBjN,aAAc,EACdpD,UAAW,SAGP+Q,EAAW,CACf5N,YAAa,EACbkF,WAAY,QAGRgH,EAAgB,CACpBhP,gBAAiB,UACjBP,OAAQ,SACRuI,WAAY,SACZ1E,QAAS,OACTC,eAAgB,SAChBE,UAAW,G,wFCtLN,SAASqN,EAA8BC,GAC5C,OAAOC,EAAAA,EAAAA,GAAqB,oBAAqBD,IAErBE,EAAAA,EAAAA,GAAuB,oBAAqB,CAAC,SAA3E,ICFMC,EAAY,CAAC,YAAa,aAoB1BC,GAAqB5I,EAAAA,EAAAA,IAAO,MAAO,CACvC6I,KAAM,oBACNL,KAAM,OACNM,kBAAmB,SAAClK,EAAOmK,GAAR,OAAmBA,EAAOC,OAHpBhJ,CAIxB,CACD/I,MAAO,OACPgS,UAAW,SA4Db,EA1DoCxE,EAAAA,YAAiB,SAAwByE,EAAShM,GACpF,IAAM0B,GAAQuK,EAAAA,EAAAA,GAAc,CAC1BvK,MAAOsK,EACPL,KAAM,sBAIN3I,EAEEtB,EAFFsB,UADF,EAGItB,EADFwK,UAAAA,OAFF,MAEc,MAFd,EAIMvK,GAAQwK,EAAAA,EAAAA,GAA8BzK,EAAO+J,GAE7CW,GAAaC,EAAAA,EAAAA,GAAS,GAAI3K,EAAO,CACrCwK,UAAAA,IAGIpI,EAlCkB,SAAAsI,GACxB,IACEtI,EACEsI,EADFtI,QAKF,OAAOwI,EAAAA,EAAAA,GAHO,CACZR,KAAM,CAAC,SAEoBT,EAA+BvH,GA2B5CyI,CAAkBH,GAClC,OAAoBI,EAAAA,EAAAA,KAAKd,GAAoBW,EAAAA,EAAAA,GAAS,CACpDrM,IAAKA,EACLyM,GAAIP,EACJlJ,WAAW0J,EAAAA,EAAAA,GAAK5I,EAAQgI,KAAM9I,GAC9BoJ,WAAYA,GACXzK,O,WCnDE,SAASgL,EAAqBrB,GACnC,OAAOC,EAAAA,EAAAA,GAAqB,WAAYD,IAErBE,EAAAA,EAAAA,GAAuB,WAAY,CAAC,OAAQ,iBAAjE,ICFMC,GAAY,CAAC,YAAa,YAAa,UAAW,OAAQ,gBAsB1DmB,IAAY9J,EAAAA,EAAAA,IAAO,QAAS,CAChC6I,KAAM,WACNL,KAAM,OACNM,kBAAmB,SAAClK,EAAOmK,GACzB,IACEO,EACE1K,EADF0K,WAEF,MAAO,CAACP,EAAOC,KAAMM,EAAWS,cAAgBhB,EAAOgB,gBAPzC/J,EASf,gBACDgK,EADC,EACDA,MACAV,EAFC,EAEDA,WAFC,OAGGC,EAAAA,EAAAA,GAAS,CACbxO,QAAS,QACT9D,MAAO,OACPgT,eAAgB,WAChBC,cAAe,EACf,aAAaX,EAAAA,EAAAA,GAAS,GAAIS,EAAMG,WAAWC,MAAO,CAChDvP,QAASmP,EAAMtD,QAAQ,GACvBhM,MAAOsP,EAAMK,QAAQhI,KAAKiI,UAC1BlT,UAAW,OACXmT,YAAa,YAEdjB,EAAWS,cAAgB,CAC5BE,eAAgB,gBAEZO,GAAmB,QAgGzB,GA/F2B/F,EAAAA,YAAiB,SAAeyE,EAAShM,GAClE,IAAM0B,GAAQuK,EAAAA,EAAAA,GAAc,CAC1BvK,MAAOsK,EACPL,KAAM,aAIN3I,EAKEtB,EALFsB,UADF,EAMItB,EAJFwK,UAAAA,OAFF,MAEcoB,GAFd,IAMI5L,EAHF/D,QAAAA,OAHF,MAGY,SAHZ,IAMI+D,EAFFmJ,KAAAA,OAJF,MAIS,SAJT,IAMInJ,EADFmL,aAAAA,OALF,SAOMlL,GAAQwK,EAAAA,EAAAA,GAA8BzK,EAAO+J,IAE7CW,GAAaC,EAAAA,EAAAA,GAAS,GAAI3K,EAAO,CACrCwK,UAAAA,EACAvO,QAAAA,EACAkN,KAAAA,EACAgC,aAAAA,IAGI/I,EA5DkB,SAAAsI,GACxB,IACEtI,EAEEsI,EAFFtI,QAGIyJ,EAAQ,CACZzB,KAAM,CAAC,OAFLM,EADFS,cAG+B,iBAEjC,OAAOP,EAAAA,EAAAA,GAAeiB,EAAOZ,EAAsB7I,GAoDnCyI,CAAkBH,GAC5BoB,EAAQjG,EAAAA,SAAc,iBAAO,CACjC5J,QAAAA,EACAkN,KAAAA,EACAgC,aAAAA,KACE,CAAClP,EAASkN,EAAMgC,IACpB,OAAoBL,EAAAA,EAAAA,KAAKiB,EAAAA,EAAAA,SAAuB,CAC9C9M,MAAO6M,EACP5T,UAAuB4S,EAAAA,EAAAA,KAAKI,IAAWP,EAAAA,EAAAA,GAAS,CAC9CI,GAAIP,EACJtK,KAAMsK,IAAcoB,GAAmB,KAAO,QAC9CtN,IAAKA,EACLgD,WAAW0J,EAAAA,EAAAA,GAAK5I,EAAQgI,KAAM9I,GAC9BoJ,WAAYA,GACXzK,S,UCtFA,SAAS+L,GAAyBpC,GACvC,OAAOC,EAAAA,EAAAA,GAAqB,eAAgBD,IAErBE,EAAAA,EAAAA,GAAuB,eAAgB,CAAC,SAAjE,ICFMC,GAAY,CAAC,YAAa,aAqB1BkC,IAAgB7K,EAAAA,EAAAA,IAAO,QAAS,CACpC6I,KAAM,eACNL,KAAM,OACNM,kBAAmB,SAAClK,EAAOmK,GAAR,OAAmBA,EAAOC,OAHzBhJ,CAInB,CACDjF,QAAS,uBAEL+P,GAAY,CAChB1C,QAAS,QAELoC,GAAmB,QA+DzB,GA9D+B/F,EAAAA,YAAiB,SAAmByE,EAAShM,GAC1E,IAAM0B,GAAQuK,EAAAA,EAAAA,GAAc,CAC1BvK,MAAOsK,EACPL,KAAM,iBAIN3I,EAEEtB,EAFFsB,UADF,EAGItB,EADFwK,UAAAA,OAFF,MAEcoB,GAFd,EAIM3L,GAAQwK,EAAAA,EAAAA,GAA8BzK,EAAO+J,IAE7CW,GAAaC,EAAAA,EAAAA,GAAS,GAAI3K,EAAO,CACrCwK,UAAAA,IAGIpI,EArCkB,SAAAsI,GACxB,IACEtI,EACEsI,EADFtI,QAKF,OAAOwI,EAAAA,EAAAA,GAHO,CACZR,KAAM,CAAC,SAEoB4B,GAA0B5J,GA8BvCyI,CAAkBH,GAClC,OAAoBI,EAAAA,EAAAA,KAAKqB,GAAAA,EAAAA,SAA2B,CAClDlN,MAAOiN,GACPhU,UAAuB4S,EAAAA,EAAAA,KAAKmB,IAAetB,EAAAA,EAAAA,GAAS,CAClDI,GAAIP,EACJlJ,WAAW0J,EAAAA,EAAAA,GAAK5I,EAAQgI,KAAM9I,GAC9BhD,IAAKA,EACL4B,KAAMsK,IAAcoB,GAAmB,KAAO,WAC9ClB,WAAYA,GACXzK,S,uBC1DA,SAASmM,GAAwBxC,GACtC,OAAOC,EAAAA,EAAAA,GAAqB,cAAeD,GAE7C,IACA,IADwBE,EAAAA,EAAAA,GAAuB,cAAe,CAAC,OAAQ,WAAY,QAAS,OAAQ,WCF9FC,GAAY,CAAC,YAAa,YAAa,QAAS,YA0BhDsC,IAAejL,EAAAA,EAAAA,IAAO,KAAM,CAChC6I,KAAM,cACNL,KAAM,OACNM,kBAAmB,SAAClK,EAAOmK,GACzB,IACEO,EACE1K,EADF0K,WAEF,MAAO,CAACP,EAAOC,KAAMM,EAAW4B,MAAQnC,EAAOmC,KAAM5B,EAAW6B,QAAUpC,EAAOoC,UAPhEnL,EASlB,kBACDgK,EADC,EACDA,MADC,UAGDtP,MAAO,UACPK,QAAS,YACTqQ,cAAe,SAEfC,QAAS,IAPR,sBAQKC,GAAAA,MARL,UAQqC,CACpC7T,gBAAiBuS,EAAMK,QAAQkB,OAAOC,SATvC,sBAWKF,GAAAA,UAA6B,CACjC7T,iBAAiBgU,EAAAA,GAAAA,IAAMzB,EAAMK,QAAQqB,QAAQC,KAAM3B,EAAMK,QAAQkB,OAAOK,iBACxE,UAAW,CACTnU,iBAAiBgU,EAAAA,GAAAA,IAAMzB,EAAMK,QAAQqB,QAAQC,KAAM3B,EAAMK,QAAQkB,OAAOK,gBAAkB5B,EAAMK,QAAQkB,OAAOM,iBAdlH,KAwBGC,GAAwBrH,EAAAA,YAAiB,SAAkByE,EAAShM,GACxE,IAAM0B,GAAQuK,EAAAA,EAAAA,GAAc,CAC1BvK,MAAOsK,EACPL,KAAM,gBAIN3I,EAIEtB,EAJFsB,UADF,EAKItB,EAHFwK,UAAAA,OAFF,MAZuB,KAYvB,IAKIxK,EAFF4M,MAAAA,OAHF,WAKI5M,EADFmN,SAAAA,OAJF,SAMMlN,GAAQwK,EAAAA,EAAAA,GAA8BzK,EAAO+J,IAE7CmC,EAAYrG,EAAAA,WAAiBsG,GAAAA,GAE7BzB,GAAaC,EAAAA,EAAAA,GAAS,GAAI3K,EAAO,CACrCwK,UAAAA,EACAoC,MAAAA,EACAO,SAAAA,EACAb,KAAMJ,GAAmC,SAAtBA,EAAU1C,QAC7B+C,OAAQL,GAAmC,WAAtBA,EAAU1C,UAG3BpH,EAvEkB,SAAAsI,GACxB,IACEtI,EAKEsI,EALFtI,QAMIyJ,EAAQ,CACZzB,KAAM,CAAC,OAFLM,EAJFyC,UAM2B,WAFzBzC,EAHFkC,OAKgD,QAF9ClC,EAFF4B,MAIiE,OAF/D5B,EADF6B,QAGmF,WAErF,OAAO3B,EAAAA,EAAAA,GAAeiB,EAAOO,GAAyBhK,GA4DtCyI,CAAkBH,GAClC,OAAoBI,EAAAA,EAAAA,KAAKuB,IAAc1B,EAAAA,EAAAA,GAAS,CAC9CI,GAAIP,EACJlM,IAAKA,EACLgD,WAAW0J,EAAAA,EAAAA,GAAK5I,EAAQgI,KAAM9I,GAC9BpB,KAnCqB,OAmCfsK,EAAiC,KAAO,MAC9CE,WAAYA,GACXzK,OAgDL,M,YC3IO,SAASmN,GAAyBxD,GACvC,OAAOC,EAAAA,EAAAA,GAAqB,eAAgBD,IAErBE,EAAAA,EAAAA,GAAuB,eAAgB,CAAC,SAAjE,ICFMC,GAAY,CAAC,YAAa,aAqB1BsD,IAAgBjM,EAAAA,EAAAA,IAAO,QAAS,CACpC6I,KAAM,eACNL,KAAM,OACNM,kBAAmB,SAAClK,EAAOmK,GAAR,OAAmBA,EAAOC,OAHzBhJ,CAInB,CACDjF,QAAS,oBAEL+P,GAAY,CAChB1C,QAAS,QAELoC,GAAmB,QA+DzB,GA9D+B/F,EAAAA,YAAiB,SAAmByE,EAAShM,GAC1E,IAAM0B,GAAQuK,EAAAA,EAAAA,GAAc,CAC1BvK,MAAOsK,EACPL,KAAM,iBAIN3I,EAEEtB,EAFFsB,UADF,EAGItB,EADFwK,UAAAA,OAFF,MAEcoB,GAFd,EAIM3L,GAAQwK,EAAAA,EAAAA,GAA8BzK,EAAO+J,IAE7CW,GAAaC,EAAAA,EAAAA,GAAS,GAAI3K,EAAO,CACrCwK,UAAAA,IAGIpI,EArCkB,SAAAsI,GACxB,IACEtI,EACEsI,EADFtI,QAKF,OAAOwI,EAAAA,EAAAA,GAHO,CACZR,KAAM,CAAC,SAEoBgD,GAA0BhL,GA8BvCyI,CAAkBH,GAClC,OAAoBI,EAAAA,EAAAA,KAAKqB,GAAAA,EAAAA,SAA2B,CAClDlN,MAAOiN,GACPhU,UAAuB4S,EAAAA,EAAAA,KAAKuC,IAAe1C,EAAAA,EAAAA,GAAS,CAClDrJ,WAAW0J,EAAAA,EAAAA,GAAK5I,EAAQgI,KAAM9I,GAC9ByJ,GAAIP,EACJlM,IAAKA,EACL4B,KAAMsK,IAAcoB,GAAmB,KAAO,WAC9ClB,WAAYA,GACXzK,S,wBC1CQ,SAASqN,GAAT,GAA+C,IAAnBvH,EAAkB,EAAlBA,QACnC9M,GAA6BC,EAAAA,EAAAA,MACnC,GAA2CwD,EAAAA,EAAAA,YAAWkJ,GAA9CJ,EAAR,EAAQA,QAASP,EAAjB,EAAiBA,QAASU,EAA1B,EAA0BA,aAEpB4H,EAAe,mCAAG,WAAOrG,EAAkBsG,GAAzB,kFACVnU,EAAAA,EAAAA,KADU,iBACIC,OADJ,gBACYL,EAAS,KADrB,QAEtBwL,EAAAA,EAAAA,IACE,oFACA,GACA,yCAHa,UAIVyC,EAJU,kGAKb,uGAA8BuG,EAAaD,IAA3C,4CAPoB,2CAAH,wDAWfC,EAAY,mCAAG,WAAOD,GAAP,qEACfzH,EADe,2CAGT2H,EAAAA,EAAAA,IAAoB3H,EAAS2B,SAAS8F,IAH7B,cAIf7H,GAAa,GAJE,mBAKR,GALQ,wCAOfxB,EAAAA,EAAAA,IAAc,6EAAD,UAAsB,KAAIwD,SAAS5O,KAAKiN,UAPtC,mBAQR,GARQ,0DAUL,GAVK,yDAAH,sDAalB,OACE,UAAC,EAAD,CAAgB7N,GAAI4M,GAAAA,EAApB,WACE,SAAC,GAAD,CAAOoG,cAAY,EAAC,aAAW,eAA/B,UACE,SAAC,GAAD,WACE,SAAC,GAAD,UACG3F,EAAQ7L,KACP,SAACgU,GAAD,OACE,SAACC,GAAA,EAAD,CAEEzT,MAAO,CACL9B,MAAOsV,EAAOtV,MACdmJ,SAAUmM,EAAOtV,MACjB4D,QAAS,sBACTxD,SAAU,OACVC,WAAY,OACZmV,SAAU,SACVC,aAAc,WACdhP,aAAc,qBAEhBiP,MAAM,OACNvE,QAAQ,OAbV,SAeGmE,EAAOrO,OAdHqO,EAAOpP,cAqBxB,SAAC,EAAD,CAAgBpG,GAAI,CAAC6V,GAAYjJ,GAAAA,GAAjC,UACE,SAAC,GAAD,CAAO5K,MAAO,CAAE8T,YAAa,SAA7B,SACGhJ,EAAQtL,KAAI,SAACuU,EAAgBxO,GAC5B,OACE,SAAC,GAAD,CAAWvH,GAAIgW,GAAf,UACE,SAAC,GAAD,CAAUvB,OAAK,EAAf,SACGpH,EAAQ7L,KAAI,SAACgU,GAAD,OACX,SAACC,GAAA,EAAD,CAEEzT,MAAO,CACL9B,MAAOsV,EAAOtV,MACdmJ,SAAUmM,EAAOtV,MACjB4D,QAAS,sBACTxD,SAAU,OACVoV,SAAU,SACVC,aAAc,YAEhBC,MAAM,OAVR,SAYiB,UAAdJ,EAAOpP,IAAsC,6BAApB2P,EAAM,OAC9B,SAAC5T,EAAA,EAAD,CACE8T,SAAS,SAAC5T,GAAA,EAAD,IACTrC,GAAIkW,GACJxU,QAAS,kBAAqB0T,EAAgBW,EAAOhH,SAAUgH,EAAO3P,KAHxE,UAKE,SAACpD,EAAA,EAAD,CAAYhD,GAAImW,GAAhB,wCAGFJ,EAAOP,EAAOpP,KApBXoP,EAAOpP,UAJWmB,aA6C7C,IAAMsO,GAAa,CACjBO,UAAW,QAGPJ,GAAY,CAIhBtV,gBAAiB,WAebwV,GAAsB,CAC1BpS,QAAS,OAGLqS,GAAkB,CACtBxS,MAAO,UACPrD,SAAU,QCtIG,SAAS+V,KACtB,IAAMvV,GAA6BC,EAAAA,EAAAA,MAE3B6M,GAAY0I,EAAAA,EAAAA,MAAZ1I,QACR,GAA+ErJ,EAAAA,EAAAA,YAAWkJ,GAAzEL,GAAjB,EAAQN,QAAR,EAAiBM,YAAYG,EAA7B,EAA6BA,UAAWC,EAAxC,EAAwCA,aAAcR,EAAtD,EAAsDA,UAEtD,GAFA,EAAiEE,WAEnCtI,EAAAA,EAAAA,WAAkB,IAAhD,eAAO6J,EAAP,KAAgBC,EAAhB,KAYA,OAVApJ,EAAAA,EAAAA,YAAU,WACRkI,GAAa,IACb,iBAAC,oGACsBJ,EAAW/L,OAAOuM,IADxC,QAEwB,KADjBzM,EADP,QAEYA,OAAeL,EAAS,MACP,IAAnBK,EAAOA,QAAe6K,EAAAA,EAAAA,IAAc,4GAAwB,IAChE0C,GAAW,GAJjB,0CAAD,KAMC,CAACnB,EAAWK,KAGb,gCACGa,IAAW,SAAC8H,EAAA,EAAD,KACV9H,IACA,UAAC5M,EAAA,EAAD,YACE,UAACA,EAAA,EAAD,CAAK7B,GAAIwW,GAAT,WACE,SAACrU,EAAA,EAAD,CACEC,WAAW,SAACqU,EAAA,EAAD,IACXpF,QAAQ,YACRrR,GAAI0W,GACJhV,QAAS,kBAAYZ,EAAS,UAAD,OAAW8M,EAAX,aAJ/B,mBAQA,SAACpL,EAAA,GAAD,CAAMC,WAAS,EAACC,UAAU,MAAM1C,GAAImI,GAApC,UACE,UAAC3F,EAAA,GAAD,CAAMI,MAAI,EAAC+T,GAAI,GAAf,WACE,SAAC7W,EAAA,EAAD,2CACA,SAACqV,GAAD,CAAkBvH,QAASvM,OAAOuM,MAClC,SAACpL,EAAA,GAAD,CAAMC,WAAS,EAAf,UACE,UAACZ,EAAA,EAAD,CAAK7B,GAAI4W,GAAT,4DACa,SAAC5T,EAAA,EAAD,CAAYhD,GAAI6W,GAAhB,SAAqC7J,kBAS1D,SAAC,EAAD,CAAmBY,QAASvM,OAAOuM,WAO7C,IAAM4I,GAAqB,CACzBM,WAAY,EACZvF,cAAe,GAGXpJ,GAAe,CACnBnE,QAAS,QAGL0S,GAAe,CACnBpW,SAAU,QAGNuW,GAAqB,CACzB7S,QAAS,eACTzD,WAAY,OACZD,SAAU,OACVyW,WAAY,EACZ7S,YAAa,GAGT0S,GAAiB,CACrB5S,QAAS,OACT0E,WAAY,SACZlF,YAAa,EACbW,UAAW,EACX7D,SAAU,QC1FG,SAAS0W,KACtB,IAAMC,EAAS,kBAAM,SAAC/O,EAAA,EAAD,KACfgP,EAAW,kBACf,SAAC,EAAD,WACE,SAAChO,EAAA,EAAD,WACE,SAACmN,GAAD,SASN,OAJA/Q,EAAAA,EAAAA,YAAU,WACR6R,SAASlX,MAAQ,qCAChB,KAEI,SAACqJ,EAAA,EAAD,CAAeC,QAAQ,SAAC0N,EAAD,IAAYzN,UAAU,SAAC0N,EAAD,Q","sources":["components/common/ALTA_ContentsTitle.tsx","components/common/ALTA_AlertMenu.tsx","components/common/ALTA_Alert.tsx","components/common/ALTA_Header.tsx","components/common/ALTA_Inner.tsx","components/common/ALTA_Template.tsx","components/common/ALTA_Tooltip.tsx","modules/colorChart.ts","modules/displayAt.ts","modules/generateAlert.ts","modules/scrollStyle.ts","context/MemberContext.tsx","components/member/ALTA_MemberInvite.tsx","../node_modules/@mui/material/TableContainer/tableContainerClasses.js","../node_modules/@mui/material/TableContainer/TableContainer.js","../node_modules/@mui/material/Table/tableClasses.js","../node_modules/@mui/material/Table/Table.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js","../node_modules/@mui/material/TableRow/tableRowClasses.js","../node_modules/@mui/material/TableRow/TableRow.js","../node_modules/@mui/material/TableBody/tableBodyClasses.js","../node_modules/@mui/material/TableBody/TableBody.js","components/member/ALTA_MemberTable.tsx","components/member/ALTA_MemberContents.tsx","pages/ALTA_Member.tsx"],"sourcesContent":["import { Typography } from '@mui/material';\r\nimport React from 'react';\r\n\r\ntype Props = { children: React.ReactNode };\r\n\r\nexport default function ALTA_ContentsTitle({ children }: Props) {\r\n  return <Typography sx={title}>{children}</Typography>;\r\n}\r\n\r\nconst title = {\r\n  width: '100%',\r\n  height: '50px',\r\n  margin: '20px 0 ',\r\n  textAlign: 'center',\r\n  fontSize: '25px',\r\n  fontWeight: 'bold',\r\n  lineHeight: '50px',\r\n  borderRadius: '5px',\r\n  backgroundColor: 'rgba(138, 172, 158, .5)',\r\n};\r\n","import { useState, useContext, Dispatch, SetStateAction, useEffect } from 'react';\r\nimport { useNavigate, NavigateFunction } from 'react-router-dom';\r\n\r\nimport { Grid, Paper, Box, Typography, Button, MenuItem } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport { readAlertApi } from '../../api/apis';\r\nimport { AlertData } from '../../types';\r\nimport { displayAt } from '../../modules/displayAt';\r\nimport { checkLogin } from '../../modules/LoginTokenChecker';\r\n\r\ntype Props = {\r\n  data: AlertData[];\r\n  setOpen: Dispatch<SetStateAction<boolean>>;\r\n};\r\n\r\nexport default function ALTA_AlertMenu({ data, setOpen }: Props) {\r\n  const navigate: NavigateFunction = useNavigate();\r\n\r\n  const changeChecked = async (d: AlertData): Promise<void> => {\r\n    if (!(await checkLogin()).status) navigate('/');\r\n    await readAlertApi(Number(d.alertId));\r\n    d.isChecked = true;\r\n  };\r\n\r\n  const handleClick = (d: AlertData): void => {\r\n    if (!d.isChecked) {\r\n      changeChecked(d);\r\n    }\r\n    navigate(`${d.url}`);\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {data.map((d) => (\r\n        <MenuItem\r\n          key={d.alertId}\r\n          onClick={() => {\r\n            handleClick(d);\r\n          }}\r\n        >\r\n          <Box sx={codeCommentBoxStyle}>\r\n            <Paper style={paperBoxStyle} elevation={1}>\r\n              <Button startIcon={<CloseIcon />} disableRipple sx={delBtnStyle} />\r\n              <Grid container direction=\"row\" sx={infoGridStyle}>\r\n                <Grid item sx={d.isChecked ? readStyle : null}>\r\n                  <Grid sx={infoStyle}>\r\n                    <Box>\r\n                      <h4>{d.senderNickName}</h4>\r\n                    </Box>\r\n                    <Typography sx={dateStyle}>{displayAt(d.time)}</Typography>\r\n                  </Grid>\r\n                  <Typography sx={commentContentStyle}>{d.content}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </Box>\r\n        </MenuItem>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nconst codeCommentBoxStyle = {\r\n  position: 'relative',\r\n  marginBottom: 3,\r\n};\r\n\r\nconst paperBoxStyle = {\r\n  width: '100%',\r\n  margin: '10px 0',\r\n};\r\n\r\nconst infoGridStyle = {\r\n  paddingLeft: 2,\r\n  paddingRight: 6,\r\n  paddingY: 2,\r\n};\r\n\r\nconst delBtnStyle = {\r\n  color: '#212121',\r\n  position: 'absolute',\r\n  right: '10px',\r\n  top: '35px',\r\n  padding: 0,\r\n  minWidth: '10px',\r\n};\r\n\r\nconst infoStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n};\r\n\r\nconst dateStyle = {\r\n  color: 'gray',\r\n  marginRight: '10px',\r\n  marginTop: '17px',\r\n};\r\n\r\nconst unreadStyle = {\r\n  color: 'primary.main',\r\n};\r\n\r\nconst readStyle = {\r\n  color: 'gray',\r\n  textDecoration: 'line-through',\r\n  cursor: 'default',\r\n};\r\n\r\nconst commentCodeLineStyle = {\r\n  color: 'primary.main',\r\n  cursor: 'pointer',\r\n  marginRight: 1,\r\n  textDecorationLine: 'none',\r\n};\r\n\r\nconst commentStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'flex-start',\r\n  alignItems: 'baseline',\r\n};\r\n\r\nconst commentContentStyle = {\r\n  marginBottom: 2,\r\n};\r\n\r\nconst editCommentInput = {\r\n  paddingBottom: 2,\r\n  paddingLeft: 0,\r\n  width: '70%',\r\n};\r\n\r\nconst adornStyle = {\r\n  color: 'primary.main',\r\n  fontWeight: 'bold',\r\n};\r\n","import { useEffect, useState, useRef, useContext } from 'react';\r\nimport { useNavigate, NavigateFunction } from 'react-router-dom';\r\nimport { Box, Menu, Badge, Tabs, Tab, Typography, IconButton } from '@mui/material';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded';\r\nimport CheckCircleOutlineRoundedIcon from '@mui/icons-material/CheckCircleOutlineRounded';\r\n\r\nimport { AlertData } from '../../types';\r\nimport ALTA_Tooltip from './ALTA_Tooltip';\r\nimport ALTA_AlertMenu from './ALTA_AlertMenu';\r\nimport { readAlertAllApi } from '../../api/apis';\r\nimport { checkLogin } from '../../modules/LoginTokenChecker';\r\n\r\nimport { AlertDataStore } from '../../context/AlertContext';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nexport default function ALTA_Alert() {\r\n  const navigate: NavigateFunction = useNavigate();\r\n  const { alertData, badgeCnt, setBadgeCnt } = useContext(AlertDataStore);\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [tab, setTab] = useState<number>(0);\r\n  const [allRead, setAllRead] = useState<boolean>(false);\r\n\r\n  const anchorRef = useRef<SVGSVGElement>(null);\r\n\r\n  let newAlert: AlertData[] = alertData.filter((d: AlertData): boolean => d.isChecked === false);\r\n\r\n  useEffect((): void => {\r\n    setAllRead(false);\r\n    newAlert = alertData.filter((d: AlertData): boolean => d.isChecked === false);\r\n    setBadgeCnt(newAlert.length);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setBadgeCnt(newAlert.length);\r\n  }, [newAlert]);\r\n\r\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setTab(newValue);\r\n  };\r\n\r\n  const allChecked = async (): Promise<void> => {\r\n    if (!(await checkLogin()).status) navigate('/');\r\n    setAllRead(true);\r\n    await readAlertAllApi();\r\n    setOpen(false);\r\n    setBadgeCnt(0);\r\n    newAlert = alertData.filter((d: AlertData): boolean => d.isChecked === false);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <ALTA_Tooltip title=\"알림\">\r\n        <Badge\r\n          badgeContent={badgeCnt}\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n          overlap=\"circular\"\r\n          sx={badgeStyle}\r\n        >\r\n          <NotificationsIcon\r\n            ref={anchorRef}\r\n            sx={{ fontSize: '40px', cursor: 'pointer' }}\r\n            id=\"basic-button\"\r\n            aria-controls={open ? 'basic-menu' : undefined}\r\n            aria-haspopup=\"true\"\r\n            aria-expanded={open ? 'true' : undefined}\r\n            onClick={() => setOpen(!open)}\r\n          />\r\n        </Badge>\r\n      </ALTA_Tooltip>\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorRef.current}\r\n        open={open}\r\n        onClose={() => setOpen(!open)}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'basic-button',\r\n        }}\r\n      >\r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n          <Tabs value={tab} onChange={handleChange} aria-label=\"basic tabs example\">\r\n            <Tab label=\"안읽은 알림만 보기\" {...a11yProps(0)} />\r\n            <Tab label=\"전체 알림 보기\" {...a11yProps(1)} />\r\n          </Tabs>\r\n        </Box>\r\n        <Box sx={menuStyle}>\r\n          <TabPanel value={tab} index={0}>\r\n            {badgeCnt ? (\r\n              <Box>\r\n                전체 읽음\r\n                {allRead ? (\r\n                  <IconButton>{<CheckCircleRoundedIcon sx={resolvedStyle} />}</IconButton>\r\n                ) : (\r\n                  <IconButton onClick={allChecked}>{<CheckCircleOutlineRoundedIcon sx={unresolvedStyle} />}</IconButton>\r\n                )}\r\n                <ALTA_AlertMenu data={newAlert} setOpen={setOpen} />\r\n              </Box>\r\n            ) : (\r\n              <Typography sx={{ color: 'error.main', fontSize: '20px' }}>새로운 알림이 없습니다</Typography>\r\n            )}\r\n          </TabPanel>\r\n          <TabPanel value={tab} index={1}>\r\n            <ALTA_AlertMenu data={alertData} setOpen={setOpen} />\r\n          </TabPanel>\r\n        </Box>\r\n      </Menu>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst menuStyle = {\r\n  width: '35rem',\r\n  display: 'flex',\r\n  height: '30rem',\r\n};\r\n\r\nconst badgeStyle = {\r\n  '& .MuiBadge-badge': {\r\n    color: 'text.primary',\r\n    backgroundColor: 'secondary.main',\r\n  },\r\n};\r\n\r\nconst resolvedStyle = {\r\n  color: 'primary.main',\r\n};\r\n\r\nconst unresolvedStyle = {\r\n  color: 'gray',\r\n};\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: number) {\r\n  return {\r\n    'id': `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n","import { useNavigate } from 'react-router-dom';\r\nimport styled from '@emotion/styled';\r\nimport { AppBar, Box } from '@mui/material';\r\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\n\r\nimport Logo from '../../images/logo.webp';\r\n\r\nimport ALTA_Tooltip from './ALTA_Tooltip';\r\nimport ALTA_Alert from './ALTA_Alert';\r\n\r\nexport default function ALTA_Header() {\r\n  const navigate = useNavigate();\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('jwt');\r\n    localStorage.removeItem('refresh');\r\n    localStorage.removeItem('userData');\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <Box sx={wrapperStyle}>\r\n      <AppBar sx={navStyle}>\r\n        <StyledImg src={Logo} alt=\"\" />\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <StyledA>\r\n            <ALTA_Alert />\r\n          </StyledA>\r\n          <ALTA_Tooltip title=\"마이 페이지\">\r\n            <StyledA onClick={() => navigate('/mypage')}>\r\n              <AccountBoxIcon sx={{ fontSize: '40px', cursor: 'pointer' }} />\r\n            </StyledA>\r\n          </ALTA_Tooltip>\r\n          <ALTA_Tooltip title=\"로그아웃\">\r\n            <StyledA onClick={logout}>\r\n              <LogoutIcon sx={{ fontSize: '40px', cursor: 'pointer' }} />\r\n            </StyledA>\r\n          </ALTA_Tooltip>\r\n        </Box>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst wrapperStyle = {\r\n  height: '55px',\r\n};\r\n\r\nconst navStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  height: '55px',\r\n  padding: '0 20px',\r\n};\r\n\r\nconst StyledImg = styled.img`\r\n  width: 100px;\r\n`;\r\n\r\nconst StyledA = styled.button`\r\n  all: unset;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  margin-left: 10px;\r\n`;\r\n","import { Box } from '@mui/material';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\nexport default function ALTA_Inner({ children }: Props) {\r\n  return (\r\n    <Box className=\"ALTAInner\" sx={ALTAInner_style}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst ALTAInner_style = {\r\n  minWidth: '900px',\r\n  maxWidth: '900px',\r\n  height: '100%',\r\n  margin: '0 auto',\r\n  backgroundColor: 'inherit',\r\n};\r\n","import React from 'react';\r\nimport { Box } from '@mui/material';\r\n\r\ntype Props = {\r\n  header: React.ReactNode;\r\n  contents: React.ReactNode;\r\n};\r\n\r\nexport default function ALTA_Template({ header, contents }: Props) {\r\n  return (\r\n    <Box sx={layoutStyle}>\r\n      <Box sx={headerStyle}>{header}</Box>\r\n      <Box sx={contentsStyle}>{contents}</Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst layoutStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  height: '100vh',\r\n};\r\n\r\nconst headerStyle = {\r\n  flex: '0 1 auto',\r\n  width: '100%',\r\n};\r\nconst contentsStyle = {\r\n  flex: '1 1 auto',\r\n  overflowY: 'scroll',\r\n  scrollbarWidth: 'none',\r\n};\r\n","import { Tooltip, TooltipProps, tooltipClasses } from '@mui/material';\r\nimport { blackColor } from '../../modules/colorChart';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst CustomTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(() => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: blackColor,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: blackColor,\r\n  },\r\n}));\r\n\r\ntype Props = {\r\n  children: any;\r\n  title: string;\r\n};\r\n\r\nexport default function ALTA_Tooltip({ children, title }: Props) {\r\n  return <CustomTooltip title={title}>{children}</CustomTooltip>;\r\n}\r\n","export const mainColor = '#6d9886';\r\nexport const subColor = '#d9cab3';\r\nexport const errorColor = '#c99f9f';\r\nexport const blackColor = '#212121';\r\nexport const whiteColor = '#f6f6f6';\r\n","export function displayAt(value: Date) {\r\n  const today = new Date();\r\n  const timeValue = new Date(value);\r\n  const minutes = Math.floor((today.getTime() - timeValue.getTime()) / 1000 / 60);\r\n  if (minutes < 1) return `방금 전`;\r\n  if (minutes < 60) return `${minutes}분 전`;\r\n  const hours = Math.floor(minutes / 60);\r\n  if (hours < 24) return `${hours}시간 전`;\r\n  const days = Math.floor(hours / 24);\r\n  if (days < 7) return `${days}일 전`;\r\n  else return `${timeValue.getFullYear()}. ${timeValue.getMonth() + 1}. ${timeValue.getDate()}`;\r\n  // const weeks = Math.floor(days / 7);\r\n  // if (weeks < 5) return `${weeks}주 전`;\r\n  // const months = Math.floor(days / 30);\r\n  // if (months < 12) return `${months}개월 전`;\r\n  // const years = Math.floor(days / 365);\r\n  // return `${years}년 전`;\r\n}\r\n\r\nexport function renameDate(value: Date) {\r\n  const timeValue = new Date(value);\r\n  return `${timeValue.getFullYear()}. ${timeValue.getMonth() + 1}. ${timeValue.getDate()}`;\r\n}\r\n","import { stringify } from 'querystring';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport '../style/AlertStyle.css';\r\nimport { mainColor, whiteColor, blackColor, errorColor } from './colorChart';\r\n\r\nexport function generateCheck(title: string, text: string, callback: () => void | Promise<void> | null) {\r\n  Swal.fire({\r\n    title,\r\n    text,\r\n    showConfirmButton: true,\r\n    icon: 'success',\r\n    iconColor: mainColor,\r\n    confirmButtonColor: mainColor,\r\n    confirmButtonText: '확인',\r\n    color: blackColor,\r\n    background: whiteColor,\r\n  }).then(() => {\r\n    if (callback) callback();\r\n  });\r\n}\r\n\r\nexport function generateError(title: string, text: string, callback?: any) {\r\n  Swal.fire({\r\n    title,\r\n    text,\r\n    icon: 'error',\r\n    iconColor: errorColor,\r\n    color: blackColor,\r\n    background: whiteColor,\r\n    showConfirmButton: true,\r\n    confirmButtonColor: errorColor,\r\n    confirmButtonText: '돌아가기',\r\n  }).then(() => {\r\n    if (callback) callback();\r\n  });\r\n}\r\n\r\nexport function generateTimer(title: string, text: string) {\r\n  Swal.fire({\r\n    title,\r\n    text,\r\n    color: blackColor,\r\n    iconColor: mainColor,\r\n    background: whiteColor,\r\n    allowOutsideClick: false,\r\n    showCancelButton: false,\r\n    timerProgressBar: true,\r\n    didOpen: async () => {\r\n      Swal.showLoading();\r\n    },\r\n  });\r\n}\r\n\r\nexport function generateConfirm(\r\n  title: string,\r\n  text: string,\r\n  subTitle: string,\r\n  subText: string,\r\n  callback: () => Promise<any> | null,\r\n) {\r\n  Swal.fire({\r\n    title,\r\n    text,\r\n    icon: 'warning',\r\n    showCancelButton: true,\r\n    confirmButtonColor: mainColor,\r\n    confirmButtonText: '확인',\r\n    cancelButtonColor: errorColor,\r\n    color: blackColor,\r\n    background: whiteColor,\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      Swal.fire({\r\n        title: `${subTitle}`,\r\n        text: `${subText}`,\r\n        icon: 'success',\r\n        showConfirmButton: true,\r\n        confirmButtonColor: mainColor,\r\n        confirmButtonText: '확인',\r\n        color: blackColor,\r\n        background: whiteColor,\r\n      }).then(() => {\r\n        if (callback) callback();\r\n      });\r\n    }\r\n  });\r\n}\r\n","import { mainColor, subColor } from './colorChart';\r\n\r\nconst scrollStyle = {\r\n  '&::-webkit-scrollbar': {\r\n    width: '3px',\r\n    backgroundColor: mainColor,\r\n    borderRadius: '10px',\r\n  },\r\n  '&::-webkit-scrollbar-thumb': {\r\n    backgroundColor: subColor,\r\n    borderRadius: '10px',\r\n  },\r\n};\r\nexport default scrollStyle;\r\n","import React, { useState } from 'react';\r\nimport { Member, Column, ContextProps } from '../types';\r\nimport { memberManagementDataApi } from '../api/apis';\r\nimport { checkLogin } from '../modules/LoginTokenChecker';\r\n\r\n//Context 인스턴스 생성\r\nconst defaultValue: defaultValueType = {\r\n  members: [],\r\n  setMembers: () => null,\r\n  studyCode: '',\r\n  setStudyCode: () => null,\r\n  maxPeople: 0,\r\n  setMaxPeople: () => null,\r\n  getMembers: () => null,\r\n  columns: [],\r\n  setColumns: () => null,\r\n  isRefresh: false,\r\n  setIsRefresh: () => null,\r\n};\r\nexport const MemberStore = React.createContext(defaultValue);\r\n\r\n//Context Provider 컴포넌트\r\nexport default function MemberProvider({ children }: ContextProps) {\r\n  const [members, setMembers] = useState<Member[]>([]);\r\n  const [studyCode, setStudyCode] = useState<string>('');\r\n  const [maxPeople, setMaxPeople] = useState<number>(0);\r\n  const [columns, setColumns] = useState<Column[]>([\r\n    // gmail 은 도메인 제외 최대 30자 제한 + 기본적으론 도메인 제외 최대 64자\r\n    { id: 'nickname', label: '닉네임', width: 30 },\r\n    { id: 'email', label: '이메일', width: 150 },\r\n    { id: 'registrationDate', label: '가입일', width: 40 },\r\n    { id: 'state', label: '상태', width: 20 },\r\n    // { id: 'score', label: '점수', width: 15 },\r\n    // { id: 'out', label: '강퇴', width: 30 }\r\n  ]);\r\n\r\n  const [isRefresh, setIsRefresh] = useState<boolean>(false);\r\n\r\n  const getMembers = async (studyId: number) => {\r\n    const loginStatus = await checkLogin();\r\n    if (!loginStatus.status) return { status: -1, message: 'login token error' };\r\n\r\n    try {\r\n      const res = await memberManagementDataApi(studyId);\r\n      setMembers(res.members);\r\n      setStudyCode(res.studyCode);\r\n      setMaxPeople(res.studyMaxPeople);\r\n      return { status: 1, message: 'success get members data' };\r\n    } catch (err) {\r\n      return { status: -2, message: 'fail get members data' };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    members,\r\n    setMembers,\r\n    studyCode,\r\n    setStudyCode,\r\n    maxPeople,\r\n    setMaxPeople,\r\n    getMembers,\r\n    columns,\r\n    setColumns,\r\n    isRefresh,\r\n    setIsRefresh,\r\n  };\r\n  return <MemberStore.Provider value={value}>{children}</MemberStore.Provider>;\r\n}\r\n//Context 기본값 타입\r\ntype defaultValueType = {\r\n  maxPeople: number;\r\n  setMaxPeople: (newData: number) => void;\r\n  members: Member[];\r\n  setMembers: (newData: Member[]) => void;\r\n  studyCode: string;\r\n  setStudyCode: (newData: string) => void;\r\n  getMembers: (studyId: number) => any;\r\n  columns: Column[];\r\n  setColumns: (newData: Column[]) => void;\r\n  isRefresh: boolean;\r\n  setIsRefresh: (newData: boolean) => void;\r\n};\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useNavigate, NavigateFunction } from 'react-router-dom';\r\n\r\nimport {\r\n  Grid,\r\n  Box,\r\n  TextField,\r\n  Button,\r\n  InputLabel,\r\n  Autocomplete,\r\n  CircularProgress,\r\n  Typography,\r\n  AutocompleteRenderInputParams,\r\n} from '@mui/material';\r\n\r\nimport { sendMailApi, searchMemberApi } from '../../api/apis';\r\nimport { userList, defaultUser } from '../../types';\r\nimport { MemberStore } from '../../context/MemberContext';\r\nimport { checkLogin } from '../../modules/LoginTokenChecker';\r\nimport { generateCheck, generateError, generateTimer } from '../../modules/generateAlert';\r\n\r\nimport ALTA_ContentsTitle from '../common/ALTA_ContentsTitle';\r\n\r\nexport default function ALTA_MemberList({ studyId }: { studyId: number }) {\r\n  const navigate: NavigateFunction = useNavigate();\r\n  const { setIsRefresh, members, maxPeople } = useContext(MemberStore);\r\n\r\n  const [searchOpen, setSearchOpen] = useState<boolean>(false);\r\n  const [inputValue, setInputValue] = useState<string>('');\r\n  const [userList, setUserList] = useState<userList[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(searchOpen && userList.length === 0);\r\n  const [selectUser, setSelectUser] = useState<userList>(defaultUser);\r\n\r\n  const searchName = async (nickname: string): Promise<void> => {\r\n    setInputValue(nickname);\r\n    if (!(await checkLogin()).status) navigate('/');\r\n    setLoading(true);\r\n    try {\r\n      const res = await searchMemberApi(nickname);\r\n      setUserList(res);\r\n      setLoading(false);\r\n      const select = userList.find((usr) => usr.nickname === nickname);\r\n      if (select) {\r\n        setSelectUser(select);\r\n      }\r\n    } catch {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInvite = async (): Promise<void> => {\r\n    if (!(await checkLogin()).status) navigate('/');\r\n    else {\r\n      generateTimer('잠시 기다려 주세요', `${selectUser?.nickname} 님에게 보낼 초대메일을 작성중입니다`);\r\n      if (inputValue) {\r\n        if (selectUser.email) {\r\n          try {\r\n            const res = await sendMailApi(studyId, parseInt(selectUser.id));\r\n            generateCheck('초대 완료', `${selectUser.nickname} 님에게 초대 메일을 발송하였습니다`, () =>\r\n              setIsRefresh(true),\r\n            );\r\n          } catch (err: any) {\r\n            generateError(`초대를 보낼 수 없습니다`, `${err.response.data.message}`);\r\n          }\r\n        } else {\r\n          generateError(`${selectUser.nickname} 님의 이메일이 존재하지 않습니다.`, ``);\r\n        }\r\n      } else {\r\n        generateError(`초대할 사람의 닉네임을 입력해주세요`, ``);\r\n      }\r\n      setInputValue('');\r\n      setUserList([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={inviteBoxStyle}>\r\n      <ALTA_ContentsTitle> 멤버 초대 </ALTA_ContentsTitle>\r\n      <Box sx={inputBoxStyle}>\r\n        <Grid container columns={14} spacing={2}>\r\n          <Grid item xs={11}>\r\n            <Autocomplete\r\n              open={searchOpen}\r\n              onOpen={(): void => {\r\n                setSearchOpen(true);\r\n              }}\r\n              onClose={(): void => {\r\n                setSearchOpen(false);\r\n              }}\r\n              isOptionEqualToValue={(option, value): boolean => option === value}\r\n              // 자동완성 기능으로 특정 옵션을 선택한 경우\r\n              onChange={(e: React.SyntheticEvent<Element, Event>, obj: userList | null): void => {\r\n                if (obj) {\r\n                  setSelectUser(obj);\r\n                  setInputValue(obj.nickname);\r\n                }\r\n              }}\r\n              onInputChange={(e: React.SyntheticEvent<Element, Event>): void => {\r\n                if (e) searchName((e.target as HTMLInputElement).value);\r\n              }}\r\n              inputValue={inputValue}\r\n              getOptionLabel={(option: userList): string => option.nickname}\r\n              options={[selectUser, ...userList]}\r\n              noOptionsText={'일치하는 데이터가 없습니다'}\r\n              loading={loading}\r\n              renderInput={(params: AutocompleteRenderInputParams): JSX.Element => (\r\n                <Grid container alignItems=\"center\">\r\n                  <Grid item xs={2} sx={labelStyle}>\r\n                    <InputLabel htmlFor=\"nickname-input\" sx={nameLabelStyle}>\r\n                      닉네임\r\n                    </InputLabel>\r\n                  </Grid>\r\n                  <Grid item xs={10}>\r\n                    <TextField\r\n                      {...params}\r\n                      id=\"nickname-input\"\r\n                      placeholder=\"초대할 사람의 닉네임을 입력해주세요\"\r\n                      size=\"small\"\r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <React.Fragment>\r\n                            {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                          </React.Fragment>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3} sx={btnStyle}>\r\n            <Button variant=\"contained\" sx={inviteBtnStyle} onClick={handleInvite}>\r\n              초대\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst inviteBoxStyle = {\r\n  paddingBottom: 3,\r\n};\r\n\r\n// default btn color = primary'rgb(109,152,134,1)' / hover = 'rgb(76, 106, 93)'\r\n\r\nconst inviteBtnStyle = {\r\n  'backgroundColor': 'secondary.main',\r\n  'color': '#000000',\r\n  '&:hover': {\r\n    backgroundColor: '#AFA291',\r\n  },\r\n};\r\n\r\nconst messageStyle = {\r\n  fontSize: '17px',\r\n  fontWeight: 'bold',\r\n};\r\n\r\nconst nameLabelStyle = {\r\n  fontWeight: 'bold',\r\n  color: '#000000',\r\n};\r\n\r\nconst labelStyle = {\r\n  paddingRight: 2,\r\n  textAlign: 'right',\r\n};\r\n\r\nconst btnStyle = {\r\n  paddingLeft: 3,\r\n  alignItems: 'left',\r\n};\r\n\r\nconst inputBoxStyle = {\r\n  backgroundColor: '#ffffff',\r\n  height: '4.5rem',\r\n  alignItems: 'center',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  marginTop: 4,\r\n};\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\n\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport TableContext from './TableContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableUtilityClass } from './tableClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\n\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': _extends({}, theme.typography.body2, {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  })\n}, ownerState.stickyHeader && {\n  borderCollapse: 'separate'\n}));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    padding = 'normal',\n    size = 'medium',\n    stickyHeader = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    padding,\n    size,\n    stickyHeader\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, _extends({\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE11.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Table;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\n\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableRowUtilityClass(slot) {\n  return generateUtilityClass('MuiTableRow', slot);\n}\nconst tableRowClasses = generateUtilityClasses('MuiTableRow', ['root', 'selected', 'hover', 'head', 'footer']);\nexport default tableRowClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\", \"hover\", \"selected\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableRowClasses, { getTableRowUtilityClass } from './tableRowClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    selected,\n    hover,\n    head,\n    footer\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', hover && 'hover', head && 'head', footer && 'footer']\n  };\n  return composeClasses(slots, getTableRowUtilityClass, classes);\n};\n\nconst TableRowRoot = styled('tr', {\n  name: 'MuiTableRow',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.head && styles.head, ownerState.footer && styles.footer];\n  }\n})(({\n  theme\n}) => ({\n  color: 'inherit',\n  display: 'table-row',\n  verticalAlign: 'middle',\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  [`&.${tableRowClasses.hover}:hover`]: {\n    backgroundColor: theme.palette.action.hover\n  },\n  [`&.${tableRowClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n    }\n  }\n}));\nconst defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nconst TableRow = /*#__PURE__*/React.forwardRef(function TableRow(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableRow'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    hover = false,\n    selected = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n\n  const ownerState = _extends({}, props, {\n    component,\n    hover,\n    selected,\n    head: tablelvl2 && tablelvl2.variant === 'head',\n    footer: tablelvl2 && tablelvl2.variant === 'footer'\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableRowRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    role: component === defaultComponent ? null : 'row',\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   * @default false\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   * @default false\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableRow;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableBodyUtilityClass(slot) {\n  return generateUtilityClass('MuiTableBody', slot);\n}\nconst tableBodyClasses = generateUtilityClasses('MuiTableBody', ['root']);\nexport default tableBodyClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableBodyUtilityClass } from './tableBodyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableBodyUtilityClass, classes);\n};\n\nconst TableBodyRoot = styled('tbody', {\n  name: 'MuiTableBody',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-row-group'\n});\nconst tablelvl2 = {\n  variant: 'body'\n};\nconst defaultComponent = 'tbody';\nconst TableBody = /*#__PURE__*/React.forwardRef(function TableBody(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableBody'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableBodyRoot, _extends({\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableBody;","import { useContext } from 'react';\r\nimport { useNavigate, NavigateFunction } from 'react-router-dom';\r\n\r\nimport { Table, TableBody, TableContainer, TableHead, TableRow, TableCell, Button, Typography } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport { checkLogin } from '../../modules/LoginTokenChecker';\r\nimport { generateConfirm, generateError } from '../../modules/generateAlert';\r\nimport scrollStyle from '../../modules/scrollStyle';\r\nimport { deleteInvitationApi } from '../../api/apis';\r\nimport { Member, Column } from '../../types';\r\nimport { MemberStore } from '../../context/MemberContext';\r\n\r\ntype Props = {\r\n  studyId: number;\r\n};\r\n\r\nexport default function ALTA_MemberTable({ studyId }: Props) {\r\n  const navigate: NavigateFunction = useNavigate();\r\n  const { columns, members, setIsRefresh } = useContext(MemberStore);\r\n\r\n  const handleDelInvite = async (nickname: string, memberId: string): Promise<void> => {\r\n    if (!(await checkLogin()).status) navigate('/');\r\n    generateConfirm(\r\n      '정말 초대를 취소하시겠습니까?',\r\n      '',\r\n      '초대 취소 완료',\r\n      `${nickname} 님의 초대가 취소되었습니다.`,\r\n      async (): Promise<boolean> => deleteInvite(memberId),\r\n    );\r\n  };\r\n\r\n  const deleteInvite = async (memberId: string): Promise<boolean> => {\r\n    if (studyId) {\r\n      try {\r\n        await deleteInvitationApi(studyId, parseInt(memberId));\r\n        setIsRefresh(true);\r\n        return true;\r\n      } catch (err: any) {\r\n        generateError('초대 취소에 실패하였습니다', `${err.response.data.message}`);\r\n        return false;\r\n      }\r\n    } else return false;\r\n  };\r\n\r\n  return (\r\n    <TableContainer sx={scrollStyle}>\r\n      <Table stickyHeader aria-label=\"sticky table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map(\r\n              (column: Column): JSX.Element => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  style={{\r\n                    width: column.width,\r\n                    maxWidth: column.width,\r\n                    padding: '10px 20px 10px 20px',\r\n                    fontSize: '14px',\r\n                    fontWeight: 'bold',\r\n                    overflow: 'hidden',\r\n                    textOverflow: 'ellipsis',\r\n                    borderBottom: '1px solid #6d9886',\r\n                  }}\r\n                  align=\"left\"\r\n                  variant=\"head\"\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ),\r\n            )}\r\n          </TableRow>\r\n        </TableHead>\r\n      </Table>\r\n      <TableContainer sx={[tableStyle, scrollStyle]}>\r\n        <Table style={{ tableLayout: 'fixed' }}>\r\n          {members.map((member: Member, index: number): JSX.Element => {\r\n            return (\r\n              <TableBody sx={bodyStyle} key={index}>\r\n                <TableRow hover>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      style={{\r\n                        width: column.width,\r\n                        maxWidth: column.width,\r\n                        padding: '10px 20px 10px 20px',\r\n                        fontSize: '12px',\r\n                        overflow: 'hidden',\r\n                        textOverflow: 'ellipsis',\r\n                      }}\r\n                      align=\"left\"\r\n                    >\r\n                      {column.id === 'state' && member['state'] === '초대대기' ? (\r\n                        <Button\r\n                          endIcon={<CloseIcon />}\r\n                          sx={inviteClearBtnStyle}\r\n                          onClick={(): Promise<void> => handleDelInvite(member.nickname, member.id)}\r\n                        >\r\n                          <Typography sx={inviteTextStyle}>초대대기</Typography>\r\n                        </Button>\r\n                      ) : (\r\n                        member[column.id]\r\n                      )}\r\n                      {/* {column.id === 'out' ? (\r\n                          <Button sx={outBtnStyle} variant=\"contained\">\r\n                            강퇴\r\n                          </Button>\r\n                        ) : (\r\n                          member[column.id]\r\n                        )} */}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableBody>\r\n            );\r\n          })}\r\n        </Table>\r\n      </TableContainer>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nconst tableStyle = {\r\n  maxHeight: '38vh',\r\n};\r\n\r\nconst bodyStyle = {\r\n  // '&:nth-child(even)': {\r\n  //   backgroundColor: '#f2f2f2',\r\n  // },\r\n  backgroundColor: '#ffffff',\r\n};\r\n\r\nconst outBtnStyle = {\r\n  'padding': '0px',\r\n  'backgroundColor': 'error.main',\r\n  'minWidth': '2.5rem',\r\n  'maxWidth': '2.5rem',\r\n  'color': '#000000',\r\n  'fontSize': '12px',\r\n  '&:hover': {\r\n    backgroundColor: '#A28080',\r\n  },\r\n};\r\n\r\nconst inviteClearBtnStyle = {\r\n  padding: '0px',\r\n};\r\n\r\nconst inviteTextStyle = {\r\n  color: '#212121',\r\n  fontSize: '12px',\r\n};\r\n","import { useState, useContext, useEffect } from 'react';\r\nimport { useNavigate, useParams, NavigateFunction } from 'react-router-dom';\r\n\r\nimport { Grid, Box, Typography, Button } from '@mui/material';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\n\r\nimport { MemberStore } from '../../context/MemberContext';\r\nimport { generateError } from '../../modules/generateAlert';\r\n\r\nimport ALTA_Loading from '../common/ALTA_Loading';\r\nimport ALTA_MemberInvite from './ALTA_MemberInvite';\r\nimport ALTA_MemberTable from './ALTA_MemberTable';\r\nimport ALTA_ContentsTitle from '../common/ALTA_ContentsTitle';\r\n\r\ntype ParamType = {\r\n  studyId: string | undefined;\r\n};\r\n\r\nexport default function ALTA_MemberContents() {\r\n  const navigate: NavigateFunction = useNavigate();\r\n\r\n  const { studyId } = useParams<ParamType>();\r\n  const { members, getMembers, isRefresh, setIsRefresh, studyCode, maxPeople } = useContext(MemberStore);\r\n\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect((): void => {\r\n    setIsRefresh(false);\r\n    (async function (): Promise<void> {\r\n      const status = await getMembers(Number(studyId));\r\n      if (status.status === -1) navigate('/');\r\n      else if (status.status === -2) generateError('멤버 정보를 불러오는데 실패하였습니다', '');\r\n      else setLoading(false);\r\n    })();\r\n  }, [isRefresh, studyId]);\r\n\r\n  return (\r\n    <>\r\n      {loading && <ALTA_Loading />}\r\n      {!loading && (\r\n        <Box>\r\n          <Box sx={memberListBoxStyle}>\r\n            <Button\r\n              startIcon={<ChevronLeftIcon />}\r\n              variant=\"contained\"\r\n              sx={backBtnStyle}\r\n              onClick={(): void => navigate(`/study/${studyId}/detail`)}\r\n            >\r\n              Back\r\n            </Button>\r\n            <Grid container direction=\"row\" sx={wrapperStyle}>\r\n              <Grid item sm={12}>\r\n                <ALTA_ContentsTitle> 멤버 관리 </ALTA_ContentsTitle>\r\n                <ALTA_MemberTable studyId={Number(studyId)} />\r\n                <Grid container>\r\n                  <Box sx={studyCodeStyle}>\r\n                    스터디 고유 코드 :<Typography sx={studyCodeTextStyle}>{studyCode}</Typography>\r\n                    {/* <Button variant=\"contained\" sx={refreshBtnStyle}>\r\n                코드 갱신\r\n              </Button> */}\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <ALTA_MemberInvite studyId={Number(studyId)} />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst memberListBoxStyle = {\r\n  paddingTop: 4,\r\n  paddingBottom: 2,\r\n};\r\n\r\nconst wrapperStyle = {\r\n  display: 'flex',\r\n};\r\n\r\nconst backBtnStyle = {\r\n  fontSize: '15px',\r\n};\r\n\r\nconst studyCodeTextStyle = {\r\n  display: 'inline-block',\r\n  fontWeight: 'bold',\r\n  fontSize: '17px',\r\n  marginLeft: 2,\r\n  marginRight: 3,\r\n};\r\n\r\nconst studyCodeStyle = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  paddingLeft: 1,\r\n  marginTop: 3,\r\n  fontSize: '17px',\r\n};\r\n\r\nconst refreshBtnStyle = {\r\n  'backgroundColor': 'secondary.main',\r\n  'color': '#000000',\r\n  '&:hover': {\r\n    backgroundColor: '#AFA291',\r\n  },\r\n};\r\n","import { useEffect } from 'react';\r\nimport MemberContext from '../context/MemberContext';\r\n\r\nimport ALTA_Template from '../components/common/ALTA_Template';\r\nimport ALTA_Inner from '../components/common/ALTA_Inner';\r\nimport ALTA_Header from '../components/common/ALTA_Header';\r\nimport ALTA_MemberContents from '../components/member/ALTA_MemberContents';\r\n\r\nexport default function ALTA_Member() {\r\n  const Header = () => <ALTA_Header></ALTA_Header>;\r\n  const Contents = () => (\r\n    <MemberContext>\r\n      <ALTA_Inner>\r\n        <ALTA_MemberContents />\r\n      </ALTA_Inner>\r\n    </MemberContext>\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.title = 'ALTA | 멤버 관리';\r\n  }, []);\r\n\r\n  return <ALTA_Template header={<Header />} contents={<Contents />} />;\r\n}\r\n"],"names":["ALTA_ContentsTitle","children","sx","title","width","height","margin","textAlign","fontSize","fontWeight","lineHeight","borderRadius","backgroundColor","ALTA_AlertMenu","data","setOpen","navigate","useNavigate","changeChecked","d","checkLogin","status","readAlertApi","Number","alertId","isChecked","map","MenuItem","onClick","url","handleClick","Box","codeCommentBoxStyle","Paper","style","paperBoxStyle","elevation","Button","startIcon","Close","disableRipple","delBtnStyle","Grid","container","direction","infoGridStyle","item","readStyle","infoStyle","senderNickName","Typography","dateStyle","displayAt","time","commentContentStyle","content","position","marginBottom","paddingLeft","paddingRight","paddingY","color","right","top","padding","minWidth","display","justifyContent","marginRight","marginTop","textDecoration","cursor","ALTA_Alert","useContext","AlertDataStore","alertData","badgeCnt","setBadgeCnt","useState","open","tab","setTab","allRead","setAllRead","anchorRef","useRef","newAlert","filter","useEffect","length","allChecked","readAlertAllApi","ALTA_Tooltip","Badge","badgeContent","anchorOrigin","vertical","horizontal","overlap","badgeStyle","Notifications","ref","id","undefined","Menu","anchorEl","current","onClose","MenuListProps","borderBottom","borderColor","Tabs","value","onChange","event","newValue","Tab","label","a11yProps","menuStyle","TabPanel","index","IconButton","CheckCircleRounded","resolvedStyle","CheckCircleOutlineRounded","unresolvedStyle","props","other","role","hidden","p","ALTA_Header","wrapperStyle","AppBar","navStyle","StyledImg","src","Logo","alt","alignItems","StyledA","AccountBox","localStorage","removeItem","Logout","flexDirection","styled","ALTA_Inner","className","ALTAInner_style","maxWidth","ALTA_Template","header","contents","layoutStyle","headerStyle","contentsStyle","flex","overflowY","scrollbarWidth","CustomTooltip","arrow","classes","popper","tooltipClasses","blackColor","mainColor","subColor","errorColor","whiteColor","today","Date","timeValue","minutes","Math","floor","getTime","hours","days","getFullYear","getMonth","getDate","generateCheck","text","callback","Swal","showConfirmButton","icon","iconColor","confirmButtonColor","confirmButtonText","background","then","generateError","generateTimer","allowOutsideClick","showCancelButton","timerProgressBar","didOpen","generateConfirm","subTitle","subText","cancelButtonColor","result","isConfirmed","scrollStyle","defaultValue","members","setMembers","studyCode","setStudyCode","maxPeople","setMaxPeople","getMembers","columns","setColumns","isRefresh","setIsRefresh","MemberStore","React","MemberProvider","studyId","message","memberManagementDataApi","res","studyMaxPeople","Provider","ALTA_MemberList","searchOpen","setSearchOpen","inputValue","setInputValue","userList","setUserList","loading","setLoading","defaultUser","selectUser","setSelectUser","searchName","nickname","searchMemberApi","select","find","usr","handleInvite","email","sendMailApi","parseInt","response","inviteBoxStyle","inputBoxStyle","spacing","xs","Autocomplete","onOpen","isOptionEqualToValue","option","e","obj","onInputChange","target","getOptionLabel","options","noOptionsText","renderInput","params","labelStyle","InputLabel","htmlFor","nameLabelStyle","TextField","placeholder","size","InputProps","endAdornment","CircularProgress","btnStyle","variant","inviteBtnStyle","paddingBottom","getTableContainerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableContainerRoot","name","overridesResolver","styles","root","overflowX","inProps","useThemeProps","component","_objectWithoutPropertiesLoose","ownerState","_extends","composeClasses","useUtilityClasses","_jsx","as","clsx","getTableUtilityClass","TableRoot","stickyHeader","theme","borderCollapse","borderSpacing","typography","body2","palette","secondary","captionSide","defaultComponent","slots","table","TableContext","getTableHeadUtilityClass","TableHeadRoot","tablelvl2","Tablelvl2Context","getTableRowUtilityClass","TableRowRoot","head","footer","verticalAlign","outline","tableRowClasses","action","hover","alpha","primary","main","selectedOpacity","hoverOpacity","TableRow","selected","getTableBodyUtilityClass","TableBodyRoot","ALTA_MemberTable","handleDelInvite","memberId","deleteInvite","deleteInvitationApi","column","TableCell","overflow","textOverflow","align","tableStyle","tableLayout","member","bodyStyle","endIcon","inviteClearBtnStyle","inviteTextStyle","maxHeight","ALTA_MemberContents","useParams","ALTA_Loading","memberListBoxStyle","ChevronLeft","backBtnStyle","sm","studyCodeStyle","studyCodeTextStyle","paddingTop","marginLeft","ALTA_Member","Header","Contents","document"],"sourceRoot":""}