{"version":3,"file":"static/js/9908.b9bf2bf5.chunk.js","mappings":"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","sources":["components/common/ALTA_Dialog.tsx","components/code/ALTA_CodeEditor.tsx","components/code/ALTA_CodeTree.tsx","components/code/ALTA_CodeCommentCard.tsx","components/code/ALTA_CodeCommentList.tsx","components/code/ALTA_CodeContents.tsx","pages/ALTA_Code.tsx"],"sourcesContent":["import React, { Dispatch, SetStateAction } from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material';\r\n\r\nimport { mainColor, errorColor, whiteColor } from '../../modules/colorChart';\r\n\r\ntype Props = {\r\n  title: string;\r\n  children: React.ReactNode;\r\n  open: boolean;\r\n  setOpen: Dispatch<SetStateAction<boolean>>;\r\n  handleComplete: () => void;\r\n};\r\n\r\nexport default function ALTA_Dialog({ title, children, open, setOpen, handleComplete }: Props) {\r\n  return (\r\n    <div>\r\n      <Dialog fullWidth open={open} onClose={(): void => setOpen(false)}>\r\n        <DialogTitle sx={titleStyle}>{title}</DialogTitle>\r\n        <DialogContent sx={childrenStyle}>{children}</DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleComplete} variant=\"contained\" sx={submitBtnStyle}>\r\n            완 료\r\n          </Button>\r\n          <Button onClick={(): void => setOpen(false)} sx={delBtnStyle}>\r\n            취 소\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst titleStyle = {\r\n  marginBottom: 2,\r\n  marginTop: 3,\r\n  marginLeft: 2,\r\n};\r\n\r\nconst childrenStyle = {\r\n  marginX: 2,\r\n};\r\n\r\nconst delBtnStyle = {\r\n  'backgroundColor': errorColor,\r\n  '&:hover': {\r\n    backgroundColor: '#A28080',\r\n  },\r\n  'color': whiteColor,\r\n  'marginBottom': 3,\r\n  'marginRight': 4,\r\n  'fontSize': '16px',\r\n  'padding': '5px',\r\n};\r\n\r\nconst submitBtnStyle = {\r\n  backgroundColor: mainColor,\r\n  color: whiteColor,\r\n  marginBottom: 3,\r\n  marginRight: 1,\r\n  fontSize: '16px',\r\n  padding: '5px',\r\n};\r\n","import React, { useState, Dispatch, SetStateAction, useContext, useEffect } from 'react';\r\nimport { useNavigate, NavigateFunction } from 'react-router-dom';\r\n\r\nimport { Box, Grid, Typography, Divider, Button, TextField, InputLabel } from '@mui/material';\r\n\r\nimport MonacoEditor from '@uiw/react-monacoeditor';\r\n\r\nimport { generateCheck, generateError, generateTimer } from '../../modules/generateAlert';\r\nimport { checkLogin } from '../../modules/LoginTokenChecker';\r\nimport { CodeStore } from '../../context/CodeContext';\r\nimport { editCodeApi } from '../../api/apis';\r\n\r\nimport ALTA_Dialog from '../common/ALTA_Dialog';\r\n\r\ntype Props = {\r\n  setIsCodeEdit: Dispatch<SetStateAction<boolean>>;\r\n  studyId: string | undefined;\r\n  codeId: string | undefined;\r\n  problem: string | undefined;\r\n};\r\n\r\nexport default function ALTA_CodeEditor({ setIsCodeEdit, studyId, codeId, problem }: Props) {\r\n  const navigate: NavigateFunction = useNavigate();\r\n  const { code } = useContext(CodeStore);\r\n\r\n  const [fileName, setFileName] = useState<string>(`${code.fileName}`);\r\n  const [content, setContent] = useState<string>(`${code.code}`);\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [commitMessage, setCommitMessage] = useState<string>('');\r\n\r\n  const handleEditBtn = (): void => {\r\n    if (content === code.code && fileName === code.fileName) generateError('수정 내역이 없습니다.', '');\r\n    else setOpen(true);\r\n  };\r\n\r\n  const handleEditCode = async (): Promise<void> => {\r\n    if (!(await checkLogin()).status) navigate('/');\r\n    if (studyId && codeId && problem) {\r\n      generateTimer('잠시 기다려 주세요', `코드를 수정중입니다`);\r\n      try {\r\n        await editCodeApi(parseInt(studyId), parseInt(codeId), commitMessage, fileName, content);\r\n        setIsCodeEdit(false);\r\n        generateCheck('수정 완료', `${fileName} 을(를) 성공적으로 수정하였습니다`, (): void =>\r\n          navigate(`/study/${studyId}/${problem}/code/${codeId}/${code.language}`),\r\n        );\r\n      } catch (err: any) {\r\n        generateError(`수정에 실패하였습니다`, `${err.response.data.message}`);\r\n      }\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect((): void => {\r\n    setCommitMessage(`Update ${fileName}`);\r\n  }, [fileName]);\r\n\r\n  return (\r\n    <>\r\n      <ALTA_Dialog open={open} setOpen={setOpen} title=\"커밋 메세지\" handleComplete={handleEditCode}>\r\n        <Box sx={commitStyle}>\r\n          <InputLabel htmlFor=\"code-edit\">커밋메세지 :</InputLabel>\r\n          <TextField\r\n            id=\"code-edit\"\r\n            variant=\"standard\"\r\n            placeholder=\"커밋 메세지를 입력해주세요\"\r\n            value={commitMessage}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>): void => setCommitMessage(e.target.value)}\r\n            sx={messageStyle}\r\n          />\r\n        </Box>\r\n      </ALTA_Dialog>\r\n      <Grid container direction=\"column\" spacing={5}>\r\n        <Grid item>\r\n          <Box sx={codeEditorHeaderStyle}>\r\n            <Box sx={titleStyle}>\r\n              <Typography sx={problemStyle}>{problem}</Typography>\r\n              <Box>\r\n                <Button onClick={handleEditBtn} variant=\"contained\" sx={editBtnStyle}>\r\n                  수정 완료\r\n                </Button>\r\n                <Button sx={cancelBtnStyle} onClick={(): void => setIsCodeEdit(false)} variant=\"contained\">\r\n                  취소\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n            <Box sx={titleStyle}>\r\n              <TextField\r\n                sx={titleInputStyle}\r\n                defaultValue={code.fileName}\r\n                inputProps={{ style: { fontSize: 35 } }}\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>): void => setFileName(e.target.value)}\r\n              />\r\n              <Typography sx={codeWritterStyle}>작성자 : {code.writer}</Typography>\r\n            </Box>\r\n          </Box>\r\n          <Divider style={{ width: '100%' }} />\r\n        </Grid>\r\n        <Grid item>\r\n          <Box sx={codeBlockStyle} className=\"codeBlock\">\r\n            <MonacoEditor\r\n              id=\"code-monaco-editor\"\r\n              language={code.language.toLowerCase()}\r\n              value={code.code}\r\n              options={{\r\n                theme: 'vs-dark',\r\n                smoothScrolling: true,\r\n              }}\r\n              onChange={(evn: string): void => {\r\n                setContent(evn);\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nconst codeEditorHeaderStyle = {\r\n  paddingY: 3,\r\n};\r\n\r\nconst codeBlockStyle = {\r\n  height: '33rem',\r\n  overflowY: 'scroll',\r\n};\r\n\r\nconst commitStyle = {\r\n  marginBottom: 3,\r\n  marginTop: 5,\r\n};\r\n\r\nconst messageStyle = {\r\n  width: '100%',\r\n};\r\n\r\nconst titleStyle = {\r\n  minWidth: '480px',\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'baseline',\r\n};\r\n\r\nconst editBtnStyle = {\r\n  marginRight: 2,\r\n};\r\n\r\nconst cancelBtnStyle = {\r\n  'backgroundColor': 'error.main',\r\n  '&:hover': {\r\n    backgroundColor: '#A28080',\r\n  },\r\n  'marginRight': 2,\r\n};\r\n\r\nconst titleInputStyle = {\r\n  width: '30rem',\r\n};\r\n\r\nconst problemStyle = {\r\n  fontSize: '20px',\r\n  marginBottom: 3,\r\n  marginTop: 2,\r\n};\r\n\r\nconst codeWritterStyle = {\r\n  fontSize: '20px',\r\n  marginRight: '16px',\r\n  textAlign: 'right',\r\n};\r\n","import { useContext } from 'react';\r\nimport { useNavigate, NavigateFunction } from 'react-router-dom';\r\n\r\nimport { Grid } from '@mui/material';\r\nimport {\r\n  DataGridPro,\r\n  GridColumns,\r\n  GridRowsProp,\r\n  DataGridProProps,\r\n  GridValueGetterParams,\r\n  GridRowParams,\r\n} from '@mui/x-data-grid-pro';\r\nimport SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon';\r\nimport FolderOpenTwoToneIcon from '@mui/icons-material/FolderOpenTwoTone';\r\nimport InsertDriveFileRoundedIcon from '@mui/icons-material/InsertDriveFileRounded';\r\n\r\nimport { generateError } from '../../modules/generateAlert';\r\nimport { CodeStore } from '../../context/CodeContext';\r\nimport { CodeTree } from '../../types';\r\n\r\ntype Props = {\r\n  studyId: string | undefined;\r\n  language: string | undefined;\r\n};\r\n\r\nexport default function ALTA_CodeTree({ studyId, language }: Props) {\r\n  const navigate: NavigateFunction = useNavigate();\r\n  const { codeTree } = useContext(CodeStore);\r\n\r\n  function MinusSquare(props: SvgIconProps): JSX.Element {\r\n    return (\r\n      <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\r\n        <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\r\n      </SvgIcon>\r\n    );\r\n  }\r\n\r\n  function PlusSquare(props: SvgIconProps): JSX.Element {\r\n    return (\r\n      <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\r\n        <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\r\n      </SvgIcon>\r\n    );\r\n  }\r\n\r\n  // codeId 가 0이면 폴더, 0이 아니면 파일이므로 분기처리해서 각각 아이콘 첨가\r\n  function handleIcon(params: GridValueGetterParams): JSX.Element {\r\n    if (params.row.codeId === 0) {\r\n      return (\r\n        <>\r\n          <span style={{ position: 'absolute' }}>\r\n            <FolderOpenTwoToneIcon fontSize=\"small\" color=\"primary\" />\r\n          </span>\r\n          <span style={{ marginLeft: 30 }}>{`${params.rowNode.groupingKey}`}</span>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <span style={{ position: 'absolute' }}>\r\n            <InsertDriveFileRoundedIcon fontSize=\"small\" color=\"primary\" />\r\n          </span>\r\n          <span style={{ marginLeft: 30, cursor: 'pointer' }}>{`${params.rowNode.groupingKey}`}</span>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  const rows: GridRowsProp = codeTree;\r\n\r\n  const columns: GridColumns = [\r\n    {\r\n      field: '__tree_data_group__',\r\n      headerName: 'id',\r\n      flex: 1,\r\n    },\r\n  ];\r\n\r\n  const getTreeDataPath: DataGridProProps['getTreeDataPath'] = (row): Array<string> => row.path;\r\n\r\n  const handleMove = async (row: CodeTree): Promise<void> => {\r\n    if (row.codeId !== 0) {\r\n      const codeId: number = row.codeId;\r\n      const problem: string = row.path[1];\r\n      try {\r\n        navigate(`/study/${studyId}/${problem}/code/${codeId}/${language}`);\r\n      } catch (err: any) {\r\n        generateError('코드 이동에 실패하였습니다', `${err.response.message}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid item sx={codeTreeStyle}>\r\n      <DataGridPro\r\n        hideFooter\r\n        treeData\r\n        rows={rows}\r\n        columns={columns}\r\n        getTreeDataPath={getTreeDataPath}\r\n        groupingColDef={{\r\n          valueGetter: handleIcon,\r\n        }}\r\n        components={{\r\n          TreeDataCollapseIcon: MinusSquare,\r\n          TreeDataExpandIcon: PlusSquare,\r\n        }}\r\n        onRowClick={(e: GridRowParams): Promise<void> => handleMove(e.row)}\r\n        headerHeight={0}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst codeTreeStyle = {\r\n  height: '85vh',\r\n  width: '100%',\r\n  minWidth: '100%',\r\n  maxWidth: '100%',\r\n};\r\n","import { useState, useContext } from 'react';\r\nimport { useNavigate, NavigateFunction } from 'react-router-dom';\r\n\r\nimport {\r\n  Avatar,\r\n  Grid,\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Link,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded';\r\nimport CheckCircleOutlineRoundedIcon from '@mui/icons-material/CheckCircleOutlineRounded';\r\n\r\nimport { generateError, generateConfirm } from '../../modules/generateAlert';\r\n\r\nimport { toggleSolved, editReviewApi, deleteReviewApi } from '../../api/apis';\r\nimport { ReviewData } from '../../types';\r\nimport { CodeStore } from '../../context/CodeContext';\r\nimport { checkLogin } from '../../modules/LoginTokenChecker';\r\nimport { displayAt } from '../../modules/displayAt';\r\nimport defaultProfile from '../../images/user.webp';\r\n\r\ntype Props = {\r\n  review: ReviewData;\r\n  codeId: number;\r\n};\r\n\r\nexport default function ALTA_CodeCommentCard({ review, codeId }: Props) {\r\n  const navigate: NavigateFunction = useNavigate();\r\n  const { setCodeLine, user, code, getReview } = useContext(CodeStore);\r\n  const [isResolved, setisResolved] = useState<boolean>(review.completed);\r\n  const [isEdit, setIsEdit] = useState<boolean>(false);\r\n\r\n  const [commentValue, setCommentValue] = useState<string>(review.comment);\r\n  const profile: string = review.imageUrl ? review.imageUrl : defaultProfile;\r\n\r\n  const changeResolved = async (): Promise<void> => {\r\n    if (!(await checkLogin()).status) navigate('/');\r\n    if (user !== code.writer && user !== review.reviewerName)\r\n      generateError('변경 불가', '코드 작성자 혹은 리뷰 작성자만 변경할 수 있습니다');\r\n    else {\r\n      try {\r\n        await toggleSolved(review.reviewId, !review.completed);\r\n        setisResolved(!isResolved);\r\n      } catch (err: any) {\r\n        generateError('상태 변경에 실패하였습니다', `${err.response.data.message}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditComment = async (): Promise<void> => {\r\n    if (!(await checkLogin()).status) navigate('/');\r\n    if (commentValue === review.comment) generateError('변경 내역이 없습니다', '');\r\n    else {\r\n      if (commentValue === '') generateError('내용을 작성해주세요', '');\r\n      else {\r\n        try {\r\n          await editReviewApi(review.reviewId, commentValue, review.codeNumber);\r\n          setIsEdit(false);\r\n          getReview(codeId);\r\n        } catch (err: any) {\r\n          generateError(`수정에 실패하였습니다`, `${err.response.data.message}`);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDelComment = async (): Promise<void> => {\r\n    if (!(await checkLogin()).status) navigate('/');\r\n    generateConfirm(\r\n      '정말 삭제하시겠습니까?',\r\n      '한 번 삭제하면 되돌릴 수 없습니다',\r\n      '삭제 완료!',\r\n      `${review.codeNumber} 번 라인에 대한 리뷰가 삭제되었습니다`,\r\n      async (): Promise<void> => delComment(),\r\n    );\r\n  };\r\n\r\n  const delComment = async (): Promise<void> => {\r\n    try {\r\n      await deleteReviewApi(review.reviewId);\r\n      getReview(codeId);\r\n    } catch (err: any) {\r\n      generateError('리뷰 삭제에 실패하였습니다', `${err.response.data.message}`);\r\n    }\r\n  };\r\n\r\n  const moveToLine = (): void => {\r\n    setCodeLine(review.codeNumber);\r\n    const lineSpan: HTMLElement | null = document.getElementById(`codeLine-${review.codeNumber}`);\r\n    if (lineSpan !== null) {\r\n      lineSpan.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n  return (\r\n    <Box sx={codeCommentBoxStyle}>\r\n      <Paper style={paperBoxStyle}>\r\n        {user === review.reviewerName ? (\r\n          <Button startIcon={<CloseIcon />} disableRipple sx={delBtnStyle} onClick={handleDelComment} />\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Grid container direction=\"row\" sx={infoGridStyle} columns={16}>\r\n          <Grid item md={1} sx={profileStyle}>\r\n            <Avatar src={profile} />\r\n          </Grid>\r\n          <Grid item md={15}>\r\n            <Grid sx={infoStyle}>\r\n              <Box sx={editStyle}>\r\n                <p>{review.reviewerName}</p>\r\n                {user === review.reviewerName ? (\r\n                  <>\r\n                    {isEdit ? (\r\n                      <Box sx={editBtnGroupStyle}>\r\n                        <Button disableRipple sx={[btnStyle, completeBtnStyle]} onClick={handleEditComment}>\r\n                          수정 완료\r\n                        </Button>\r\n                        <Button\r\n                          disableRipple\r\n                          onClick={(): void => {\r\n                            setIsEdit(false);\r\n                            setCommentValue(review.comment);\r\n                          }}\r\n                          sx={[btnStyle, cancelBtnStyle]}\r\n                        >\r\n                          취소\r\n                        </Button>\r\n                      </Box>\r\n                    ) : (\r\n                      <Box sx={editBtnGroupStyle}>\r\n                        <Button\r\n                          startIcon={<EditIcon />}\r\n                          sx={[btnStyle, editBtn]}\r\n                          disableRipple\r\n                          onClick={(): void => setIsEdit(true)}\r\n                        />\r\n                      </Box>\r\n                    )}\r\n                  </>\r\n                ) : null}\r\n              </Box>\r\n              <Typography sx={dateStyle}>{displayAt(review.commentDate)}</Typography>\r\n            </Grid>\r\n            <Grid sx={infoStyle}>\r\n              <Grid container sx={commentStyle}>\r\n                {isEdit ? (\r\n                  <TextField\r\n                    value={commentValue}\r\n                    multiline\r\n                    size=\"small\"\r\n                    sx={editCommentInput}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>): void => setCommentValue(e.target.value)}\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <>\r\n                          {review.codeNumber !== 0 ? (\r\n                            <InputAdornment position=\"start\">\r\n                              <Typography sx={adornStyle}>{`${review.codeNumber}번 라인 `}</Typography>\r\n                            </InputAdornment>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </>\r\n                      ),\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <>\r\n                    {review.codeNumber !== 0 ? (\r\n                      <Link onClick={moveToLine} sx={commentCodeLineStyle}>\r\n                        {review['codeNumber']}번\r\n                      </Link>\r\n                    ) : null}\r\n                    <Typography sx={commentContentStyle}>{review['comment']}</Typography>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n              {isResolved ? (\r\n                <IconButton onClick={changeResolved}>{<CheckCircleRoundedIcon sx={resolvedStyle} />}</IconButton>\r\n              ) : (\r\n                <IconButton onClick={changeResolved}>\r\n                  {<CheckCircleOutlineRoundedIcon sx={unresolvedStyle} />}\r\n                </IconButton>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst codeCommentBoxStyle = {\r\n  position: 'relative',\r\n  marginBottom: 3,\r\n};\r\n\r\nconst paperBoxStyle = {\r\n  margin: '30px 0',\r\n};\r\n\r\nconst infoGridStyle = {\r\n  paddingLeft: 2,\r\n  paddingRight: 6,\r\n};\r\n\r\nconst delBtnStyle = {\r\n  color: '#212121',\r\n  position: 'absolute',\r\n  right: '10px',\r\n  top: '22px',\r\n  padding: 0,\r\n  minWidth: '10px',\r\n};\r\n\r\nconst infoStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'baseline',\r\n};\r\n\r\nconst dateStyle = {\r\n  color: 'gray',\r\n  marginRight: '10px',\r\n};\r\n\r\nconst editStyle = {\r\n  display: 'flex',\r\n};\r\n\r\nconst editBtnGroupStyle = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  paddingTop: '3px',\r\n};\r\n\r\nconst btnStyle = {\r\n  minWidth: '20px',\r\n  height: '35px',\r\n};\r\n\r\nconst editBtn = {\r\n  marginLeft: '10px',\r\n  color: '#212121',\r\n};\r\n\r\nconst completeBtnStyle = {\r\n  marginLeft: '5px',\r\n  marginRight: 1,\r\n};\r\n\r\nconst cancelBtnStyle = {\r\n  color: 'error.main',\r\n};\r\n\r\nconst profileStyle = {\r\n  display: { xs: 'none', md: 'block' },\r\n  minWidth: '2.5rem',\r\n  paddingTop: 2,\r\n};\r\n\r\nconst resolvedStyle = {\r\n  color: 'primary.main',\r\n};\r\n\r\nconst unresolvedStyle = {\r\n  color: 'gray',\r\n};\r\n\r\nconst commentCodeLineStyle = {\r\n  color: 'primary.main',\r\n  cursor: 'pointer',\r\n  marginRight: 1,\r\n  textDecorationLine: 'none',\r\n};\r\n\r\nconst commentStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'flex-start',\r\n  alignItems: 'baseline',\r\n};\r\n\r\nconst commentContentStyle = {\r\n  marginBottom: 2,\r\n};\r\n\r\nconst editCommentInput = {\r\n  paddingBottom: 2,\r\n  paddingLeft: 0,\r\n  width: '70%',\r\n};\r\n\r\nconst adornStyle = {\r\n  color: 'primary.main',\r\n  fontWeight: 'bold',\r\n};\r\n","import { useState, useContext, useEffect } from 'react';\r\nimport { useNavigate, NavigateFunction } from 'react-router-dom';\r\n\r\nimport { Grid, Typography, Box, TextField, Switch, InputAdornment } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport { addReviewApi } from '../../api/apis';\r\nimport { CodeStore } from '../../context/CodeContext';\r\nimport { ReviewData, ContextPromiseType } from '../../types';\r\n\r\nimport { generateCheck, generateError } from '../../modules/generateAlert';\r\nimport { checkLogin } from '../../modules/LoginTokenChecker';\r\n\r\nimport ALTA_CodeCommentCard from './ALTA_CodeCommentCard';\r\n\r\ntype Props = {\r\n  codeId: number;\r\n};\r\n\r\nexport default function ALTA_CodeCommentList({ codeId }: Props) {\r\n  const navigate: NavigateFunction = useNavigate();\r\n\r\n  const [isDisabled, setIsDisabled] = useState<boolean>(true);\r\n  const [newReview, setNewReview] = useState<string>('');\r\n\r\n  const { codeLine, reviews, getReview, isCompleted, setIsCompleted } = useContext(CodeStore);\r\n\r\n  useEffect((): void => {\r\n    getReview(codeId);\r\n  }, [isCompleted]);\r\n\r\n  useEffect((): void => {\r\n    if (newReview !== '') {\r\n      setIsDisabled(false);\r\n    } else {\r\n      setIsDisabled(true);\r\n    }\r\n  }, [newReview, codeLine]);\r\n\r\n  const handleNewReview = async (): Promise<void> => {\r\n    if (!(await checkLogin()).status) navigate('/');\r\n    try {\r\n      await addReviewApi(codeId, newReview, codeLine);\r\n      setNewReview('');\r\n      generateCheck('리뷰 생성', `리뷰가 성공적으로 생성되었습니다`, (): void => getReview(codeId));\r\n    } catch (err: any) {\r\n      generateError('리뷰 생성에 실패하였습니다', `${err.response.data.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      <Grid item>\r\n        <Grid container alignItems=\"baseline\">\r\n          <Grid item sx={codeCommentGridStyle}>\r\n            <Typography sx={codeCommentTitleStyle}>Comments</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Switch checked={isCompleted} onChange={(): void => setIsCompleted(!isCompleted)} name=\"isCompleted\" />\r\n            <Typography sx={codeCommentToggleTitleStyle}>전체 댓글 보기</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>\r\n        <Box sx={addCommentStyle}>\r\n          <Grid container sx={commentGridStyle} columns={17}>\r\n            <Grid item xs={16}>\r\n              <TextField\r\n                id=\"outlined-multiline-static-comment\"\r\n                placeholder=\"리뷰를 입력해주세요\"\r\n                multiline\r\n                rows={2}\r\n                fullWidth\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\" sx={codeSelectStyle}>\r\n                      <Typography sx={adornStyle}>\r\n                        {codeLine === 0 ? '코드를 선택해주세요.' : `${codeLine}번 라인`}\r\n                      </Typography>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                value={newReview}\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>): void => {\r\n                  setNewReview(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <IconButton onClick={handleNewReview} disabled={isDisabled}>\r\n                <AddCircleIcon style={addButtonStyle} />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item>\r\n        {reviews.map(\r\n          (review: ReviewData): JSX.Element => (\r\n            <ALTA_CodeCommentCard key={review.reviewId} review={review} codeId={codeId} />\r\n          ),\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst codeCommentGridStyle = {\r\n  marginRight: 4,\r\n};\r\n\r\nconst codeCommentTitleStyle = {\r\n  fontSize: 40,\r\n};\r\n\r\nconst codeCommentToggleTitleStyle = {\r\n  display: 'inline-block',\r\n};\r\n\r\nconst addCommentStyle = {\r\n  height: '7rem',\r\n  marginTop: 4,\r\n};\r\n\r\nconst addButtonStyle = {\r\n  fontSize: '50',\r\n};\r\n\r\nconst commentGridStyle = {\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n};\r\n\r\nconst codeSelectStyle = {\r\n  alignItems: 'flex-end',\r\n  paddingTop: '2px',\r\n};\r\n\r\nconst adornStyle = {\r\n  color: 'primary.main',\r\n  fontWeight: 'bold',\r\n};\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport { useNavigate, useParams, NavigateFunction } from 'react-router-dom';\r\n\r\nimport { Box, Grid, Divider, Typography, Button } from '@mui/material';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\n\r\nimport { deleteCodeApi } from '../../api/apis';\r\nimport { CodeStore } from '../../context/CodeContext';\r\nimport { generateError, generateConfirm } from '../../modules/generateAlert';\r\nimport { checkLogin } from '../../modules/LoginTokenChecker';\r\nimport { displayAt } from '../../modules/displayAt';\r\n\r\nimport ALTA_Loading from '../common/ALTA_Loading';\r\nimport ALTA_CodeBlock from '../common/ALTA_CodeBlock';\r\n\r\nimport ALTA_CodeEditor from './ALTA_CodeEditor';\r\nimport ALTA_CodeTree from './ALTA_CodeTree';\r\nimport ALTA_CodeCommentList from './ALTA_CodeCommentList';\r\n\r\ntype ParamType = {\r\n  studyId: string | undefined;\r\n  codeId: string | undefined;\r\n  problem: string | undefined;\r\n  language: string | undefined;\r\n};\r\n\r\nexport default function ALTA_CodeContents() {\r\n  const navigate: NavigateFunction = useNavigate();\r\n\r\n  const { studyId, codeId, problem, language } = useParams<ParamType>();\r\n  const { code, getCode, user, getCodeTree } = useContext(CodeStore);\r\n\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isCodeEdit, setIsCodeEdit] = useState<boolean>(false);\r\n\r\n  const handleDelete = async (): Promise<void> => {\r\n    if (!(await checkLogin()).status) navigate('/');\r\n\r\n    generateConfirm(\r\n      '정말 삭제하시겠습니까?',\r\n      '한번 삭제하면 되돌릴 수 없습니다.',\r\n      '코드가 삭제되었습니다.',\r\n      `${code.fileName} 이(가) 성공적으로 삭제되었습니다`,\r\n      async (): Promise<boolean> => delCode(),\r\n    );\r\n  };\r\n\r\n  const delCode = async (): Promise<boolean> => {\r\n    if (studyId && codeId) {\r\n      try {\r\n        await deleteCodeApi(parseInt(studyId), parseInt(codeId));\r\n        goToDetail();\r\n        return true;\r\n      } catch (err: any) {\r\n        generateError('코드 삭제에 실패하였습니다', `${err.response.data.message}`);\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const goToDetail = (): void => navigate(`/study/${studyId}/detail`);\r\n\r\n  const goToresubmit = (): void => navigate(`/study/${studyId}/0/${problem}/${codeId}/code-submit/${language}`);\r\n\r\n  useEffect((): void => {\r\n    setLoading(true);\r\n    (async function (): Promise<void> {\r\n      if (studyId && codeId) {\r\n        const [codeStatus, TreeStatus] = await Promise.all([\r\n          getCode(parseInt(studyId), parseInt(codeId)),\r\n          getCodeTree(parseInt(studyId)),\r\n        ]);\r\n        if (codeStatus.status === -1 || TreeStatus.status === -1) navigate('/');\r\n        else if (codeStatus.status === -2) generateError('코드 정보를 불러오는데 실패하였습니다', '');\r\n        else if (TreeStatus.status === -2) generateError('폴더 구조를 불러오는데 실패하였습니다', '');\r\n        else setLoading(false);\r\n      } else {\r\n        navigate('/code/404-not-found');\r\n      }\r\n    })();\r\n  }, [codeId, isCodeEdit]);\r\n\r\n  return (\r\n    <>\r\n      {loading && <ALTA_Loading />}\r\n      {!loading && (\r\n        <Grid className=\"codeContentGrid\" container sx={codeContentStyle} spacing={8}>\r\n          <Grid item sx={codeTreeStyle} md={3}>\r\n            <Box className=\"codeTreeBox\" sx={codeTreeBoxStyle}>\r\n              <ALTA_CodeTree studyId={studyId} language={language} />\r\n            </Box>\r\n          </Grid>\r\n          <Grid item md={9}>\r\n            <Box className=\"codeBlockBox\" sx={codeBlockBoxStyle}>\r\n              <Grid container direction=\"column\" rowGap={3}>\r\n                <Grid item>\r\n                  {isCodeEdit ? (\r\n                    <ALTA_CodeEditor\r\n                      setIsCodeEdit={setIsCodeEdit}\r\n                      studyId={studyId}\r\n                      codeId={codeId}\r\n                      problem={problem}\r\n                    />\r\n                  ) : (\r\n                    <Grid container direction=\"column\" spacing={5}>\r\n                      <Grid item>\r\n                        <Box className=\"codeBlockHeader\" sx={codeBlockHeaderStyle}>\r\n                          <Box className=\"codeBlockTitle\" sx={titleStyle}>\r\n                            <Button\r\n                              startIcon={<ChevronLeftIcon />}\r\n                              variant=\"contained\"\r\n                              sx={backBtnStyle}\r\n                              onClick={goToDetail}\r\n                            >\r\n                              Back\r\n                            </Button>\r\n                            {code.writer === user ? (\r\n                              <Box className=\"codeBlockBtnGroup\">\r\n                                <Button sx={reupBtnStyle} variant=\"contained\" onClick={goToresubmit}>\r\n                                  재업로드\r\n                                </Button>\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  sx={editBtnStyle}\r\n                                  onClick={(): void => {\r\n                                    setIsCodeEdit(true);\r\n                                  }}\r\n                                >\r\n                                  수정\r\n                                </Button>\r\n                                <Button sx={delBtnStyle} variant=\"contained\" onClick={handleDelete}>\r\n                                  삭제\r\n                                </Button>\r\n                              </Box>\r\n                            ) : null}\r\n                          </Box>\r\n                          <Typography sx={problemStyle}>{problem}</Typography>\r\n                          <Box sx={titleStyle}>\r\n                            <Typography sx={codeTitleStyle}>{code.fileName}</Typography>\r\n                            <Box>\r\n                              <Typography sx={codeWritterStyle}>작성자 : {code.writer}</Typography>\r\n                              <Typography sx={dateStyle}>마지막 수정 : {displayAt(code.createDate)}</Typography>\r\n                            </Box>\r\n                          </Box>\r\n                        </Box>\r\n                        <Divider style={{ width: '100%' }} />\r\n                      </Grid>\r\n                      <Grid item id=\"code-block\">\r\n                        <ALTA_CodeBlock code={code.code} language={code.language} />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n                <Grid item sx={codeCommentStyle}>\r\n                  <Divider variant=\"fullWidth\" style={{ margin: '30px 0' }} />\r\n                  <ALTA_CodeCommentList codeId={Number(codeId)} />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst codeCommentStyle = {\r\n  padding: '10px',\r\n};\r\n\r\nconst codeBlockBoxStyle = {\r\n  paddingRight: 10,\r\n};\r\n\r\nconst codeBlockHeaderStyle = {\r\n  paddingTop: 3,\r\n  paddingBottom: 3,\r\n};\r\n\r\nconst codeTreeStyle = {\r\n  display: { xs: 'none', md: 'block' },\r\n};\r\n\r\nconst codeTreeBoxStyle = {\r\n  paddingTop: 4,\r\n  paddingLeft: 2,\r\n};\r\n\r\nconst codeContentStyle = {\r\n  width: '100%',\r\n};\r\n\r\nconst backBtnStyle = {\r\n  fontSize: '15px',\r\n  marginBottom: '18px',\r\n};\r\n\r\nconst editBtnStyle = {\r\n  'fontSize': '15px',\r\n  'marginRight': ' 10px',\r\n  'backgroundColor': 'secondary.main',\r\n  '&:hover': {\r\n    backgroundColor: '#AFA291',\r\n  },\r\n  'color': '#212121',\r\n};\r\n\r\nconst delBtnStyle = {\r\n  'fontSize': '15px',\r\n  'marginRight': ' 10px',\r\n  'backgroundColor': 'error.main',\r\n  'color': '#212121',\r\n  '&:hover': {\r\n    backgroundColor: '#A28080',\r\n  },\r\n};\r\n\r\nconst reupBtnStyle = {\r\n  fontSize: '15px',\r\n  marginRight: ' 10px',\r\n};\r\n\r\nconst titleStyle = {\r\n  minWidth: '480px',\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'flex-start',\r\n};\r\n\r\nconst problemStyle = {\r\n  fontSize: '20px',\r\n};\r\n\r\nconst dateStyle = {\r\n  fontSize: '16px',\r\n  marginRight: '16px',\r\n  color: 'gray',\r\n  marginTop: '8px',\r\n};\r\n\r\nconst codeTitleStyle = {\r\n  fontSize: '50px',\r\n};\r\n\r\nconst codeWritterStyle = {\r\n  fontSize: '20px',\r\n  marginRight: '16px',\r\n  marginTop: '8px',\r\n  textAlign: 'right',\r\n};\r\n","import styled from '@emotion/styled';\r\nimport { useEffect } from 'react';\r\n\r\nimport CodeContext from '../context/CodeContext';\r\n\r\nimport ALTA_CodeContents from '../components/code/ALTA_CodeContents';\r\nimport ALTA_Template from '../components/common/ALTA_Template';\r\nimport ALTA_Header from '../components/common/ALTA_Header';\r\n\r\nexport default function ALTA_Code() {\r\n  useEffect(() => {\r\n    document.title = 'ALTA | 코드 상세보기';\r\n  }, []);\r\n  const Header = () => <ALTA_Header />;\r\n  const Contents = () => (\r\n    <CodeContext>\r\n      <Div>\r\n        <ALTA_CodeContents />\r\n      </Div>\r\n    </CodeContext>\r\n  );\r\n  return <ALTA_Template header={<Header />} contents={<Contents />} />;\r\n}\r\n\r\nconst Div = styled.div`\r\n  display: flex;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n"],"names":["ALTA_Dialog","title","children","open","setOpen","handleComplete","Dialog","fullWidth","onClose","DialogTitle","sx","titleStyle","DialogContent","childrenStyle","DialogActions","Button","onClick","variant","submitBtnStyle","delBtnStyle","marginBottom","marginTop","marginLeft","marginX","errorColor","backgroundColor","whiteColor","mainColor","color","marginRight","fontSize","padding","ALTA_CodeEditor","setIsCodeEdit","studyId","codeId","problem","navigate","useNavigate","code","useContext","CodeStore","useState","fileName","setFileName","content","setContent","commitMessage","setCommitMessage","handleEditCode","checkLogin","status","generateTimer","editCodeApi","parseInt","generateCheck","language","generateError","response","data","message","useEffect","Box","commitStyle","InputLabel","htmlFor","TextField","id","placeholder","value","onChange","e","target","messageStyle","Grid","container","direction","spacing","item","codeEditorHeaderStyle","Typography","problemStyle","editBtnStyle","cancelBtnStyle","titleInputStyle","defaultValue","inputProps","style","codeWritterStyle","writer","Divider","width","codeBlockStyle","className","toLowerCase","options","theme","smoothScrolling","evn","paddingY","height","overflowY","minWidth","display","justifyContent","alignItems","textAlign","ALTA_CodeTree","rows","codeTree","handleMove","row","path","err","codeTreeStyle","DataGridPro","hideFooter","treeData","columns","field","headerName","flex","getTreeDataPath","groupingColDef","valueGetter","params","position","FolderOpenTwoTone","rowNode","groupingKey","InsertDriveFileRounded","cursor","components","TreeDataCollapseIcon","props","SvgIcon","d","TreeDataExpandIcon","onRowClick","headerHeight","maxWidth","ALTA_CodeCommentCard","review","setCodeLine","user","getReview","completed","isResolved","setisResolved","isEdit","setIsEdit","comment","commentValue","setCommentValue","profile","imageUrl","defaultProfile","changeResolved","reviewerName","toggleSolved","reviewId","handleEditComment","editReviewApi","codeNumber","handleDelComment","generateConfirm","delComment","deleteReviewApi","codeCommentBoxStyle","Paper","paperBoxStyle","startIcon","Close","disableRipple","infoGridStyle","md","profileStyle","Avatar","src","infoStyle","editStyle","editBtnGroupStyle","btnStyle","completeBtnStyle","Edit","editBtn","dateStyle","displayAt","commentDate","commentStyle","multiline","size","editCommentInput","InputProps","startAdornment","InputAdornment","adornStyle","Link","lineSpan","document","getElementById","scrollIntoView","behavior","commentCodeLineStyle","commentContentStyle","IconButton","CheckCircleRounded","resolvedStyle","CheckCircleOutlineRounded","unresolvedStyle","margin","paddingLeft","paddingRight","right","top","paddingTop","xs","textDecorationLine","paddingBottom","fontWeight","ALTA_CodeCommentList","isDisabled","setIsDisabled","newReview","setNewReview","codeLine","reviews","isCompleted","setIsCompleted","handleNewReview","addReviewApi","codeCommentGridStyle","codeCommentTitleStyle","Switch","checked","name","codeCommentToggleTitleStyle","addCommentStyle","commentGridStyle","codeSelectStyle","disabled","AddCircle","addButtonStyle","map","ALTA_CodeContents","useParams","getCode","getCodeTree","loading","setLoading","isCodeEdit","handleDelete","delCode","deleteCodeApi","goToDetail","Promise","all","codeStatus","TreeStatus","ALTA_Loading","codeContentStyle","codeTreeBoxStyle","codeBlockBoxStyle","rowGap","codeBlockHeaderStyle","ChevronLeft","backBtnStyle","reupBtnStyle","codeTitleStyle","createDate","ALTA_CodeBlock","codeCommentStyle","Number","ALTA_Code","Header","ALTA_Header","Contents","CodeContext","Div","ALTA_Template","header","contents","styled"],"sourceRoot":""}