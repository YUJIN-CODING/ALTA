{"version":3,"file":"static/js/9792.de15c182.chunk.js","mappings":"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","sources":["components/common/ALTA_AlertMenu.tsx","components/common/ALTA_Alert.tsx","components/common/ALTA_Header.tsx","components/common/ALTA_Inner.tsx","components/common/ALTA_Template.tsx","components/common/ALTA_Tooltip.tsx","modules/colorChart.ts","modules/displayAt.ts","modules/generateAlert.ts","modules/scrollStyle.ts","context/StudyDetailContext.tsx","components/study/builder/ALTA_AddTableBarBuilder.tsx","components/study/builder/ALTA_ProblemBarBuilder.tsx","components/study/builder/ALTA_AddProblemBarBuilder.tsx","components/common/ALTA_FlipBar.tsx","components/study/ALTA_ProblemTable.tsx","components/study/ALTA_Notice.tsx","components/study/ALTA_Chat.tsx","components/study/ALTA_StudyMemberCard.tsx","components/study/ALTA_StudyMembers.tsx","components/study/ALTA_StudyBoard.tsx","components/study/ALTA_StudyDetailContents.tsx","pages/ALTA_StudyDetail.tsx"],"sourcesContent":["import { useState, useContext, Dispatch, SetStateAction, useEffect } from 'react';\r\nimport { useNavigate, NavigateFunction } from 'react-router-dom';\r\n\r\nimport { Grid, Paper, Box, Typography, Button, MenuItem } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport { readAlertApi } from '../../api/apis';\r\nimport { AlertData } from '../../types';\r\nimport { displayAt } from '../../modules/displayAt';\r\nimport { checkLogin } from '../../modules/LoginTokenChecker';\r\n\r\ntype Props = {\r\n  data: AlertData[];\r\n  setOpen: Dispatch<SetStateAction<boolean>>;\r\n};\r\n\r\nexport default function ALTA_AlertMenu({ data, setOpen }: Props) {\r\n  const navigate: NavigateFunction = useNavigate();\r\n\r\n  const changeChecked = async (d: AlertData): Promise<void> => {\r\n    if (!(await checkLogin()).status) navigate('/');\r\n    await readAlertApi(Number(d.alertId));\r\n    d.isChecked = true;\r\n  };\r\n\r\n  const handleClick = (d: AlertData): void => {\r\n    if (!d.isChecked) {\r\n      changeChecked(d);\r\n    }\r\n    navigate(`${d.url}`);\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {data.map((d) => (\r\n        <MenuItem\r\n          key={d.alertId}\r\n          onClick={() => {\r\n            handleClick(d);\r\n          }}\r\n        >\r\n          <Box sx={codeCommentBoxStyle}>\r\n            <Paper style={paperBoxStyle} elevation={1}>\r\n              <Button startIcon={<CloseIcon />} disableRipple sx={delBtnStyle} />\r\n              <Grid container direction=\"row\" sx={infoGridStyle}>\r\n                <Grid item sx={d.isChecked ? readStyle : null}>\r\n                  <Grid sx={infoStyle}>\r\n                    <Box>\r\n                      <h4>{d.senderNickName}</h4>\r\n                    </Box>\r\n                    <Typography sx={dateStyle}>{displayAt(d.time)}</Typography>\r\n                  </Grid>\r\n                  <Typography sx={commentContentStyle}>{d.content}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </Box>\r\n        </MenuItem>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nconst codeCommentBoxStyle = {\r\n  position: 'relative',\r\n  marginBottom: 3,\r\n};\r\n\r\nconst paperBoxStyle = {\r\n  width: '100%',\r\n  margin: '10px 0',\r\n};\r\n\r\nconst infoGridStyle = {\r\n  paddingLeft: 2,\r\n  paddingRight: 6,\r\n  paddingY: 2,\r\n};\r\n\r\nconst delBtnStyle = {\r\n  color: '#212121',\r\n  position: 'absolute',\r\n  right: '10px',\r\n  top: '35px',\r\n  padding: 0,\r\n  minWidth: '10px',\r\n};\r\n\r\nconst infoStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n};\r\n\r\nconst dateStyle = {\r\n  color: 'gray',\r\n  marginRight: '10px',\r\n  marginTop: '17px',\r\n};\r\n\r\nconst unreadStyle = {\r\n  color: 'primary.main',\r\n};\r\n\r\nconst readStyle = {\r\n  color: 'gray',\r\n  textDecoration: 'line-through',\r\n  cursor: 'default',\r\n};\r\n\r\nconst commentCodeLineStyle = {\r\n  color: 'primary.main',\r\n  cursor: 'pointer',\r\n  marginRight: 1,\r\n  textDecorationLine: 'none',\r\n};\r\n\r\nconst commentStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'flex-start',\r\n  alignItems: 'baseline',\r\n};\r\n\r\nconst commentContentStyle = {\r\n  marginBottom: 2,\r\n};\r\n\r\nconst editCommentInput = {\r\n  paddingBottom: 2,\r\n  paddingLeft: 0,\r\n  width: '70%',\r\n};\r\n\r\nconst adornStyle = {\r\n  color: 'primary.main',\r\n  fontWeight: 'bold',\r\n};\r\n","import { useEffect, useState, useRef, useContext } from 'react';\r\nimport { useNavigate, NavigateFunction } from 'react-router-dom';\r\nimport { Box, Menu, Badge, Tabs, Tab, Typography, IconButton } from '@mui/material';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded';\r\nimport CheckCircleOutlineRoundedIcon from '@mui/icons-material/CheckCircleOutlineRounded';\r\n\r\nimport { AlertData } from '../../types';\r\nimport ALTA_Tooltip from './ALTA_Tooltip';\r\nimport ALTA_AlertMenu from './ALTA_AlertMenu';\r\nimport { readAlertAllApi } from '../../api/apis';\r\nimport { checkLogin } from '../../modules/LoginTokenChecker';\r\n\r\nimport { AlertDataStore } from '../../context/AlertContext';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nexport default function ALTA_Alert() {\r\n  const navigate: NavigateFunction = useNavigate();\r\n  const { alertData, badgeCnt, setBadgeCnt } = useContext(AlertDataStore);\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [tab, setTab] = useState<number>(0);\r\n  const [allRead, setAllRead] = useState<boolean>(false);\r\n\r\n  const anchorRef = useRef<SVGSVGElement>(null);\r\n\r\n  let newAlert: AlertData[] = alertData.filter((d: AlertData): boolean => d.isChecked === false);\r\n\r\n  useEffect((): void => {\r\n    setAllRead(false);\r\n    newAlert = alertData.filter((d: AlertData): boolean => d.isChecked === false);\r\n    setBadgeCnt(newAlert.length);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setBadgeCnt(newAlert.length);\r\n  }, [newAlert]);\r\n\r\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setTab(newValue);\r\n  };\r\n\r\n  const allChecked = async (): Promise<void> => {\r\n    if (!(await checkLogin()).status) navigate('/');\r\n    setAllRead(true);\r\n    await readAlertAllApi();\r\n    setOpen(false);\r\n    setBadgeCnt(0);\r\n    newAlert = alertData.filter((d: AlertData): boolean => d.isChecked === false);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <ALTA_Tooltip title=\"알림\">\r\n        <Badge\r\n          badgeContent={badgeCnt}\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n          overlap=\"circular\"\r\n          sx={badgeStyle}\r\n        >\r\n          <NotificationsIcon\r\n            ref={anchorRef}\r\n            sx={{ fontSize: '40px', cursor: 'pointer' }}\r\n            id=\"basic-button\"\r\n            aria-controls={open ? 'basic-menu' : undefined}\r\n            aria-haspopup=\"true\"\r\n            aria-expanded={open ? 'true' : undefined}\r\n            onClick={() => setOpen(!open)}\r\n          />\r\n        </Badge>\r\n      </ALTA_Tooltip>\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorRef.current}\r\n        open={open}\r\n        onClose={() => setOpen(!open)}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'basic-button',\r\n        }}\r\n      >\r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n          <Tabs value={tab} onChange={handleChange} aria-label=\"basic tabs example\">\r\n            <Tab label=\"안읽은 알림만 보기\" {...a11yProps(0)} />\r\n            <Tab label=\"전체 알림 보기\" {...a11yProps(1)} />\r\n          </Tabs>\r\n        </Box>\r\n        <Box sx={menuStyle}>\r\n          <TabPanel value={tab} index={0}>\r\n            {badgeCnt ? (\r\n              <Box>\r\n                전체 읽음\r\n                {allRead ? (\r\n                  <IconButton>{<CheckCircleRoundedIcon sx={resolvedStyle} />}</IconButton>\r\n                ) : (\r\n                  <IconButton onClick={allChecked}>{<CheckCircleOutlineRoundedIcon sx={unresolvedStyle} />}</IconButton>\r\n                )}\r\n                <ALTA_AlertMenu data={newAlert} setOpen={setOpen} />\r\n              </Box>\r\n            ) : (\r\n              <Typography sx={{ color: 'error.main', fontSize: '20px' }}>새로운 알림이 없습니다</Typography>\r\n            )}\r\n          </TabPanel>\r\n          <TabPanel value={tab} index={1}>\r\n            <ALTA_AlertMenu data={alertData} setOpen={setOpen} />\r\n          </TabPanel>\r\n        </Box>\r\n      </Menu>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst menuStyle = {\r\n  width: '35rem',\r\n  display: 'flex',\r\n  height: '30rem',\r\n};\r\n\r\nconst badgeStyle = {\r\n  '& .MuiBadge-badge': {\r\n    color: 'text.primary',\r\n    backgroundColor: 'secondary.main',\r\n  },\r\n};\r\n\r\nconst resolvedStyle = {\r\n  color: 'primary.main',\r\n};\r\n\r\nconst unresolvedStyle = {\r\n  color: 'gray',\r\n};\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: number) {\r\n  return {\r\n    'id': `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n","import { useNavigate } from 'react-router-dom';\r\nimport styled from '@emotion/styled';\r\nimport { AppBar, Box } from '@mui/material';\r\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\n\r\nimport Logo from '../../images/logo.webp';\r\n\r\nimport ALTA_Tooltip from './ALTA_Tooltip';\r\nimport ALTA_Alert from './ALTA_Alert';\r\n\r\nexport default function ALTA_Header() {\r\n  const navigate = useNavigate();\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('jwt');\r\n    localStorage.removeItem('refresh');\r\n    localStorage.removeItem('userData');\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <Box sx={wrapperStyle}>\r\n      <AppBar sx={navStyle}>\r\n        <StyledImg src={Logo} alt=\"\" />\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <StyledA>\r\n            <ALTA_Alert />\r\n          </StyledA>\r\n          <ALTA_Tooltip title=\"마이 페이지\">\r\n            <StyledA onClick={() => navigate('/mypage')}>\r\n              <AccountBoxIcon sx={{ fontSize: '40px', cursor: 'pointer' }} />\r\n            </StyledA>\r\n          </ALTA_Tooltip>\r\n          <ALTA_Tooltip title=\"로그아웃\">\r\n            <StyledA onClick={logout}>\r\n              <LogoutIcon sx={{ fontSize: '40px', cursor: 'pointer' }} />\r\n            </StyledA>\r\n          </ALTA_Tooltip>\r\n        </Box>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst wrapperStyle = {\r\n  height: '55px',\r\n};\r\n\r\nconst navStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  height: '55px',\r\n  padding: '0 20px',\r\n};\r\n\r\nconst StyledImg = styled.img`\r\n  width: 100px;\r\n`;\r\n\r\nconst StyledA = styled.button`\r\n  all: unset;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  margin-left: 10px;\r\n`;\r\n","import { Box } from '@mui/material';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\nexport default function ALTA_Inner({ children }: Props) {\r\n  return (\r\n    <Box className=\"ALTAInner\" sx={ALTAInner_style}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst ALTAInner_style = {\r\n  minWidth: '900px',\r\n  maxWidth: '900px',\r\n  height: '100%',\r\n  margin: '0 auto',\r\n  backgroundColor: 'inherit',\r\n};\r\n","import React from 'react';\r\nimport { Box } from '@mui/material';\r\n\r\ntype Props = {\r\n  header: React.ReactNode;\r\n  contents: React.ReactNode;\r\n};\r\n\r\nexport default function ALTA_Template({ header, contents }: Props) {\r\n  return (\r\n    <Box sx={layoutStyle}>\r\n      <Box sx={headerStyle}>{header}</Box>\r\n      <Box sx={contentsStyle}>{contents}</Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst layoutStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  height: '100vh',\r\n};\r\n\r\nconst headerStyle = {\r\n  flex: '0 1 auto',\r\n  width: '100%',\r\n};\r\nconst contentsStyle = {\r\n  flex: '1 1 auto',\r\n  overflowY: 'scroll',\r\n  scrollbarWidth: 'none',\r\n};\r\n","import { Tooltip, TooltipProps, tooltipClasses } from '@mui/material';\r\nimport { blackColor } from '../../modules/colorChart';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst CustomTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(() => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: blackColor,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: blackColor,\r\n  },\r\n}));\r\n\r\ntype Props = {\r\n  children: any;\r\n  title: string;\r\n};\r\n\r\nexport default function ALTA_Tooltip({ children, title }: Props) {\r\n  return <CustomTooltip title={title}>{children}</CustomTooltip>;\r\n}\r\n","export const mainColor = '#6d9886';\r\nexport const subColor = '#d9cab3';\r\nexport const errorColor = '#c99f9f';\r\nexport const blackColor = '#212121';\r\nexport const whiteColor = '#f6f6f6';\r\n","export function displayAt(value: Date) {\r\n  const today = new Date();\r\n  const timeValue = new Date(value);\r\n  const minutes = Math.floor((today.getTime() - timeValue.getTime()) / 1000 / 60);\r\n  if (minutes < 1) return `방금 전`;\r\n  if (minutes < 60) return `${minutes}분 전`;\r\n  const hours = Math.floor(minutes / 60);\r\n  if (hours < 24) return `${hours}시간 전`;\r\n  const days = Math.floor(hours / 24);\r\n  if (days < 7) return `${days}일 전`;\r\n  else return `${timeValue.getFullYear()}. ${timeValue.getMonth() + 1}. ${timeValue.getDate()}`;\r\n  // const weeks = Math.floor(days / 7);\r\n  // if (weeks < 5) return `${weeks}주 전`;\r\n  // const months = Math.floor(days / 30);\r\n  // if (months < 12) return `${months}개월 전`;\r\n  // const years = Math.floor(days / 365);\r\n  // return `${years}년 전`;\r\n}\r\n\r\nexport function renameDate(value: Date) {\r\n  const timeValue = new Date(value);\r\n  return `${timeValue.getFullYear()}. ${timeValue.getMonth() + 1}. ${timeValue.getDate()}`;\r\n}\r\n","import { stringify } from 'querystring';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport '../style/AlertStyle.css';\r\nimport { mainColor, whiteColor, blackColor, errorColor } from './colorChart';\r\n\r\nexport function generateCheck(title: string, text: string, callback: () => void | Promise<void> | null) {\r\n  Swal.fire({\r\n    title,\r\n    text,\r\n    showConfirmButton: true,\r\n    icon: 'success',\r\n    iconColor: mainColor,\r\n    confirmButtonColor: mainColor,\r\n    confirmButtonText: '확인',\r\n    color: blackColor,\r\n    background: whiteColor,\r\n  }).then(() => {\r\n    if (callback) callback();\r\n  });\r\n}\r\n\r\nexport function generateError(title: string, text: string, callback?: any) {\r\n  Swal.fire({\r\n    title,\r\n    text,\r\n    icon: 'error',\r\n    iconColor: errorColor,\r\n    color: blackColor,\r\n    background: whiteColor,\r\n    showConfirmButton: true,\r\n    confirmButtonColor: errorColor,\r\n    confirmButtonText: '돌아가기',\r\n  }).then(() => {\r\n    if (callback) callback();\r\n  });\r\n}\r\n\r\nexport function generateTimer(title: string, text: string) {\r\n  Swal.fire({\r\n    title,\r\n    text,\r\n    color: blackColor,\r\n    iconColor: mainColor,\r\n    background: whiteColor,\r\n    allowOutsideClick: false,\r\n    showCancelButton: false,\r\n    timerProgressBar: true,\r\n    didOpen: async () => {\r\n      Swal.showLoading();\r\n    },\r\n  });\r\n}\r\n\r\nexport function generateConfirm(\r\n  title: string,\r\n  text: string,\r\n  subTitle: string,\r\n  subText: string,\r\n  callback: () => Promise<any> | null,\r\n) {\r\n  Swal.fire({\r\n    title,\r\n    text,\r\n    icon: 'warning',\r\n    showCancelButton: true,\r\n    confirmButtonColor: mainColor,\r\n    confirmButtonText: '확인',\r\n    cancelButtonColor: errorColor,\r\n    color: blackColor,\r\n    background: whiteColor,\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      Swal.fire({\r\n        title: `${subTitle}`,\r\n        text: `${subText}`,\r\n        icon: 'success',\r\n        showConfirmButton: true,\r\n        confirmButtonColor: mainColor,\r\n        confirmButtonText: '확인',\r\n        color: blackColor,\r\n        background: whiteColor,\r\n      }).then(() => {\r\n        if (callback) callback();\r\n      });\r\n    }\r\n  });\r\n}\r\n","import { mainColor, subColor } from './colorChart';\r\n\r\nconst scrollStyle = {\r\n  '&::-webkit-scrollbar': {\r\n    width: '3px',\r\n    backgroundColor: mainColor,\r\n    borderRadius: '10px',\r\n  },\r\n  '&::-webkit-scrollbar-thumb': {\r\n    backgroundColor: subColor,\r\n    borderRadius: '10px',\r\n  },\r\n};\r\nexport default scrollStyle;\r\n","import React, { useState } from 'react';\r\nimport { StudyMember, TableData, chatResponse } from '../types';\r\nimport { ContextProps, ContextPromiseType } from '../types';\r\nimport {\r\n  deleteTableApi,\r\n  editNoticeContentApi,\r\n  editScheduleApi,\r\n  memberListApi,\r\n  noticeContentApi,\r\n  studyDetailDataApi,\r\n  chatDataApi,\r\n} from '../api/apis';\r\nimport { checkLogin } from '../modules/LoginTokenChecker';\r\n\r\nconst defaultValue: defaultValueType = {\r\n  members: [],\r\n  readmeData: [],\r\n  noticeContent: '',\r\n  maxPeople: 0,\r\n  isLeader: false,\r\n  studyName: '',\r\n  language: '',\r\n  getReadmeDetail: () => null,\r\n  getStudyMembers: () => null,\r\n  getNoticeContent: () => null,\r\n  editNoticeContent: () => null,\r\n  editSchedule: () => null,\r\n  deleteSchedule: () => null,\r\n  chatContents: [],\r\n  getChatContent: () => null,\r\n  setChatContents: () => null,\r\n};\r\nexport const StudyDetailStore = React.createContext(defaultValue);\r\n\r\nexport default function StudyDetailProvider({ children }: ContextProps) {\r\n  const [members, setMembers] = useState<StudyMember[]>([]);\r\n  const [readmeData, setReadmeData] = useState<TableData[]>([]);\r\n  const [noticeContent, setNoticeContent] = useState<string>('');\r\n  const [maxPeople, setMaxPeople] = useState<number>(0);\r\n  const [isLeader, setIsLeader] = useState<boolean>(false);\r\n  const [studyName, setStudyName] = useState<string>('');\r\n  const [chatContents, setChatContents] = useState<chatResponse[]>([]);\r\n  const [language, setLanguage] = useState<string>('');\r\n\r\n  const getReadmeDetail = async (studyId: number): Promise<ContextPromiseType> => {\r\n    const loginStatus = await checkLogin();\r\n\r\n    if (!loginStatus.status) return { status: -1, message: loginStatus.message };\r\n\r\n    try {\r\n      const response = await studyDetailDataApi(studyId);\r\n\r\n      setLanguage(response.studyLanguage);\r\n      setReadmeData(response.readme);\r\n      setStudyName(response.studyName);\r\n      return { status: 1, message: '스터디 리드미를 불러왔습니다' };\r\n    } catch (err: any) {\r\n      return { status: -2, message: err.response.data.message };\r\n    }\r\n  };\r\n\r\n  const getStudyMembers = async (studyId: number): Promise<ContextPromiseType> => {\r\n    const loginStatus = await checkLogin();\r\n\r\n    if (!loginStatus.status) return { status: -1, message: loginStatus.message };\r\n\r\n    try {\r\n      const response = await memberListApi(studyId);\r\n\r\n      const tmpMember = [...response.members];\r\n      while (tmpMember.length < response.studyMaxPeople) tmpMember.push({ nickname: '', position: '', profileImg: '' });\r\n\r\n      setMembers(tmpMember);\r\n      setMaxPeople(response.studyMaxPeople);\r\n      setIsLeader(response.isLeader);\r\n      return { status: 1, message: '스터디 참여자 정보를 불러왔습니다' };\r\n    } catch (err: any) {\r\n      return { status: -2, message: err.response.data.message };\r\n    }\r\n  };\r\n\r\n  const getNoticeContent = async (studyId: number): Promise<ContextPromiseType> => {\r\n    const loginStatus = await checkLogin();\r\n\r\n    if (!loginStatus.status) return { status: -1, message: loginStatus.message };\r\n\r\n    try {\r\n      const response = await noticeContentApi(studyId);\r\n\r\n      setNoticeContent(response.content);\r\n      return { status: 1, message: '공지사항을 불러왔습니다' };\r\n    } catch (err: any) {\r\n      return { status: -2, message: err.response.data.message };\r\n    }\r\n  };\r\n\r\n  const getChatContent = async (studyId: number): Promise<ContextPromiseType> => {\r\n    const loginStatus = await checkLogin();\r\n    if (!loginStatus.status) return { status: -1, message: loginStatus.message };\r\n    try {\r\n      const res = await chatDataApi(studyId);\r\n      setChatContents(res);\r\n      return { status: 1, message: '채팅 내역을 성공적으로 로드하였습니다!' };\r\n    } catch (err: any) {\r\n      return { status: -2, message: err.response.data.message };\r\n    }\r\n  };\r\n\r\n  const editSchedule = async (studyId: number, scheduleId: number, dateString: string): Promise<ContextPromiseType> => {\r\n    const loginStatus = await checkLogin();\r\n\r\n    if (!loginStatus.status) return { status: -1, message: loginStatus.message };\r\n    try {\r\n      await editScheduleApi(studyId, scheduleId, dateString);\r\n      await getReadmeDetail(studyId);\r\n      return { status: 1, message: '일정을 수정했습니다' };\r\n    } catch (err: any) {\r\n      return { status: -2, message: err.response.data.message };\r\n    }\r\n  };\r\n\r\n  const editNoticeContent = async (studyId: number, content: string): Promise<ContextPromiseType> => {\r\n    const loginStatus = await checkLogin();\r\n\r\n    if (!loginStatus.status) return { status: -1, message: loginStatus.message };\r\n    try {\r\n      await editNoticeContentApi(studyId, content);\r\n      await getNoticeContent(studyId);\r\n      return { status: 1, message: '공지사항을 수정했습니다' };\r\n    } catch (err: any) {\r\n      return { status: -2, message: err.response.data.message };\r\n    }\r\n  };\r\n\r\n  const deleteSchedule = async (studyId: number, scheduleId: number): Promise<ContextPromiseType> => {\r\n    const loginStatus = await checkLogin();\r\n\r\n    if (!loginStatus.status) return { status: -1, message: loginStatus.message };\r\n    try {\r\n      await deleteTableApi(studyId, scheduleId);\r\n      await getReadmeDetail(studyId);\r\n      return { status: 1, message: '일정을 삭제했습니다' };\r\n    } catch (err: any) {\r\n      return { status: -2, message: err.response.data.message };\r\n    }\r\n  };\r\n  const value = {\r\n    members,\r\n    readmeData,\r\n    noticeContent,\r\n    maxPeople,\r\n    isLeader,\r\n    studyName,\r\n    language,\r\n    getReadmeDetail,\r\n    getStudyMembers,\r\n    getNoticeContent,\r\n    editNoticeContent,\r\n    editSchedule,\r\n    deleteSchedule,\r\n    chatContents,\r\n    getChatContent,\r\n    setChatContents,\r\n  };\r\n  return <StudyDetailStore.Provider value={value}>{children}</StudyDetailStore.Provider>;\r\n}\r\n//Context 기본값 타입\r\ntype defaultValueType = {\r\n  members: StudyMember[];\r\n  readmeData: TableData[];\r\n  noticeContent: string;\r\n  maxPeople: number;\r\n  isLeader: boolean;\r\n  studyName: string;\r\n  language: string;\r\n  getReadmeDetail: (studyId: number) => any;\r\n  getStudyMembers: (studyId: number) => any;\r\n  getNoticeContent: (studyId: number) => any;\r\n  editNoticeContent: (studyId: number, content: string) => any;\r\n  editSchedule: (studyId: number, scheduleId: number, dateString: string) => any;\r\n  deleteSchedule: (studyId: number, scheduleId: number) => any;\r\n  chatContents: chatResponse[];\r\n  getChatContent: (studyId: number) => any;\r\n  setChatContents: (newData: chatResponse[]) => void;\r\n};\r\n","import { useState } from 'react';\r\nimport { Box, Typography, TextField, Button, LinearProgress } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport styled from '@emotion/styled';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\n\r\nimport { generateError } from '../../../modules/generateAlert';\r\nimport { blackColor } from '../../../modules/colorChart';\r\nimport { checkLogin } from '../../../modules/LoginTokenChecker';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { addScheduleApi } from '../../../api/apis';\r\n\r\ntype FliperProps = { fliper: () => void };\r\n\r\nexport const addTableBarFrontBuilder = () =>\r\n  function ALTA_AddTableBarFront({ fliper }: FliperProps) {\r\n    return (\r\n      <PlainBtn onClick={fliper}>\r\n        <Box sx={addTableBarFrontWrapper}>\r\n          <AddIcon sx={addIconStyle} />\r\n          <Typography sx={addTextStyle}>테이블 추가</Typography>\r\n        </Box>\r\n      </PlainBtn>\r\n    );\r\n  };\r\n\r\nexport const addTableBarBackBuilder = (studyId: number, getReadmeContents: (studyId: number) => void) =>\r\n  function Back({ fliper }: FliperProps) {\r\n    const navigate = useNavigate();\r\n\r\n    const [startDate, setStartDate] = useState<Date | null>(new Date());\r\n    const [endDate, setEndDate] = useState<Date | null>(new Date());\r\n    const [addLoading, setAddLoading] = useState<boolean>(false);\r\n\r\n    const addProblemTable = async (): Promise<void> => {\r\n      if (!(await checkLogin())) () => navigate('/');\r\n\r\n      //unix 시간을 비교하여 시작 > 마감의 경우 예외 처리\r\n      if (startDate && endDate) {\r\n        const unixStartTime = startDate.getTime();\r\n        const unixEndTime = endDate.getTime();\r\n\r\n        if (unixStartTime >= unixEndTime) {\r\n          generateError('시작 날짜는 마감 날짜보다 빨리야 합니다', '');\r\n          return;\r\n        }\r\n      }\r\n\r\n      try {\r\n        setAddLoading(true);\r\n\r\n        await addScheduleApi(studyId, startDate, endDate);\r\n        fliper();\r\n\r\n        setAddLoading(false);\r\n      } catch (err: any) {\r\n        if (err.response.data.code === 'S001') generateError('같은 날짜로 시작하는 회차가 존재합니다', '');\r\n        else generateError('새로운 회차를 생성할 수 없습니다', '');\r\n      }\r\n      getReadmeContents(studyId);\r\n\r\n      setStartDate(new Date());\r\n      setEndDate(new Date());\r\n    };\r\n\r\n    return (\r\n      <>\r\n        {' '}\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            height: 'inherit',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          {addLoading && <LinearProgress sx={{ width: '100%', height: '10px', margin: '10px' }} color=\"secondary\" />}\r\n          {!addLoading && (\r\n            <Box sx={{ display: 'flex' }}>\r\n              <Box sx={{ margin: '0 20px' }}>\r\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                  <DatePicker\r\n                    views={['day']}\r\n                    label=\"시작 날짜\"\r\n                    value={startDate}\r\n                    onChange={(newValue) => setStartDate(newValue)}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                  />\r\n                </LocalizationProvider>\r\n              </Box>\r\n              <Box sx={{ margin: '0 20px' }}>\r\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                  <DatePicker\r\n                    views={['day']}\r\n                    label=\"마감 날짜\"\r\n                    value={endDate}\r\n                    onChange={(newValue) => setEndDate(newValue)}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                  />\r\n                </LocalizationProvider>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n\r\n          <Box>\r\n            <Button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                addProblemTable();\r\n              }}\r\n            >\r\n              추가\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n        <Button color=\"error\" onClick={fliper}>\r\n          취소\r\n        </Button>\r\n      </>\r\n    );\r\n  };\r\n\r\nconst PlainBtn = styled.button`\r\n  all: unset;\r\n  width: 100%;\r\n  &:active {\r\n    transform: scale(0.99);\r\n  }\r\n  background-color: lightgray;\r\n  &:hover {\r\n    background-color: gray;\r\n  }\r\n  transition: background-color 0.3s;\r\n`;\r\n\r\nconst addIconStyle = { color: blackColor, opacity: '0.5', fontSize: '40px' };\r\nconst addTextStyle = { color: blackColor, opacity: '0.5', fontSize: '14px' };\r\nconst addTableBarFrontWrapper = {\r\n  display: 'flex',\r\n  height: 80,\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n};\r\n","import { Button, Grid, Typography } from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { StudyMember, Problem, Code } from '../../../types';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { blackColor, mainColor } from '../../../modules/colorChart';\r\n\r\nimport ALTA_Tooltip from '../../common/ALTA_Tooltip';\r\nimport { generateError } from '../../../modules/generateAlert';\r\n\r\ntype FilperProps = {\r\n  fliper: () => void;\r\n};\r\n\r\nexport const problemBarFrontBuilder = (\r\n  problem: Problem,\r\n  members: StudyMember[],\r\n  language: string,\r\n  maxPeople: number,\r\n  studyId: number,\r\n) =>\r\n  function Front({ fliper }: FilperProps) {\r\n    const findCodeId = (nickname: string, codes: Code[]): number | null => {\r\n      for (const code of codes) {\r\n        if (code.nickname === nickname) return code.id;\r\n      }\r\n      return null;\r\n    };\r\n\r\n    return (\r\n      <Grid container sx={tableBodyStyle}>\r\n        <Grid item xs={4} sx={sellStyle}>\r\n          <Button sx={problemEditBtnStyle} onClick={fliper}>\r\n            <ALTA_Tooltip title=\"문제 수정하기\">\r\n              <EditIcon />\r\n            </ALTA_Tooltip>\r\n          </Button>\r\n          <Typography sx={ellipsisStyle}>\r\n            <A href={problem.link} target=\"_blank\">\r\n              {problem.name}\r\n            </A>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={8} sx={sellStyle}>\r\n          <Grid container>\r\n            {members.map(\r\n              (member: StudyMember, i: number): JSX.Element => (\r\n                <Grid item key={`${i}-${member.nickname}`} xs={12 / maxPeople} sx={sellStyle}>\r\n                  <Typography>\r\n                    {member.nickname ? (\r\n                      <SellBtn\r\n                        codeId={findCodeId(member.nickname, problem.codes)}\r\n                        problem={problem}\r\n                        memberName={member.nickname}\r\n                        studyId={studyId}\r\n                        language={language}\r\n                      />\r\n                    ) : (\r\n                      '-'\r\n                    )}\r\n                  </Typography>\r\n                </Grid>\r\n              ),\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\ntype SellBtnProps = {\r\n  codeId: number | null;\r\n  problem: Problem;\r\n  memberName: string;\r\n  studyId: number;\r\n  language: string;\r\n};\r\n\r\nfunction SellBtn({ codeId, problem, memberName, studyId, language }: SellBtnProps) {\r\n  const navigate = useNavigate();\r\n  const userData = localStorage.getItem('UserData');\r\n\r\n  const goCodeSumbit = (): void => {\r\n    if (userData && JSON.parse(userData).nickname !== memberName) {\r\n      generateError('', '다른 사람의 제출 버튼을 누르셨습니다');\r\n    } else {\r\n      const problemId = problem.id;\r\n      navigate(`/study/${studyId}/${problemId}/${problem.name}/0/code-submit/${language}`);\r\n    }\r\n  };\r\n\r\n  const goCodeDetail = (): void => {\r\n    if (codeId) navigate(`/study/${studyId}/${problem.name}/code/${codeId}/${language}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {codeId ? (\r\n        <a>\r\n          <Button onClick={goCodeDetail}>코드 보기</Button>\r\n        </a>\r\n      ) : (\r\n        <>\r\n          {userData && JSON.parse(userData).nickname === memberName ? (\r\n            <a>\r\n              <Button sx={omisstionBtnStyle} onClick={goCodeSumbit}>\r\n                코드 제출\r\n              </Button>\r\n            </a>\r\n          ) : (\r\n            <Typography style={{ cursor: 'default' }}>-</Typography>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nconst tableBodyStyle = {\r\n  'height': '40px',\r\n  '&:nth-of-type(even)': {\r\n    backgroundColor: 'rgba(224, 212, 194, 0.3)',\r\n  },\r\n};\r\n\r\nconst sellStyle = {\r\n  position: 'relative',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n};\r\n\r\nconst ellipsisStyle = {\r\n  whiteSpace: 'nowrap',\r\n  overflow: 'hidden',\r\n  textOverflow: 'ellipsis',\r\n};\r\n\r\nconst omisstionBtnStyle = {\r\n  color: 'error.main',\r\n};\r\n\r\nconst problemEditBtnStyle = {\r\n  'position': 'absolute',\r\n  'minWidth': '20px',\r\n  'padding': 0.5,\r\n  'left': 2,\r\n  'cursor': 'pointer',\r\n  'color': blackColor,\r\n  '&:hover': {\r\n    color: 'primary.main',\r\n  },\r\n  '*': {\r\n    fontSize: '20px',\r\n  },\r\n};\r\n\r\nconst A = styled.a`\r\n  all: unset;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: ${mainColor};\r\n  }\r\n`;\r\n","import { useContext, useState } from 'react';\r\nimport { Box, Typography, Button, LinearProgress } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { blackColor, subColor, whiteColor } from '../../../modules/colorChart';\r\nimport { generateError } from '../../../modules/generateAlert';\r\nimport { StudyDetailStore } from '../../../context/StudyDetailContext';\r\nimport { checkLogin } from '../../../modules/LoginTokenChecker';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { addProblemApi, editProblemApi } from '../../../api/apis';\r\n\r\nimport ALTA_Tooltip from '../../common/ALTA_Tooltip';\r\n\r\ntype FliperProps = { fliper: () => void };\r\n\r\nexport const addProblemBarFrontBuilder = () =>\r\n  function Front({ fliper }: FliperProps) {\r\n    return (\r\n      <ALTA_Tooltip title=\"문제 추가하기\">\r\n        <PlainBtn onClick={fliper}>\r\n          <Box sx={addProblemBarFrontStyle}>\r\n            <AddCircleIcon sx={addIconStyle} />\r\n          </Box>\r\n        </PlainBtn>\r\n      </ALTA_Tooltip>\r\n    );\r\n  };\r\n\r\nexport const addProblemBarBackBuilder = (\r\n  studyId: number,\r\n  scheduleId: number,\r\n  name?: string,\r\n  link?: string,\r\n  id?: number,\r\n) =>\r\n  function Back({ fliper }: FliperProps) {\r\n    const { getReadmeDetail } = useContext(StudyDetailStore);\r\n    const navigate = useNavigate();\r\n\r\n    const [problemId, _] = useState<number>(id ? id : -1);\r\n    const [problemName, setPropblemName] = useState<string>(name ? name : '');\r\n    const [problemLink, setPropblemLink] = useState<string>(link ? link : '');\r\n    const [editProblemLoading, setEditProblemLoading] = useState<boolean>(false);\r\n\r\n    const addProblem = async (): Promise<void> => {\r\n      if (!(await checkLogin())) navigate('/');\r\n\r\n      if (!problemName || !problemLink) {\r\n        generateError('문제 이름과 링크를 모두 입력해주세요', '');\r\n        return;\r\n      }\r\n\r\n      setEditProblemLoading(true);\r\n\r\n      try {\r\n        await addProblemApi(studyId, scheduleId, problemName, problemLink);\r\n      } catch (err: any) {\r\n        generateError('문제를 추가할 수 없습니다', err.response.data.message);\r\n      } finally {\r\n        setEditProblemLoading(false);\r\n      }\r\n\r\n      setPropblemName('');\r\n      setPropblemLink('');\r\n      getReadmeDetail(studyId);\r\n    };\r\n\r\n    const editProblem = async (): Promise<void> => {\r\n      if (!(await checkLogin())) navigate('/');\r\n\r\n      if (name && name === problemName && link && link === problemLink) {\r\n        generateError('변경 사항이 없습니다', '');\r\n        return;\r\n      }\r\n\r\n      setEditProblemLoading(true);\r\n\r\n      try {\r\n        await editProblemApi(studyId, problemId, problemName, problemLink);\r\n        fliper();\r\n        getReadmeDetail(studyId);\r\n      } catch (err: any) {\r\n        generateError('문제를 수정할 수 없습니다', err.response.data.message);\r\n      } finally {\r\n        setEditProblemLoading(false);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            height: 'inherit',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          {editProblemLoading && (\r\n            <LinearProgress sx={{ width: '100%', height: '5px', margin: '10px' }} color=\"secondary\" />\r\n          )}\r\n          {!editProblemLoading && (\r\n            <Box sx={{ display: 'flex' }}>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', margin: '0 20px' }}>\r\n                <Typography sx={{ marginRight: '10px' }}>문제 이름</Typography>\r\n                <Input type=\"text\" value={problemName} onChange={(e) => setPropblemName(e.target.value)} />\r\n              </Box>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', margin: '0 20px' }}>\r\n                <Typography sx={{ marginRight: '10px' }}>링크</Typography>\r\n                <Input\r\n                  type=\"text\"\r\n                  value={problemLink}\r\n                  style={{ width: '300px' }}\r\n                  onChange={(e) => setPropblemLink(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Box>\r\n          )}\r\n          {!name && <Button onClick={addProblem}>생성</Button>}\r\n          {name && <Button onClick={editProblem}>수정</Button>}\r\n        </Box>\r\n        <Button color=\"error\" onClick={fliper}>\r\n          취소\r\n        </Button>\r\n      </>\r\n    );\r\n  };\r\n\r\nconst addIconStyle = { color: blackColor, opacity: '0.5' };\r\nconst addProblemBarFrontStyle = {\r\n  display: 'flex',\r\n  height: 40,\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n};\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  width: 200px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  padding: 0 5px;\r\n  box-sizing: border-box;\r\n  border-bottom: 1px solid ${subColor};\r\n  background-color: ${whiteColor};\r\n`;\r\n\r\nconst PlainBtn = styled.button`\r\n  all: unset;\r\n  width: 100%;\r\n  &:active {\r\n    transform: scale(0.99);\r\n  }\r\n  background-color: lightgray;\r\n  &:hover {\r\n    background-color: gray;\r\n  }\r\n  transition: background-color 0.3s;\r\n`;\r\n","import { Box, Button } from '@mui/material';\r\nimport { useState } from 'react';\r\n\r\nexport default function ALTA_FlipBar({ height, Front, Back }: Props) {\r\n  const [flip, setFlip] = useState<number>(180);\r\n\r\n  const fliper = (): void => setFlip(flip > 0 ? 0 : 180);\r\n\r\n  return (\r\n    <Box sx={wrapperStyle}>\r\n      <Box sx={[frontStyle, { height }, { transform: `rotateX(${180 - flip}deg)` }]}>\r\n        <Front fliper={fliper} />\r\n      </Box>\r\n      <Box sx={[backStyle, { height }, { transform: `rotateX(${0 - flip}deg)` }]}>\r\n        <Back fliper={fliper} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\ntype Props = {\r\n  height: string;\r\n  Front: ({ fliper }: { fliper: () => void }) => JSX.Element;\r\n  Back: ({ fliper }: { fliper: () => void }) => JSX.Element;\r\n};\r\n\r\nconst wrapperStyle = {\r\n  position: 'relative',\r\n  width: '100%',\r\n  cursor: 'pointer',\r\n};\r\n\r\nconst frontStyle = {\r\n  width: '100%',\r\n  height: 'inherit',\r\n  position: 'absolute',\r\n  transition: 'transform 0.5s',\r\n  backfaceVisibility: 'hidden',\r\n};\r\n\r\nconst backStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  width: '100%',\r\n  height: 'inherit',\r\n  position: 'absolute',\r\n  transition: 'transform 0.5s',\r\n  backfaceVisibility: 'hidden',\r\n  boxSizing: 'border-box',\r\n  border: '3px solid #d9cab3',\r\n};\r\n","import { useContext, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Box } from '@mui/system';\r\nimport styled from '@emotion/styled';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Button, Grid, LinearProgress, Typography, Alert, CircularProgress } from '@mui/material';\r\n\r\nimport { generateError } from '../../modules/generateAlert';\r\nimport { StudyMember, Problem } from '../../types';\r\nimport { blackColor, subColor } from '../../modules/colorChart';\r\nimport { problemBarFrontBuilder } from './builder/ALTA_ProblemBarBuilder';\r\nimport { StudyDetailStore } from '../../context/StudyDetailContext';\r\nimport { addProblemBarBackBuilder, addProblemBarFrontBuilder } from './builder/ALTA_AddProblemBarBuilder';\r\n\r\nimport ALTA_FlipBar from '../common/ALTA_FlipBar';\r\nimport ALTA_Tooltip from '../common/ALTA_Tooltip';\r\n\r\ntype Props = {\r\n  problems: Problem[];\r\n  studyId: number;\r\n  scheduleId: number;\r\n  table: any;\r\n};\r\n\r\nexport default function ALTA_ProblemTable({ problems, studyId, scheduleId, table }: Props) {\r\n  const navigate = useNavigate();\r\n  const { members, maxPeople, language, editSchedule, deleteSchedule } = useContext(StudyDetailStore);\r\n\r\n  const [scheduleEditing, setScheduleEditing] = useState<boolean>(false);\r\n  const [isError, setIsError] = useState<boolean>(false);\r\n  const [schedule, setSchedule] = useState<string>(`${table.startDate} ~ ${table.endDate}`);\r\n  const [editLoading, setEditLoading] = useState<boolean>(false);\r\n  const [removeLoading, setRemoveLoading] = useState<boolean>(false);\r\n\r\n  const edit = async (studyId: number, scheduleId: number, dateString: string): Promise<void> => {\r\n    if (schedule === `${table.startDate} ~ ${table.endDate}`) {\r\n      setIsError(true);\r\n      setTimeout(() => setIsError(false), 2500);\r\n    } else {\r\n      setEditLoading(true);\r\n\r\n      const editApiStatue = await editSchedule(studyId, scheduleId, dateString);\r\n\r\n      if (editApiStatue.status === -1) navigate('/');\r\n      else if (editApiStatue.status === -2) generateError('일정을 수정하지 못했습니다', editApiStatue.message);\r\n\r\n      setEditLoading(false);\r\n    }\r\n  };\r\n\r\n  const remove = async (studyId: number, scheduleId: number): Promise<void> => {\r\n    setRemoveLoading(true);\r\n    const editApiStatue = await deleteSchedule(studyId, scheduleId);\r\n\r\n    setTimeout(() => setRemoveLoading(false), 1000);\r\n    if (editApiStatue.status === -1) navigate('/');\r\n    else if (editApiStatue.status === -2) generateError('일정을 삭제하지 못했습니다', editApiStatue.message);\r\n\r\n    setRemoveLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box sx={sectionStyle}>\r\n        <Box sx={{ position: 'relative', display: 'flex', alignItems: 'center' }}>\r\n          {`${table.round} 회차 : `}\r\n          <Alert sx={[alertStyle, isError && errorVisible]} severity=\"error\">\r\n            일정에 변화가 없어 반영되지 않습니다\r\n          </Alert>\r\n          {editLoading && <LinearProgress sx={{ width: '200px', marginLeft: '5px' }} color=\"secondary\" />}\r\n          {!editLoading && (\r\n            <StyledInput\r\n              type=\"text\"\r\n              className={`${scheduleEditing && 'editing'}`}\r\n              value={schedule}\r\n              disabled={!scheduleEditing}\r\n              onChange={(e) => setSchedule(e.target.value)}\r\n            />\r\n          )}\r\n          <Button sx={btnStyle} onClick={() => setScheduleEditing(!scheduleEditing)}>\r\n            {!scheduleEditing && (\r\n              <ALTA_Tooltip title=\"일정 수정하기\">\r\n                <EditIcon />\r\n              </ALTA_Tooltip>\r\n            )}\r\n            {scheduleEditing && (\r\n              <ALTA_Tooltip title=\"저장하기\">\r\n                <SaveIcon onClick={() => edit(studyId, table.id, schedule)} />\r\n              </ALTA_Tooltip>\r\n            )}\r\n          </Button>\r\n        </Box>\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n          {!removeLoading && (\r\n            <ALTA_Tooltip title=\"테이블 삭제\">\r\n              <Button sx={btnStyle}>\r\n                <DeleteIcon onClick={() => remove(studyId, scheduleId)} />\r\n              </Button>\r\n            </ALTA_Tooltip>\r\n          )}\r\n          {removeLoading && <CircularProgress size={20} sx={{ marginRight: 1 }} />}\r\n        </Box>\r\n      </Box>\r\n      <Box sx={tableStyle}>\r\n        <Box>\r\n          <Box>\r\n            <Grid container sx={tableHeaderStyle}>\r\n              <Grid item xs={4} sx={[sellStyle, ellipsisStyle]}>\r\n                <Typography>제목</Typography>\r\n              </Grid>\r\n              <Grid item xs={8} sx={[sellStyle, ellipsisStyle]}>\r\n                <Grid container>\r\n                  {members.map(\r\n                    (member: StudyMember, i: number): JSX.Element => (\r\n                      <Grid item key={`${i}-${member.nickname}`} xs={12 / maxPeople} sx={[sellStyle, ellipsisStyle]}>\r\n                        <Typography sx={ellipsisStyle}>{member.nickname ? member.nickname : '-'}</Typography>\r\n                      </Grid>\r\n                    ),\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        <Box>\r\n          {problems &&\r\n            problems.map(\r\n              (problem: Problem): JSX.Element => (\r\n                <Box sx={{ height: '40px' }} key={problem.id}>\r\n                  <ALTA_FlipBar\r\n                    height=\"40px\"\r\n                    Front={problemBarFrontBuilder(problem, members, language, maxPeople, studyId)}\r\n                    Back={addProblemBarBackBuilder(studyId, scheduleId, problem.name, problem.link, problem.id)}\r\n                  />\r\n                </Box>\r\n              ),\r\n            )}\r\n        </Box>\r\n        <ALTA_FlipBar\r\n          height=\"40px\"\r\n          Front={addProblemBarFrontBuilder()}\r\n          Back={addProblemBarBackBuilder(studyId, scheduleId)}\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nconst tableStyle = {\r\n  marginTop: '10px',\r\n};\r\n\r\nconst tableHeaderStyle = {\r\n  height: '40px',\r\n  backgroundColor: subColor,\r\n};\r\n\r\nconst sellStyle = {\r\n  position: 'relative',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  padding: '0 5px',\r\n};\r\n\r\nconst ellipsisStyle = {\r\n  whiteSpace: 'nowrap',\r\n  overflow: 'hidden',\r\n  textOverflow: 'ellipsis',\r\n};\r\n\r\nconst sectionStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n};\r\n\r\nconst btnStyle = {\r\n  'minWidth': '20px',\r\n  'padding': 0.5,\r\n  'cursor': 'pointer',\r\n  'color': blackColor,\r\n  '&:hover': {\r\n    color: 'primary.main',\r\n  },\r\n  '*': {\r\n    fontSize: '20px',\r\n  },\r\n};\r\n\r\nconst alertStyle = {\r\n  position: 'absolute',\r\n  bottom: 30,\r\n  margin: 0,\r\n  marginLeft: 1,\r\n  padding: '0 10px',\r\n  opacity: 0,\r\n  transition: 'opacity .3s',\r\n};\r\n\r\nconst errorVisible = {\r\n  opacity: 1,\r\n};\r\n\r\nconst StyledInput = styled.input`\r\n  all: unset;\r\n  width: 200px;\r\n  margin-left: 5px;\r\n  font-size: 16px;\r\n  &.editing {\r\n    background-color: rgba(224, 212, 194, 0.6);\r\n  }\r\n`;\r\n","import { useState, useContext, useEffect } from 'react';\r\nimport { Box, Button, CircularProgress } from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport styled from '@emotion/styled';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nimport { StudyDetailStore } from '../../context/StudyDetailContext';\r\nimport { blackColor, subColor } from '../../modules/colorChart';\r\nimport { generateError } from '../../modules/generateAlert';\r\nimport scrollStyle from '../../modules/scrollStyle';\r\n\r\nimport ALTA_Tooltip from '../../components/common/ALTA_Tooltip';\r\n\r\ntype Params = {\r\n  studyId: string | undefined;\r\n};\r\n\r\nexport default function ALTA_Notice() {\r\n  const { noticeContent, getNoticeContent, editNoticeContent } = useContext(StudyDetailStore);\r\n  const navigate = useNavigate();\r\n  const { studyId } = useParams<Params>();\r\n\r\n  const [notice, setNotice] = useState<string>('');\r\n  const [noticeEditing, setNoticeEditing] = useState<boolean>(false);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      if (studyId) {\r\n        const noticeStatus = await getNoticeContent(Number(studyId));\r\n\r\n        if (noticeStatus.status === -1) navigate('/');\r\n        else if (noticeStatus.status === -2)\r\n          generateError('스터디 진행 정보를 불러올 수 없습니다', noticeStatus.message);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setNotice(noticeContent ? noticeContent.replaceAll('<br />', '\\n') : '');\r\n  }, [noticeContent]);\r\n\r\n  const edit = async (): Promise<void> => {\r\n    if (notice !== noticeContent) {\r\n      setLoading(true);\r\n      const noticeApiStatus = await editNoticeContent(Number(studyId), notice.replaceAll('\\n', '<br />'));\r\n\r\n      if (noticeApiStatus.status === -1) navigate('/');\r\n      else if (noticeApiStatus.status === -2) generateError('공지사항을 변경할 수 없습니다', noticeApiStatus.message);\r\n      else {\r\n        setNoticeEditing(false);\r\n      }\r\n\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={noticeWrapper}>\r\n      <h1>스터디 공지사항</h1>\r\n      <Box sx={titleStyle}>\r\n        공지사항\r\n        <Button sx={btnStyle} onClick={(): void => setNoticeEditing(!noticeEditing)}>\r\n          {!noticeEditing && (\r\n            <ALTA_Tooltip title=\"공지사항 수정하기\">\r\n              <EditIcon />\r\n            </ALTA_Tooltip>\r\n          )}\r\n          {noticeEditing && (\r\n            <ALTA_Tooltip title=\"저장하기\">\r\n              <SaveIcon onClick={edit} />\r\n            </ALTA_Tooltip>\r\n          )}\r\n        </Button>\r\n      </Box>\r\n      <Box sx={[noticeStyle, scrollStyle]}>\r\n        {loading && (\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              width: '100%',\r\n            }}\r\n          >\r\n            <CircularProgress />\r\n          </Box>\r\n        )}\r\n        {!loading && (\r\n          <StyledTextArea\r\n            value={notice}\r\n            disabled={!noticeEditing}\r\n            onChange={(e) => {\r\n              setNotice(e.target.value);\r\n            }}\r\n          />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst noticeWrapper = {\r\n  padding: 2,\r\n  margin: 2,\r\n  boxSizing: 'border-box',\r\n  borderRadius: '5px',\r\n  backgroundColor: subColor,\r\n};\r\n\r\nconst titleStyle = {\r\n  position: 'relative',\r\n  marginBottom: '10px',\r\n  padding: '5px 10px',\r\n  boxSizing: 'border-box',\r\n  borderBottom: '1px solid black',\r\n  fontSize: '20px',\r\n  textAlign: 'center',\r\n};\r\n\r\nconst btnStyle = {\r\n  'position': 'absolute',\r\n  'right': 5,\r\n  'top': 5,\r\n  'minWidth': '20px',\r\n  'padding': 0.5,\r\n  'cursor': 'pointer',\r\n  'color': blackColor,\r\n  '&:hover': {\r\n    color: 'primary.main',\r\n  },\r\n  '*': {\r\n    fontSize: '20px',\r\n  },\r\n};\r\n\r\nconst noticeStyle = {\r\n  display: 'flex',\r\n  minHeight: '300px',\r\n  marginBottom: '10px',\r\n  padding: '10px',\r\n  boxSizing: 'border-box',\r\n  backgroundColor: '#fff',\r\n  borderRadius: '5px',\r\n};\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  all: unset;\r\n  flex: 1 1 auto;\r\n  width: 100%;\r\n  white-space: pre-line;\r\n  color: ${blackColor};\r\n  ::-webkit-scrollbar {\r\n    width: 5px;\r\n    background-color: #d9cab3;\r\n    border-radius: 10px;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    border-radius: 10px;\r\n    background-color: #6d9886;\r\n  }\r\n`;\r\n","import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport { useParams, useNavigate, NavigateFunction } from 'react-router-dom';\r\nimport { Box, Input, Button, Avatar, Grid, Typography } from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nimport scrollStyle from '../../modules/scrollStyle';\r\nimport { chatResponse } from '../../types';\r\nimport { StudyDetailStore } from '../../context/StudyDetailContext';\r\nimport { generateError } from '../../modules/generateAlert';\r\nimport { displayAt } from '../../modules/displayAt';\r\nimport { addChatApi } from '../../api/apis';\r\nimport { checkLogin } from '../../modules/LoginTokenChecker';\r\nimport { subColor } from '../../modules/colorChart';\r\n\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'stompjs';\r\n\r\nconst headers = {\r\n  ACCESS_TOKEN: `Bearer ${localStorage.getItem('jwt')}`,\r\n};\r\n\r\ntype Params = {\r\n  studyId: string | undefined;\r\n};\r\n\r\nexport default function ALTA_Chat() {\r\n  const { studyId } = useParams<Params>();\r\n  const navigate: NavigateFunction = useNavigate();\r\n  const { chatContents, setChatContents } = useContext(StudyDetailStore);\r\n  const chatInput: React.MutableRefObject<any> = useRef<any>(null);\r\n  const [buffer, setBuffer] = useState<any>('');\r\n\r\n  let name = '';\r\n  const userData: string | null = localStorage.getItem('UserData');\r\n  if (userData) {\r\n    name = JSON.parse(userData)['nickname'];\r\n  }\r\n\r\n  const [message, setMessage] = useState<string>('');\r\n  const [connect, setConnect] = useState<boolean>(false);\r\n\r\n  useEffect((): void => {\r\n    if (buffer !== '') {\r\n      setChatContents([...chatContents, buffer]);\r\n      setBuffer('');\r\n    }\r\n  }, [buffer]);\r\n  let stompClient: Stomp.Client;\r\n  useEffect(() => {\r\n    if (!connect) {\r\n      const socketJS = new SockJS(`${process.env.REACT_APP_BASE_URL}/api/ws`);\r\n      stompClient = Stomp.over(socketJS);\r\n      stompClient.debug = (): void => {\r\n        '1';\r\n      };\r\n      stompClient.connect(headers, (): void => {\r\n        stompClient.subscribe(`/api/topic/${studyId}`, (data: Stomp.Message): void => {\r\n          const newMessage: chatResponse = JSON.parse(data.body);\r\n          setBuffer(newMessage);\r\n        });\r\n        setConnect(true);\r\n      });\r\n    }\r\n    return () => {\r\n      stompClient.disconnect(() => setConnect(false));\r\n    };\r\n  }, []);\r\n\r\n  window.onbeforeunload = function () {\r\n    stompClient.disconnect(() => setConnect(false));\r\n  };\r\n\r\n  useEffect((): void => {\r\n    scrollBottom();\r\n  }, [chatContents]);\r\n\r\n  const scrollBottom = (): void => {\r\n    if (chatInput.current) {\r\n      chatInput.current.scrollTo({\r\n        top: chatInput.current.scrollHeight,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEnter = async (): Promise<void> => {\r\n    if (message === '') generateError('채팅을 입력해주세요', '');\r\n    else {\r\n      if (!(await checkLogin()).status) navigate('/');\r\n      else {\r\n        await addChatApi(Number(studyId), message);\r\n        setMessage('');\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Box sx={chatWrapper}>\r\n      <h1>스터디 소통 창구</h1>\r\n      <Box sx={titleStyle}>소통창구</Box>\r\n      <Box sx={[chatBoxStyle, scrollStyle]} ref={chatInput}>\r\n        <Box>\r\n          {chatContents ? (\r\n            <>\r\n              {chatContents.map(\r\n                (mes: chatResponse, idx: number): JSX.Element => (\r\n                  <Grid container key={idx} sx={infoStyle} columns={14}>\r\n                    {name === mes.nickname ? (\r\n                      <>\r\n                        <Grid item md={12} sx={rightListStyle}>\r\n                          <Grid item sx={chatRightStyle}>\r\n                            <Typography sx={nameRightStyle}>{mes.nickname}</Typography>\r\n                            <Grid container sx={{ justifyContent: 'right' }}>\r\n                              <Grid item sx={dateRightStyle}>\r\n                                <Typography sx={{ fontSize: '12px' }}>{displayAt(new Date(mes.writeDate))}</Typography>\r\n                              </Grid>\r\n                              <Grid item sx={bubbleRightStyle}>\r\n                                {mes.message}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid item md={2} sx={profileRightStyle}>\r\n                          <Avatar src={mes.image} />\r\n                        </Grid>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Grid item md={2} sx={profileLeftStyle}>\r\n                          <Avatar src={mes.image} />\r\n                        </Grid>\r\n                        <Grid item md={12} sx={leftListStyle}>\r\n                          <Grid item sx={chatLeftStyle}>\r\n                            <Typography>{mes.nickname}</Typography>\r\n                            <Grid container>\r\n                              <Grid item sx={bubbleLeftStyle}>\r\n                                {mes.message}\r\n                              </Grid>\r\n                              <Grid item sx={dateLeftStyle}>\r\n                                <Typography>{displayAt(new Date(mes.writeDate))}</Typography>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n                  </Grid>\r\n                ),\r\n              )}\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n      <Box sx={chatInputStyle}>\r\n        <Input\r\n          fullWidth\r\n          placeholder=\"메세지를 입력하세요\"\r\n          value={message}\r\n          sx={{ padding: '0 5px', marginRight: '5px' }}\r\n          onChange={(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>): void => setMessage(e.target.value)}\r\n          onKeyDown={(ev: React.KeyboardEvent<HTMLTextAreaElement | HTMLInputElement>): void => {\r\n            if (ev.key === 'Enter') {\r\n              handleEnter();\r\n            }\r\n          }}\r\n        />\r\n        <Button variant=\"contained\" sx={sendBtnStyle} onClick={handleEnter}>\r\n          <SendIcon />\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst chatWrapper = {\r\n  width: '100%',\r\n  height: '860px',\r\n  padding: 2,\r\n  margin: 2,\r\n  boxSizing: 'border-box',\r\n  borderRadius: '5px',\r\n  backgroundColor: subColor,\r\n};\r\n\r\nconst titleStyle = {\r\n  position: 'relative',\r\n  marginBottom: '10px',\r\n  padding: '5px 10px',\r\n  boxSizing: 'border-box',\r\n  borderBottom: '1px solid black',\r\n  fontSize: '20px',\r\n  textAlign: 'center',\r\n};\r\n\r\nconst chatBoxStyle = {\r\n  height: '88%',\r\n  boxSizing: 'border-box',\r\n  backgroundColor: '#fff',\r\n  borderRadius: '5px',\r\n  overflowY: 'scroll',\r\n};\r\n\r\nconst chatInputStyle = {\r\n  display: 'flex',\r\n  marginTop: '10px',\r\n};\r\n\r\nconst infoStyle = {\r\n  alignItems: 'center',\r\n  display: 'flex',\r\n  marginBottom: '13px',\r\n};\r\n\r\nconst profileRightStyle = {\r\n  justifyContent: 'center',\r\n};\r\n\r\nconst nameRightStyle = {\r\n  textAlign: 'right',\r\n  marginBottom: '5px',\r\n  marginRight: '5px',\r\n};\r\n\r\nconst profileLeftStyle = {\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n};\r\n\r\nconst leftListStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'start',\r\n};\r\n\r\nconst bubbleLeftStyle = {\r\n  border: '0.5px solid black',\r\n  borderRadius: '10px',\r\n  padding: '10px',\r\n  display: 'inline-block',\r\n};\r\n\r\nconst chatLeftStyle = {\r\n  margin: '0 10px',\r\n  textAlign: 'left',\r\n};\r\n\r\nconst rightListStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'end',\r\n};\r\n\r\nconst bubbleRightStyle = {\r\n  border: '0.5px solid black',\r\n  borderRadius: '10px',\r\n  padding: '10px',\r\n  display: 'inline-block',\r\n};\r\n\r\nconst chatRightStyle = {\r\n  margin: '0 10px',\r\n};\r\n\r\nconst dateRightStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column-reverse',\r\n  marginRight: '5px',\r\n  color: 'gray',\r\n};\r\n\r\nconst dateLeftStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column-reverse',\r\n  marginLeft: '5px',\r\n  color: 'gray',\r\n};\r\n\r\nconst sendBtnStyle = {\r\n  minWidth: 3,\r\n  height: '30px',\r\n};\r\n","import { Box, Card, Typography } from '@mui/material';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport DoNotDisturbAltIcon from '@mui/icons-material/DoNotDisturbAlt';\r\n\r\nimport defaultProfile from '../../images/user.webp';\r\nimport { StudyMember } from '../../types';\r\n\r\ntype Props = { member: StudyMember | null };\r\n\r\nexport default function ALTA_StudyMemberCard({ member }: Props) {\r\n  return (\r\n    <>\r\n      {member && (\r\n        <Card variant=\"outlined\" sx={[memberCardStyle, member.position === '' && { opacity: '.5' }]}>\r\n          <Box sx={profileStyle}>\r\n            <img src={member.profileImg ? member.profileImg : defaultProfile} alt=\"\" />\r\n          </Box>\r\n          <Typography sx={nicknameStyle}>\r\n            <span>{member.nickname}</span>\r\n            {member.position === '그룹장' ? <StarIcon sx={LeaderIconStyle} /> : null}\r\n          </Typography>\r\n        </Card>\r\n      )}\r\n      {!member && (\r\n        <Card variant=\"outlined\" sx={[memberCardStyle, memberCardStyle_Empty]}>\r\n          <DoNotDisturbAltIcon />\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst memberCardStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  margin: '10px 5px',\r\n  padding: '5px',\r\n  backgroundColor: 'primary.main',\r\n};\r\n\r\nconst memberCardStyle_Empty = {\r\n  justifyContent: 'center',\r\n  height: '40px',\r\n  backgroundColor: 'lightgray',\r\n  opacity: '.7',\r\n  color: 'gray',\r\n};\r\n\r\nconst profileStyle = {\r\n  'display': 'flex',\r\n  'justifyContent': 'center',\r\n  'alignItems': 'center',\r\n  'width': '40px',\r\n  'height': '40px',\r\n  'borderRadius': '50px',\r\n  'overflow': 'hidden',\r\n  '> img': {\r\n    width: '100%',\r\n  },\r\n};\r\n\r\nconst nicknameStyle = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  flex: '1 1 auto',\r\n  marginLeft: '20px',\r\n};\r\n\r\nconst LeaderIconStyle = { fontSize: 'medium', margin: '5px', color: 'secondary.main' };\r\n","import styled from '@emotion/styled';\r\nimport { Box, Button } from '@mui/material';\r\nimport { useContext } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\r\n\r\nimport { StudyMember } from '../../types';\r\nimport { StudyDetailStore } from '../../context/StudyDetailContext';\r\nimport { blackColor, subColor } from '../../modules/colorChart';\r\n\r\nimport ALTA_StudyMemberCard from './ALTA_StudyMemberCard';\r\nimport ALTA_Tooltip from '../common/ALTA_Tooltip';\r\n\r\ntype Params = {\r\n  studyId: string | undefined;\r\n};\r\n\r\nexport default function ALTA_StudyMembers() {\r\n  const { studyId } = useParams<Params>();\r\n  const { members, isLeader } = useContext(StudyDetailStore);\r\n  const navigate = useNavigate();\r\n  const goMemberManagement = (): void => navigate(`/study/${studyId}/member`);\r\n\r\n  const RenderCardList = () => {\r\n    const tmp: (StudyMember | null)[] = [...members];\r\n\r\n    while (tmp.length < 6) tmp.push(null);\r\n\r\n    return tmp.map(\r\n      (member: StudyMember | null, i: number): JSX.Element => (\r\n        <ALTA_StudyMemberCard key={`${i}-${JSON.stringify(member)}`} member={member} />\r\n      ),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box sx={membersWrapper}>\r\n      <h1>스터디 멤버 목록</h1>\r\n      <Box sx={listStyle}>\r\n        <Box sx={titleStyle}>\r\n          멤버 목록\r\n          {isLeader && (\r\n            <Button sx={btnStyle} onClick={(): void => goMemberManagement()}>\r\n              <ALTA_Tooltip title=\"멤버 관리하기\">\r\n                <PeopleAltIcon />\r\n              </ALTA_Tooltip>\r\n            </Button>\r\n          )}\r\n        </Box>\r\n        {RenderCardList()}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst membersWrapper = {\r\n  width: '100%',\r\n};\r\n\r\nconst listStyle = {\r\n  padding: 1,\r\n  margin: 2,\r\n  borderRadius: '5px',\r\n  boxSizing: 'border-box',\r\n  backgroundColor: subColor,\r\n};\r\n\r\nconst titleStyle = {\r\n  position: 'relative',\r\n  marginBottom: '10px',\r\n  padding: '5px 10px',\r\n  boxSizing: 'border-box',\r\n  borderBottom: '1px solid black',\r\n  fontSize: '20px',\r\n  textAlign: 'center',\r\n};\r\n\r\nconst btnStyle = {\r\n  'position': 'absolute',\r\n  'right': 5,\r\n  'top': 5,\r\n  'minWidth': '20px',\r\n  'padding': 0.5,\r\n  'cursor': 'pointer',\r\n  'color': blackColor,\r\n  '&:hover': {\r\n    color: 'primary.main',\r\n  },\r\n  '*': {\r\n    fontSize: '20px',\r\n  },\r\n};\r\n","import { Fragment, useContext, useState } from 'react';\r\nimport { Box, Drawer, Button, Typography, Grid } from '@mui/material';\r\nimport MoreIcon from '@mui/icons-material/More';\r\n\r\nimport { blackColor, whiteColor } from '../../modules/colorChart';\r\nimport { StudyDetailStore } from '../../context/StudyDetailContext';\r\n\r\nimport ALTA_Notice from './ALTA_Notice';\r\nimport ALTA_Chat from './ALTA_Chat';\r\nimport ALTA_Tooltip from '../common/ALTA_Tooltip';\r\nimport ALTA_StudyMembers from './ALTA_StudyMembers';\r\n\r\nexport default function ALTA_StudyBoard() {\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState<boolean>(false);\r\n  const { studyName } = useContext(StudyDetailStore);\r\n  const toggleDrawer = () => () => setIsDrawerOpen(!isDrawerOpen);\r\n\r\n  return (\r\n    <Box>\r\n      <Fragment key={'drawer'}>\r\n        <Drawer\r\n          anchor={'top'}\r\n          open={isDrawerOpen}\r\n          onClose={toggleDrawer()}\r\n          PaperProps={{\r\n            sx: { minWidth: '900px', maxWidth: '900px', margin: '30px auto 0' },\r\n          }}\r\n        >\r\n          <Box sx={wrapper}>\r\n            <Box sx={left}>\r\n              <ALTA_Notice />\r\n              <ALTA_StudyMembers />\r\n            </Box>\r\n            <Box sx={right}>\r\n              <ALTA_Chat />\r\n            </Box>\r\n          </Box>\r\n        </Drawer>\r\n      </Fragment>\r\n      <Box>\r\n        <Typography sx={studyNameStyle}>\r\n          {studyName}\r\n          <ALTA_Tooltip title=\"스터디 정보\">\r\n            <Button sx={menuBtnStyle} onClick={toggleDrawer()}>\r\n              <MoreIcon />\r\n            </Button>\r\n          </ALTA_Tooltip>\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst wrapper = {\r\n  width: '100%',\r\n  display: 'flex',\r\n  boxSizing: 'border-box',\r\n  justifyContent: 'center',\r\n};\r\n\r\nconst left = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  width: '50%',\r\n  boxSizing: 'border-box',\r\n};\r\nconst right = {\r\n  display: 'flex',\r\n  width: '50%',\r\n  boxSizing: 'border-box',\r\n};\r\n\r\nconst studyNameStyle = {\r\n  position: 'relative',\r\n  fontSize: '25px',\r\n  fontWeight: 'bold',\r\n  textAlign: 'center',\r\n};\r\n\r\nconst menuBtnStyle = {\r\n  width: '0',\r\n  position: 'absolute',\r\n  minWidth: '32px',\r\n  padding: '4px',\r\n  top: 3,\r\n  right: 0,\r\n  color: blackColor,\r\n};\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Box, Grid } from '@mui/material';\r\n\r\nimport scrollStyle from '../../modules/scrollStyle';\r\nimport { StudyDetailStore } from '../../context/StudyDetailContext';\r\nimport { TableData } from '../../types';\r\nimport { generateError } from '../../modules/generateAlert';\r\nimport { addTableBarFrontBuilder, addTableBarBackBuilder } from './builder/ALTA_AddTableBarBuilder';\r\n\r\nimport ALTA_ProblemTable from './ALTA_ProblemTable';\r\nimport ALTA_FlipBar from '../common/ALTA_FlipBar';\r\nimport ALTA_Loading from '../common/ALTA_Loading';\r\nimport ALTA_Inner from '../../components/common/ALTA_Inner';\r\nimport ALTA_StudyBoard from '../../components/study/ALTA_StudyBoard';\r\n\r\ntype Params = {\r\n  studyId: string | undefined;\r\n};\r\n\r\nexport default function ALTA_StudyDetailContents() {\r\n  const { studyId } = useParams<Params>();\r\n  const navigate = useNavigate();\r\n  const { readmeData, getReadmeDetail, getStudyMembers, getChatContent } = useContext(StudyDetailStore);\r\n\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      if (studyId) {\r\n        const [readmeApiStatue, memberApiStatus] = await Promise.all([\r\n          getReadmeDetail(Number(studyId)),\r\n          getStudyMembers(Number(studyId)),\r\n          getChatContent(Number(studyId)),\r\n        ]);\r\n\r\n        if (readmeApiStatue.status === -1 || memberApiStatus.status === -1) navigate('/');\r\n        else if (readmeApiStatue.status === -2)\r\n          generateError('스터디 진행 정보를 불러올 수 없습니다', readmeApiStatue.message);\r\n        else if (memberApiStatus.status === -2)\r\n          generateError('스터디 멤버 정보를 불러올 수 없습니다', memberApiStatus.message);\r\n        else setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading && <ALTA_Loading />}\r\n      {!loading && (\r\n        <Grid sx={gridContainerStyle} container justifyContent=\"center\">\r\n          <Grid item xl={6}>\r\n            <ALTA_Inner>\r\n              <Box sx={[addTableWrapperBarStyle, scrollStyle]}>\r\n                <h1>스터디 상세</h1>\r\n                <ALTA_StudyBoard />\r\n                <Box sx={addTableBarWrapperStyle}>\r\n                  <ALTA_FlipBar\r\n                    height=\"80px\"\r\n                    Front={addTableBarFrontBuilder()}\r\n                    Back={addTableBarBackBuilder(Number(studyId), getReadmeDetail)}\r\n                  />\r\n                </Box>\r\n                <Box sx={{ position: 'relative', marginTop: '150px' }}>\r\n                  {readmeData\r\n                    .map(\r\n                      (table: TableData, i: number): JSX.Element => (\r\n                        <Box sx={tableWrapperStyle} key={`${i}-${table.id}`}>\r\n                          <h2>{`${table.round}회차 문제 테이블`}</h2>\r\n                          <ALTA_ProblemTable\r\n                            studyId={Number(studyId)}\r\n                            scheduleId={table.id}\r\n                            problems={table.problems}\r\n                            table={table}\r\n                          />\r\n                        </Box>\r\n                      ),\r\n                    )\r\n                    .reverse()}\r\n                </Box>\r\n              </Box>\r\n            </ALTA_Inner>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst gridContainerStyle = { height: '100%', padding: '20px 0' };\r\n\r\nconst addTableWrapperBarStyle = {\r\n  width: '100%',\r\n  minWidth: '900px',\r\n  height: '85vh',\r\n  padding: '10px 20px',\r\n  paddingBottom: '50px',\r\n  marginBottom: '20px',\r\n  boxSizing: 'border-box',\r\n  backgroundColor: '#fff',\r\n  overflowY: 'scroll',\r\n};\r\n\r\nconst addTableBarWrapperStyle = { position: 'relative', marginTop: '30px' };\r\n\r\nconst tableWrapperStyle = { margin: '30px 0 60px' };\r\n","import { useLocation } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\n\r\nimport StudyDetailContext from '../context/StudyDetailContext';\r\n\r\nimport ALTA_Template from '../components/common/ALTA_Template';\r\nimport ALTA_Header from '../components/common/ALTA_Header';\r\nimport ALTA_StudyDetailContents from '../components/study/ALTA_StudyDetailContents';\r\n\r\nexport default function ALTA_StudyDetail() {\r\n  useEffect(() => {\r\n    document.title = 'ALTA | 스터디 관리';\r\n  }, []);\r\n\r\n  return <ALTA_Template header={<Header />} contents={<Contents />} />;\r\n}\r\n\r\n//template에 prop로 넘겨줄 컴포넌트\r\nfunction Header() {\r\n  return <ALTA_Header />;\r\n}\r\n\r\nfunction Contents() {\r\n  return (\r\n    <StudyDetailContext>\r\n      <ALTA_StudyDetailContents />\r\n    </StudyDetailContext>\r\n  );\r\n}\r\n"],"names":["ALTA_AlertMenu","data","setOpen","navigate","useNavigate","changeChecked","d","checkLogin","status","readAlertApi","Number","alertId","isChecked","map","MenuItem","onClick","url","handleClick","Box","sx","codeCommentBoxStyle","Paper","style","paperBoxStyle","elevation","Button","startIcon","Close","disableRipple","delBtnStyle","Grid","container","direction","infoGridStyle","item","readStyle","infoStyle","senderNickName","Typography","dateStyle","displayAt","time","commentContentStyle","content","position","marginBottom","width","margin","paddingLeft","paddingRight","paddingY","color","right","top","padding","minWidth","display","justifyContent","marginRight","marginTop","textDecoration","cursor","ALTA_Alert","useContext","AlertDataStore","alertData","badgeCnt","setBadgeCnt","useState","open","tab","setTab","allRead","setAllRead","anchorRef","useRef","newAlert","filter","useEffect","length","allChecked","readAlertAllApi","ALTA_Tooltip","title","Badge","badgeContent","anchorOrigin","vertical","horizontal","overlap","badgeStyle","Notifications","ref","fontSize","id","undefined","Menu","anchorEl","current","onClose","MenuListProps","borderBottom","borderColor","Tabs","value","onChange","event","newValue","Tab","label","a11yProps","menuStyle","TabPanel","index","IconButton","CheckCircleRounded","resolvedStyle","CheckCircleOutlineRounded","unresolvedStyle","height","backgroundColor","props","children","other","role","hidden","p","ALTA_Header","wrapperStyle","AppBar","navStyle","StyledImg","src","Logo","alt","alignItems","StyledA","AccountBox","localStorage","removeItem","Logout","flexDirection","styled","ALTA_Inner","className","ALTAInner_style","maxWidth","ALTA_Template","header","contents","layoutStyle","headerStyle","contentsStyle","flex","overflowY","scrollbarWidth","CustomTooltip","arrow","classes","popper","tooltipClasses","blackColor","mainColor","subColor","errorColor","whiteColor","today","Date","timeValue","minutes","Math","floor","getTime","hours","days","getFullYear","getMonth","getDate","generateCheck","text","callback","Swal","showConfirmButton","icon","iconColor","confirmButtonColor","confirmButtonText","background","then","generateError","generateTimer","allowOutsideClick","showCancelButton","timerProgressBar","didOpen","generateConfirm","subTitle","subText","cancelButtonColor","result","isConfirmed","scrollStyle","borderRadius","defaultValue","members","readmeData","noticeContent","maxPeople","isLeader","studyName","language","getReadmeDetail","getStudyMembers","getNoticeContent","editNoticeContent","editSchedule","deleteSchedule","chatContents","getChatContent","setChatContents","StudyDetailStore","React","StudyDetailProvider","setMembers","setReadmeData","setNoticeContent","setMaxPeople","setIsLeader","setStudyName","setLanguage","studyId","loginStatus","message","studyDetailDataApi","response","studyLanguage","readme","memberListApi","tmpMember","studyMaxPeople","push","nickname","profileImg","noticeContentApi","chatDataApi","res","scheduleId","dateString","editScheduleApi","editNoticeContentApi","deleteTableApi","Provider","addTableBarBackBuilder","getReadmeContents","fliper","startDate","setStartDate","endDate","setEndDate","addLoading","setAddLoading","addProblemTable","unixStartTime","unixEndTime","addScheduleApi","code","LinearProgress","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","views","renderInput","params","TextField","e","stopPropagation","PlainBtn","addIconStyle","opacity","addTextStyle","addTableBarFrontWrapper","problemBarFrontBuilder","problem","findCodeId","codes","tableBodyStyle","xs","sellStyle","problemEditBtnStyle","Edit","ellipsisStyle","A","href","link","target","name","member","i","SellBtn","codeId","memberName","userData","getItem","JSON","parse","omisstionBtnStyle","problemId","whiteSpace","overflow","textOverflow","addProblemBarBackBuilder","problemName","setPropblemName","problemLink","setPropblemLink","editProblemLoading","setEditProblemLoading","addProblem","addProblemApi","editProblem","editProblemApi","Input","type","addProblemBarFrontStyle","ALTA_FlipBar","Front","Back","flip","setFlip","frontStyle","transform","backStyle","transition","backfaceVisibility","boxSizing","border","ALTA_ProblemTable","problems","table","scheduleEditing","setScheduleEditing","isError","setIsError","schedule","setSchedule","editLoading","setEditLoading","removeLoading","setRemoveLoading","edit","setTimeout","editApiStatue","remove","sectionStyle","round","Alert","alertStyle","errorVisible","severity","marginLeft","StyledInput","disabled","btnStyle","Save","Delete","CircularProgress","size","tableStyle","tableHeaderStyle","AddCircle","bottom","ALTA_Notice","useParams","notice","setNotice","noticeEditing","setNoticeEditing","loading","setLoading","noticeStatus","replaceAll","noticeApiStatus","noticeWrapper","titleStyle","noticeStyle","StyledTextArea","textAlign","minHeight","headers","ACCESS_TOKEN","ALTA_Chat","chatInput","buffer","setBuffer","stompClient","setMessage","connect","setConnect","socketJS","SockJS","process","Stomp","debug","subscribe","newMessage","body","disconnect","window","onbeforeunload","scrollBottom","scrollTo","scrollHeight","handleEnter","addChatApi","chatWrapper","chatBoxStyle","mes","idx","columns","md","rightListStyle","chatRightStyle","nameRightStyle","dateRightStyle","writeDate","bubbleRightStyle","profileRightStyle","Avatar","image","profileLeftStyle","leftListStyle","chatLeftStyle","bubbleLeftStyle","dateLeftStyle","chatInputStyle","fullWidth","placeholder","onKeyDown","ev","key","variant","sendBtnStyle","Send","ALTA_StudyMemberCard","Card","memberCardStyle","profileStyle","defaultProfile","nicknameStyle","Star","LeaderIconStyle","memberCardStyle_Empty","DoNotDisturbAlt","ALTA_StudyMembers","membersWrapper","listStyle","PeopleAlt","tmp","stringify","RenderCardList","ALTA_StudyBoard","isDrawerOpen","setIsDrawerOpen","toggleDrawer","Fragment","Drawer","anchor","PaperProps","wrapper","left","studyNameStyle","menuBtnStyle","More","fontWeight","ALTA_StudyDetailContents","Promise","all","readmeApiStatue","memberApiStatus","ALTA_Loading","gridContainerStyle","xl","addTableWrapperBarStyle","addTableBarWrapperStyle","Add","tableWrapperStyle","reverse","paddingBottom","ALTA_StudyDetail","document","Header","Contents"],"sourceRoot":""}