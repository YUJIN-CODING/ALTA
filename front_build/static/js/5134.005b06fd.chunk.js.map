{"version":3,"file":"static/js/5134.005b06fd.chunk.js","mappings":"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","sources":["components/common/ALTA_CodeBlock.tsx","components/common/ALTA_AlertMenu.tsx","components/common/ALTA_Alert.tsx","components/common/ALTA_Header.tsx","components/common/ALTA_Template.tsx","components/common/ALTA_Tooltip.tsx","context/CodeContext.tsx","modules/colorChart.ts","modules/displayAt.ts","modules/generateAlert.ts"],"sourcesContent":["import { useContext } from 'react';\r\n\r\nimport { Box, Grid } from '@mui/material';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport * as code_themes from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nimport { CodeStore } from '../../context/CodeContext';\r\n\r\ntype Props = { code: string; language: string };\r\n\r\nexport default function ALTA_CodeBlock({ code, language }: Props) {\r\n  const { codeLine, setCodeLine } = useContext(CodeStore);\r\n\r\n  return (\r\n    <Grid container direction=\"column\" spacing={5} sx={codeBlockStyle} className=\"codeBlock\">\r\n      <Box>\r\n        <SyntaxHighlighter\r\n          language={language.toLowerCase()}\r\n          style={code_themes['darcula']}\r\n          className=\"highlighter\"\r\n          showLineNumbers={true}\r\n          wrapLines={true}\r\n          lineProps={(lineNum: number): React.HTMLProps<HTMLElement> => ({\r\n            id: `codeLine-${lineNum}`,\r\n            style: {\r\n              display: 'block',\r\n              background: codeLine === lineNum ? 'rgb(41,62,98)' : 'inherit',\r\n            },\r\n            onClick(): void {\r\n              if (codeLine !== lineNum) {\r\n                setCodeLine(lineNum);\r\n                const c: HTMLElement | null = document.getElementById('outlined-multiline-static-comment');\r\n                if (c) {\r\n                  c.scrollIntoView({ behavior: 'smooth' });\r\n                }\r\n              } else {\r\n                setCodeLine(0);\r\n              }\r\n            },\r\n          })}\r\n        >\r\n          {code}\r\n        </SyntaxHighlighter>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst codeBlockStyle = {\r\n  height: '33rem',\r\n  overflowY: 'scroll',\r\n  width: '100%',\r\n  margin: '0 auto',\r\n  boxSizing: 'content-box',\r\n};\r\n","import { useState, useContext, Dispatch, SetStateAction, useEffect } from 'react';\r\nimport { useNavigate, NavigateFunction } from 'react-router-dom';\r\n\r\nimport { Grid, Paper, Box, Typography, Button, MenuItem } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport { readAlertApi } from '../../api/apis';\r\nimport { AlertData } from '../../types';\r\nimport { displayAt } from '../../modules/displayAt';\r\nimport { checkLogin } from '../../modules/LoginTokenChecker';\r\n\r\ntype Props = {\r\n  data: AlertData[];\r\n  setOpen: Dispatch<SetStateAction<boolean>>;\r\n};\r\n\r\nexport default function ALTA_AlertMenu({ data, setOpen }: Props) {\r\n  const navigate: NavigateFunction = useNavigate();\r\n\r\n  const changeChecked = async (d: AlertData): Promise<void> => {\r\n    if (!(await checkLogin()).status) navigate('/');\r\n    await readAlertApi(Number(d.alertId));\r\n    d.isChecked = true;\r\n  };\r\n\r\n  const handleClick = (d: AlertData): void => {\r\n    if (!d.isChecked) {\r\n      changeChecked(d);\r\n    }\r\n    navigate(`${d.url}`);\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {data.map((d) => (\r\n        <MenuItem\r\n          key={d.alertId}\r\n          onClick={() => {\r\n            handleClick(d);\r\n          }}\r\n        >\r\n          <Box sx={codeCommentBoxStyle}>\r\n            <Paper style={paperBoxStyle} elevation={1}>\r\n              <Button startIcon={<CloseIcon />} disableRipple sx={delBtnStyle} />\r\n              <Grid container direction=\"row\" sx={infoGridStyle}>\r\n                <Grid item sx={d.isChecked ? readStyle : null}>\r\n                  <Grid sx={infoStyle}>\r\n                    <Box>\r\n                      <h4>{d.senderNickName}</h4>\r\n                    </Box>\r\n                    <Typography sx={dateStyle}>{displayAt(d.time)}</Typography>\r\n                  </Grid>\r\n                  <Typography sx={commentContentStyle}>{d.content}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </Box>\r\n        </MenuItem>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nconst codeCommentBoxStyle = {\r\n  position: 'relative',\r\n  marginBottom: 3,\r\n};\r\n\r\nconst paperBoxStyle = {\r\n  width: '100%',\r\n  margin: '10px 0',\r\n};\r\n\r\nconst infoGridStyle = {\r\n  paddingLeft: 2,\r\n  paddingRight: 6,\r\n  paddingY: 2,\r\n};\r\n\r\nconst delBtnStyle = {\r\n  color: '#212121',\r\n  position: 'absolute',\r\n  right: '10px',\r\n  top: '35px',\r\n  padding: 0,\r\n  minWidth: '10px',\r\n};\r\n\r\nconst infoStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n};\r\n\r\nconst dateStyle = {\r\n  color: 'gray',\r\n  marginRight: '10px',\r\n  marginTop: '17px',\r\n};\r\n\r\nconst unreadStyle = {\r\n  color: 'primary.main',\r\n};\r\n\r\nconst readStyle = {\r\n  color: 'gray',\r\n  textDecoration: 'line-through',\r\n  cursor: 'default',\r\n};\r\n\r\nconst commentCodeLineStyle = {\r\n  color: 'primary.main',\r\n  cursor: 'pointer',\r\n  marginRight: 1,\r\n  textDecorationLine: 'none',\r\n};\r\n\r\nconst commentStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'flex-start',\r\n  alignItems: 'baseline',\r\n};\r\n\r\nconst commentContentStyle = {\r\n  marginBottom: 2,\r\n};\r\n\r\nconst editCommentInput = {\r\n  paddingBottom: 2,\r\n  paddingLeft: 0,\r\n  width: '70%',\r\n};\r\n\r\nconst adornStyle = {\r\n  color: 'primary.main',\r\n  fontWeight: 'bold',\r\n};\r\n","import { useEffect, useState, useRef, useContext } from 'react';\r\nimport { useNavigate, NavigateFunction } from 'react-router-dom';\r\nimport { Box, Menu, Badge, Tabs, Tab, Typography, IconButton } from '@mui/material';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded';\r\nimport CheckCircleOutlineRoundedIcon from '@mui/icons-material/CheckCircleOutlineRounded';\r\n\r\nimport { AlertData } from '../../types';\r\nimport ALTA_Tooltip from './ALTA_Tooltip';\r\nimport ALTA_AlertMenu from './ALTA_AlertMenu';\r\nimport { readAlertAllApi } from '../../api/apis';\r\nimport { checkLogin } from '../../modules/LoginTokenChecker';\r\n\r\nimport { AlertDataStore } from '../../context/AlertContext';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nexport default function ALTA_Alert() {\r\n  const navigate: NavigateFunction = useNavigate();\r\n  const { alertData, badgeCnt, setBadgeCnt } = useContext(AlertDataStore);\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [tab, setTab] = useState<number>(0);\r\n  const [allRead, setAllRead] = useState<boolean>(false);\r\n\r\n  const anchorRef = useRef<SVGSVGElement>(null);\r\n\r\n  let newAlert: AlertData[] = alertData.filter((d: AlertData): boolean => d.isChecked === false);\r\n\r\n  useEffect((): void => {\r\n    setAllRead(false);\r\n    newAlert = alertData.filter((d: AlertData): boolean => d.isChecked === false);\r\n    setBadgeCnt(newAlert.length);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setBadgeCnt(newAlert.length);\r\n  }, [newAlert]);\r\n\r\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setTab(newValue);\r\n  };\r\n\r\n  const allChecked = async (): Promise<void> => {\r\n    if (!(await checkLogin()).status) navigate('/');\r\n    setAllRead(true);\r\n    await readAlertAllApi();\r\n    setOpen(false);\r\n    setBadgeCnt(0);\r\n    newAlert = alertData.filter((d: AlertData): boolean => d.isChecked === false);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <ALTA_Tooltip title=\"알림\">\r\n        <Badge\r\n          badgeContent={badgeCnt}\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n          overlap=\"circular\"\r\n          sx={badgeStyle}\r\n        >\r\n          <NotificationsIcon\r\n            ref={anchorRef}\r\n            sx={{ fontSize: '40px', cursor: 'pointer' }}\r\n            id=\"basic-button\"\r\n            aria-controls={open ? 'basic-menu' : undefined}\r\n            aria-haspopup=\"true\"\r\n            aria-expanded={open ? 'true' : undefined}\r\n            onClick={() => setOpen(!open)}\r\n          />\r\n        </Badge>\r\n      </ALTA_Tooltip>\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorRef.current}\r\n        open={open}\r\n        onClose={() => setOpen(!open)}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'basic-button',\r\n        }}\r\n      >\r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n          <Tabs value={tab} onChange={handleChange} aria-label=\"basic tabs example\">\r\n            <Tab label=\"안읽은 알림만 보기\" {...a11yProps(0)} />\r\n            <Tab label=\"전체 알림 보기\" {...a11yProps(1)} />\r\n          </Tabs>\r\n        </Box>\r\n        <Box sx={menuStyle}>\r\n          <TabPanel value={tab} index={0}>\r\n            {badgeCnt ? (\r\n              <Box>\r\n                전체 읽음\r\n                {allRead ? (\r\n                  <IconButton>{<CheckCircleRoundedIcon sx={resolvedStyle} />}</IconButton>\r\n                ) : (\r\n                  <IconButton onClick={allChecked}>{<CheckCircleOutlineRoundedIcon sx={unresolvedStyle} />}</IconButton>\r\n                )}\r\n                <ALTA_AlertMenu data={newAlert} setOpen={setOpen} />\r\n              </Box>\r\n            ) : (\r\n              <Typography sx={{ color: 'error.main', fontSize: '20px' }}>새로운 알림이 없습니다</Typography>\r\n            )}\r\n          </TabPanel>\r\n          <TabPanel value={tab} index={1}>\r\n            <ALTA_AlertMenu data={alertData} setOpen={setOpen} />\r\n          </TabPanel>\r\n        </Box>\r\n      </Menu>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst menuStyle = {\r\n  width: '35rem',\r\n  display: 'flex',\r\n  height: '30rem',\r\n};\r\n\r\nconst badgeStyle = {\r\n  '& .MuiBadge-badge': {\r\n    color: 'text.primary',\r\n    backgroundColor: 'secondary.main',\r\n  },\r\n};\r\n\r\nconst resolvedStyle = {\r\n  color: 'primary.main',\r\n};\r\n\r\nconst unresolvedStyle = {\r\n  color: 'gray',\r\n};\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: number) {\r\n  return {\r\n    'id': `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n","import { useNavigate } from 'react-router-dom';\r\nimport styled from '@emotion/styled';\r\nimport { AppBar, Box } from '@mui/material';\r\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\n\r\nimport Logo from '../../images/logo.webp';\r\n\r\nimport ALTA_Tooltip from './ALTA_Tooltip';\r\nimport ALTA_Alert from './ALTA_Alert';\r\n\r\nexport default function ALTA_Header() {\r\n  const navigate = useNavigate();\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('jwt');\r\n    localStorage.removeItem('refresh');\r\n    localStorage.removeItem('userData');\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <Box sx={wrapperStyle}>\r\n      <AppBar sx={navStyle}>\r\n        <StyledImg src={Logo} alt=\"\" />\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <StyledA>\r\n            <ALTA_Alert />\r\n          </StyledA>\r\n          <ALTA_Tooltip title=\"마이 페이지\">\r\n            <StyledA onClick={() => navigate('/mypage')}>\r\n              <AccountBoxIcon sx={{ fontSize: '40px', cursor: 'pointer' }} />\r\n            </StyledA>\r\n          </ALTA_Tooltip>\r\n          <ALTA_Tooltip title=\"로그아웃\">\r\n            <StyledA onClick={logout}>\r\n              <LogoutIcon sx={{ fontSize: '40px', cursor: 'pointer' }} />\r\n            </StyledA>\r\n          </ALTA_Tooltip>\r\n        </Box>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst wrapperStyle = {\r\n  height: '55px',\r\n};\r\n\r\nconst navStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  height: '55px',\r\n  padding: '0 20px',\r\n};\r\n\r\nconst StyledImg = styled.img`\r\n  width: 100px;\r\n`;\r\n\r\nconst StyledA = styled.button`\r\n  all: unset;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  margin-left: 10px;\r\n`;\r\n","import React from 'react';\r\nimport { Box } from '@mui/material';\r\n\r\ntype Props = {\r\n  header: React.ReactNode;\r\n  contents: React.ReactNode;\r\n};\r\n\r\nexport default function ALTA_Template({ header, contents }: Props) {\r\n  return (\r\n    <Box sx={layoutStyle}>\r\n      <Box sx={headerStyle}>{header}</Box>\r\n      <Box sx={contentsStyle}>{contents}</Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst layoutStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  height: '100vh',\r\n};\r\n\r\nconst headerStyle = {\r\n  flex: '0 1 auto',\r\n  width: '100%',\r\n};\r\nconst contentsStyle = {\r\n  flex: '1 1 auto',\r\n  overflowY: 'scroll',\r\n  scrollbarWidth: 'none',\r\n};\r\n","import { Tooltip, TooltipProps, tooltipClasses } from '@mui/material';\r\nimport { blackColor } from '../../modules/colorChart';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst CustomTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(() => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: blackColor,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: blackColor,\r\n  },\r\n}));\r\n\r\ntype Props = {\r\n  children: any;\r\n  title: string;\r\n};\r\n\r\nexport default function ALTA_Tooltip({ children, title }: Props) {\r\n  return <CustomTooltip title={title}>{children}</CustomTooltip>;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ReviewData, CodeData, defaultCodeData, CodeTree, ContextProps, ContextPromiseType } from '../types';\r\nimport { checkLogin } from '../modules/LoginTokenChecker';\r\nimport { codeDataApi, reivewDataApi, codeTreeApi } from '../api/apis';\r\n\r\ntype defaultValueType = {\r\n  code: CodeData;\r\n  setCode: (newCode: CodeData) => void;\r\n  reviews: ReviewData[];\r\n  setReviews: (newReview: ReviewData[]) => void;\r\n  codeLine: number;\r\n  setCodeLine: (newLine: number) => void;\r\n  getCode: (studyId: number, codeId: number) => any;\r\n  getReview: (codeId: number) => any;\r\n  user: string;\r\n  codeTree: CodeTree[];\r\n  setCodeTree: (newData: CodeTree[]) => void;\r\n  getCodeTree: (studyId: number) => any;\r\n  isCompleted: boolean;\r\n  setIsCompleted: (data: boolean) => void;\r\n};\r\n\r\nconst defaultValue: defaultValueType = {\r\n  code: defaultCodeData,\r\n  setCode: () => null,\r\n  reviews: [],\r\n  setReviews: () => null,\r\n  codeLine: 0,\r\n  setCodeLine: () => null,\r\n  getCode: () => null,\r\n  getReview: () => null,\r\n  user: '',\r\n  codeTree: [],\r\n  setCodeTree: () => null,\r\n  getCodeTree: () => null,\r\n  isCompleted: false,\r\n  setIsCompleted: () => null,\r\n};\r\nexport const CodeStore = React.createContext(defaultValue);\r\n\r\nexport default function CodeContext({ children }: ContextProps) {\r\n  const [code, setCode] = useState<CodeData>(defaultCodeData);\r\n  const [reviews, setReviews] = useState<ReviewData[]>([]);\r\n  const [codeLine, setCodeLine] = useState<number>(0);\r\n  const [codeTree, setCodeTree] = useState<CodeTree[]>([]);\r\n  const [isCompleted, setIsCompleted] = useState<boolean>(false);\r\n\r\n  const getCode = async (studyId: number, codeId: number): Promise<ContextPromiseType> => {\r\n    const loginStatus = await checkLogin();\r\n    if (!loginStatus.status) return { status: -1, message: 'login token error' };\r\n    try {\r\n      const res = await codeDataApi(studyId, codeId);\r\n      setCode(res);\r\n      return { status: 1, message: 'success get code data' };\r\n    } catch (err) {\r\n      return { status: -2, message: 'fail get code data' };\r\n    }\r\n  };\r\n  const getReview = async (codeId: number): Promise<ContextPromiseType> => {\r\n    const loginStatus = await checkLogin();\r\n    if (!loginStatus.status) return { status: -1, message: 'login token error' };\r\n    try {\r\n      const res = await reivewDataApi(codeId);\r\n      const reviews_data: ReviewData[] = isCompleted\r\n        ? res\r\n        : res.filter((rev: ReviewData): boolean => rev.completed === false);\r\n      setReviews(reviews_data);\r\n      return { status: 1, message: 'success get review data' };\r\n    } catch (err) {\r\n      return { status: -2, message: 'fail get review data' };\r\n    }\r\n  };\r\n  const getCodeTree = async (studyId: number): Promise<ContextPromiseType> => {\r\n    const loginStatus = await checkLogin();\r\n    if (!loginStatus.status) return { status: -1, message: 'login token error' };\r\n    try {\r\n      const res = await codeTreeApi(studyId);\r\n      setCodeTree(res);\r\n      return { status: 1, message: 'success get code tree data' };\r\n    } catch (err) {\r\n      return { status: -2, message: 'fail get code tree data' };\r\n    }\r\n  };\r\n\r\n  const getuser: string | null = localStorage.getItem('UserData');\r\n  const user: string = getuser ? JSON.parse(getuser)['nickname'] : '';\r\n\r\n  const value = {\r\n    code,\r\n    reviews,\r\n    setCode,\r\n    setReviews,\r\n    codeLine,\r\n    setCodeLine,\r\n    getCode,\r\n    getReview,\r\n    user,\r\n    codeTree,\r\n    setCodeTree,\r\n    getCodeTree,\r\n    isCompleted,\r\n    setIsCompleted,\r\n  };\r\n  return <CodeStore.Provider value={value}>{children}</CodeStore.Provider>;\r\n}\r\n","export const mainColor = '#6d9886';\r\nexport const subColor = '#d9cab3';\r\nexport const errorColor = '#c99f9f';\r\nexport const blackColor = '#212121';\r\nexport const whiteColor = '#f6f6f6';\r\n","export function displayAt(value: Date) {\r\n  const today = new Date();\r\n  const timeValue = new Date(value);\r\n  const minutes = Math.floor((today.getTime() - timeValue.getTime()) / 1000 / 60);\r\n  if (minutes < 1) return `방금 전`;\r\n  if (minutes < 60) return `${minutes}분 전`;\r\n  const hours = Math.floor(minutes / 60);\r\n  if (hours < 24) return `${hours}시간 전`;\r\n  const days = Math.floor(hours / 24);\r\n  if (days < 7) return `${days}일 전`;\r\n  else return `${timeValue.getFullYear()}. ${timeValue.getMonth() + 1}. ${timeValue.getDate()}`;\r\n  // const weeks = Math.floor(days / 7);\r\n  // if (weeks < 5) return `${weeks}주 전`;\r\n  // const months = Math.floor(days / 30);\r\n  // if (months < 12) return `${months}개월 전`;\r\n  // const years = Math.floor(days / 365);\r\n  // return `${years}년 전`;\r\n}\r\n\r\nexport function renameDate(value: Date) {\r\n  const timeValue = new Date(value);\r\n  return `${timeValue.getFullYear()}. ${timeValue.getMonth() + 1}. ${timeValue.getDate()}`;\r\n}\r\n","import { stringify } from 'querystring';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport '../style/AlertStyle.css';\r\nimport { mainColor, whiteColor, blackColor, errorColor } from './colorChart';\r\n\r\nexport function generateCheck(title: string, text: string, callback: () => void | Promise<void> | null) {\r\n  Swal.fire({\r\n    title,\r\n    text,\r\n    showConfirmButton: true,\r\n    icon: 'success',\r\n    iconColor: mainColor,\r\n    confirmButtonColor: mainColor,\r\n    confirmButtonText: '확인',\r\n    color: blackColor,\r\n    background: whiteColor,\r\n  }).then(() => {\r\n    if (callback) callback();\r\n  });\r\n}\r\n\r\nexport function generateError(title: string, text: string, callback?: any) {\r\n  Swal.fire({\r\n    title,\r\n    text,\r\n    icon: 'error',\r\n    iconColor: errorColor,\r\n    color: blackColor,\r\n    background: whiteColor,\r\n    showConfirmButton: true,\r\n    confirmButtonColor: errorColor,\r\n    confirmButtonText: '돌아가기',\r\n  }).then(() => {\r\n    if (callback) callback();\r\n  });\r\n}\r\n\r\nexport function generateTimer(title: string, text: string) {\r\n  Swal.fire({\r\n    title,\r\n    text,\r\n    color: blackColor,\r\n    iconColor: mainColor,\r\n    background: whiteColor,\r\n    allowOutsideClick: false,\r\n    showCancelButton: false,\r\n    timerProgressBar: true,\r\n    didOpen: async () => {\r\n      Swal.showLoading();\r\n    },\r\n  });\r\n}\r\n\r\nexport function generateConfirm(\r\n  title: string,\r\n  text: string,\r\n  subTitle: string,\r\n  subText: string,\r\n  callback: () => Promise<any> | null,\r\n) {\r\n  Swal.fire({\r\n    title,\r\n    text,\r\n    icon: 'warning',\r\n    showCancelButton: true,\r\n    confirmButtonColor: mainColor,\r\n    confirmButtonText: '확인',\r\n    cancelButtonColor: errorColor,\r\n    color: blackColor,\r\n    background: whiteColor,\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      Swal.fire({\r\n        title: `${subTitle}`,\r\n        text: `${subText}`,\r\n        icon: 'success',\r\n        showConfirmButton: true,\r\n        confirmButtonColor: mainColor,\r\n        confirmButtonText: '확인',\r\n        color: blackColor,\r\n        background: whiteColor,\r\n      }).then(() => {\r\n        if (callback) callback();\r\n      });\r\n    }\r\n  });\r\n}\r\n"],"names":["ALTA_CodeBlock","code","language","useContext","CodeStore","codeLine","setCodeLine","container","direction","spacing","sx","codeBlockStyle","className","toLowerCase","style","code_themes","showLineNumbers","wrapLines","lineProps","lineNum","id","display","background","onClick","c","document","getElementById","scrollIntoView","behavior","height","overflowY","width","margin","boxSizing","ALTA_AlertMenu","data","setOpen","navigate","useNavigate","changeChecked","d","checkLogin","status","readAlertApi","Number","alertId","isChecked","map","MenuItem","url","handleClick","Box","codeCommentBoxStyle","Paper","paperBoxStyle","elevation","Button","startIcon","Close","disableRipple","delBtnStyle","Grid","infoGridStyle","item","readStyle","infoStyle","senderNickName","Typography","dateStyle","displayAt","time","commentContentStyle","content","position","marginBottom","paddingLeft","paddingRight","paddingY","color","right","top","padding","minWidth","justifyContent","marginRight","marginTop","textDecoration","cursor","ALTA_Alert","AlertDataStore","alertData","badgeCnt","setBadgeCnt","useState","open","tab","setTab","allRead","setAllRead","anchorRef","useRef","newAlert","filter","useEffect","length","allChecked","readAlertAllApi","ALTA_Tooltip","title","Badge","badgeContent","anchorOrigin","vertical","horizontal","overlap","badgeStyle","Notifications","ref","fontSize","undefined","Menu","anchorEl","current","onClose","MenuListProps","borderBottom","borderColor","Tabs","value","onChange","event","newValue","Tab","label","a11yProps","menuStyle","TabPanel","index","IconButton","CheckCircleRounded","resolvedStyle","CheckCircleOutlineRounded","unresolvedStyle","backgroundColor","props","children","other","role","hidden","p","ALTA_Header","wrapperStyle","AppBar","navStyle","StyledImg","src","Logo","alt","alignItems","StyledA","AccountBox","localStorage","removeItem","Logout","flexDirection","styled","ALTA_Template","header","contents","layoutStyle","headerStyle","contentsStyle","flex","scrollbarWidth","CustomTooltip","arrow","classes","popper","tooltipClasses","blackColor","defaultValue","defaultCodeData","setCode","reviews","setReviews","getCode","getReview","user","codeTree","setCodeTree","getCodeTree","isCompleted","setIsCompleted","React","CodeContext","studyId","codeId","message","codeDataApi","res","reivewDataApi","reviews_data","rev","completed","codeTreeApi","getuser","getItem","JSON","parse","Provider","mainColor","subColor","errorColor","whiteColor","today","Date","timeValue","minutes","Math","floor","getTime","hours","days","getFullYear","getMonth","getDate","generateCheck","text","callback","Swal","showConfirmButton","icon","iconColor","confirmButtonColor","confirmButtonText","then","generateError","generateTimer","allowOutsideClick","showCancelButton","timerProgressBar","didOpen","generateConfirm","subTitle","subText","cancelButtonColor","result","isConfirmed"],"sourceRoot":""}