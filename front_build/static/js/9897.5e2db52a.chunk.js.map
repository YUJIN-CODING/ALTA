{"version":3,"file":"static/js/9897.5e2db52a.chunk.js","mappings":"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","sources":["components/common/ALTA_Inner.tsx","components/common/ALTA_InputItem.tsx","components/code/ALTA_CodeSubmitContents.tsx","pages/ALTA_CodeSubmit.tsx"],"sourcesContent":["import { Box } from '@mui/material';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\nexport default function ALTA_Inner({ children }: Props) {\r\n  return (\r\n    <Box className=\"ALTAInner\" sx={ALTAInner_style}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst ALTAInner_style = {\r\n  minWidth: '900px',\r\n  maxWidth: '900px',\r\n  height: '100%',\r\n  margin: '0 auto',\r\n  backgroundColor: 'inherit',\r\n};\r\n","import { Box, Typography } from '@mui/material';\r\n\r\ntype Props = {\r\n  label: string;\r\n  labelSize?: string;\r\n  children: React.ReactNode;\r\n  focused?: boolean;\r\n  focusHandler?: (label: string) => void;\r\n};\r\n\r\nexport default function ALTA_InputItem({ label, labelSize = 'm', children, focused, focusHandler }: Props) {\r\n  return (\r\n    <Box sx={[wrapper, focused ? focus : null]} onFocus={() => focusHandler && focusHandler(label)}>\r\n      <label htmlFor={label}>\r\n        <Typography sx={labelSize === 'm' ? labelstyle_m : labelstyle_s}>{label}</Typography>\r\n      </label>\r\n      <Box sx={[fieldStyle]}>{children}</Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst wrapper = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  width: '100%',\r\n  margin: '10px 0',\r\n  minHeight: '50px',\r\n  transition: '.2s',\r\n};\r\n\r\nconst labelstyle_m = {\r\n  width: '120px',\r\n  marginRight: '10px',\r\n  fontSize: '21px',\r\n};\r\n\r\nconst labelstyle_s = {\r\n  width: '80px',\r\n  marginRight: '10px',\r\n  fontSize: '18px',\r\n};\r\n\r\nconst fieldStyle = {\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  flexDirection: 'column',\r\n  alignItems: 'start',\r\n  position: 'relative',\r\n  transition: '.4s',\r\n};\r\n\r\nconst focus = {\r\n  transform: 'scale(1.03)',\r\n};\r\n","import { useState } from 'react';\r\nimport { useParams, useNavigate, NavigateFunction } from 'react-router-dom';\r\n\r\nimport { Box, Button, CircularProgress, TextField } from '@mui/material';\r\nimport styled from '@emotion/styled';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\n\r\nimport { blackColor, whiteColor } from '../../modules/colorChart';\r\nimport { generateError, generateTimer } from '../../modules/generateAlert';\r\nimport { checkLogin } from '../../modules/LoginTokenChecker';\r\nimport { editCodeApi, submitCodeApi } from '../../api/apis';\r\n\r\nimport ALTA_Tooltip from '../common/ALTA_Tooltip';\r\nimport ALTA_InputItem from '../common/ALTA_InputItem';\r\nimport ALTA_CodeBlock from '../common/ALTA_CodeBlock';\r\n\r\ntype ParamType = {\r\n  problemId: string | undefined;\r\n  studyId: string | undefined;\r\n  codeId: string | undefined;\r\n  problem: string | undefined;\r\n  language: string | undefined;\r\n};\r\n\r\nconst map = new Map();\r\nmap.set('Java', 'java');\r\nmap.set('C', 'c');\r\nmap.set('C++', 'cpp');\r\nmap.set('C#', 'c#');\r\nmap.set('Python', 'python');\r\nmap.set('Java Script', 'javascript');\r\n\r\nexport default function ALTA_CodeSubmitContents() {\r\n  const navigate: NavigateFunction = useNavigate();\r\n\r\n  const { problemId, studyId, codeId, problem, language } = useParams<ParamType>();\r\n\r\n  const [commitMessage, setCommitMessage] = useState<string>('');\r\n  const [fileName, setFileName] = useState<string>('');\r\n  const [code, setCode] = useState<string>('코드를 업로드 해주세요.');\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const uploadFile = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const files: FileList | null = e.target.files;\r\n    if (files) {\r\n      const tmp: string[] = files[0].name.split('.');\r\n      setFileName(tmp.slice(0, tmp.length - 1).join(''));\r\n\r\n      const reader: FileReader = new FileReader();\r\n\r\n      reader.onload = (): void => setCode(String(reader.result));\r\n      reader.readAsText(files[0]);\r\n    }\r\n  };\r\n\r\n  const goStudyDetail = (): void => navigate(`/study/${studyId}/detail/`);\r\n  const goCodeDetail = (): void => navigate(`/study/${studyId}/${problem}/code/${codeId}/${language}`);\r\n\r\n  const summitCode = async (): Promise<void> => {\r\n    if (code === '코드를 업로드 해주세요.') {\r\n      generateError('코드를 업로드 해주세요', '');\r\n      return;\r\n    }\r\n\r\n    if (!commitMessage) {\r\n      generateError('커밋 메세지가 없습니다', '');\r\n      return;\r\n    }\r\n\r\n    if (!(await checkLogin())) navigate('/');\r\n\r\n    if (problemId && problemId !== '0') {\r\n      setLoading(true);\r\n      if (studyId) {\r\n        try {\r\n          await submitCodeApi(parseInt(studyId), parseInt(problemId), commitMessage, fileName, code);\r\n        } catch (err: any) {\r\n          generateError('코드를 업로드하지 못했습니다', err.message);\r\n        } finally {\r\n          setLoading(false);\r\n          goStudyDetail();\r\n        }\r\n      }\r\n    } else {\r\n      if (codeId && studyId) {\r\n        try {\r\n          await editCodeApi(parseInt(studyId), parseInt(codeId), commitMessage, fileName, code);\r\n        } catch (err: any) {\r\n          generateError('코드를 업로드하지 못했습니다', err.message);\r\n        } finally {\r\n          setLoading(false);\r\n          goCodeDetail();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCancel = (): void => {\r\n    if (problemId && problemId !== '0') goStudyDetail();\r\n    else goCodeDetail();\r\n  };\r\n\r\n  return (\r\n    <Box sx={wrapperStyle}>\r\n      <h1>커밋 메세지 입력란</h1>\r\n      <ALTA_InputItem label=\"커밋 메세지\" focused={false} focusHandler={(): null => null}>\r\n        <TextField\r\n          id=\"스터디 이름\"\r\n          variant=\"standard\"\r\n          placeholder=\"커밋 메세지를 입력해주세요\"\r\n          value={commitMessage}\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>): void => setCommitMessage(e.target.value)}\r\n          sx={{ width: '100%' }}\r\n        />\r\n      </ALTA_InputItem>\r\n      <h1>코드 파일 업로드란</h1>\r\n      <ALTA_InputItem label=\"코드 업로드\" focused={false} focusHandler={(): null => null}>\r\n        <FileInput id=\"file\" type=\"file\" onChange={uploadFile} />\r\n        <ALTA_Tooltip title=\"PC에서 파일 찾기\">\r\n          <Button variant=\"contained\" sx={uploadBtnStyle}>\r\n            <Label htmlFor=\"file\">\r\n              <Box sx={uploadBtnStyle}>\r\n                <AddCircleIcon sx={uploadIconStyle} />\r\n              </Box>\r\n            </Label>\r\n          </Button>\r\n        </ALTA_Tooltip>\r\n      </ALTA_InputItem>\r\n      <h1>코드 미리보기</h1>\r\n      <ALTA_CodeBlock code={code} language={map.get(language)} />\r\n      <Box sx={{ marginTop: 10, textAlign: 'right' }}>\r\n        <Button variant=\"contained\" sx={btnStyle} onClick={summitCode}>\r\n          {loading ? <CircularProgress sx={{ color: whiteColor }} size={30} /> : '제 출'}\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"error\" sx={btnStyle} onClick={handleCancel}>\r\n          취 소\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst wrapperStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  marginTop: '40px',\r\n};\r\n\r\nconst uploadBtnStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  width: '100%',\r\n  height: '30px',\r\n  padding: 0,\r\n};\r\n\r\nconst uploadIconStyle = {\r\n  color: blackColor,\r\n  opacity: '0.5',\r\n  fontSize: '25px',\r\n};\r\n\r\nconst submitBtnGroupStyle = {\r\n  textAlign: 'right',\r\n};\r\n\r\nconst btnStyle = {\r\n  width: '100px',\r\n  color: '#fff',\r\n  fontSize: '18px',\r\n  marginLeft: '20px',\r\n};\r\n\r\nconst FileInput = styled.input`\r\n  all: unset;\r\n  position: absolute;\r\n  left: 0;\r\n  z-index: -10;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  width: 100%;\r\n`;\r\n","import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport ALTA_Template from '../components/common/ALTA_Template';\r\nimport ALTA_Inner from '../components/common/ALTA_Inner';\r\nimport ALTA_CodeSubmitContents from '../components/code/ALTA_CodeSubmitContents';\r\nimport ALTA_Header from '../components/common/ALTA_Header';\r\n\r\nexport default function ALTA_CodeSubmit() {\r\n  useEffect(() => {\r\n    document.title = 'ALTA | 코드 제출';\r\n  }, []);\r\n\r\n  return <ALTA_Template header={<Header />} contents={<Contents />} />;\r\n}\r\n\r\nfunction Header() {\r\n  return <ALTA_Header />;\r\n}\r\n\r\nfunction Contents() {\r\n  return (\r\n    <ALTA_Inner>\r\n      <ALTA_CodeSubmitContents />\r\n    </ALTA_Inner>\r\n  );\r\n}\r\n"],"names":["ALTA_Inner","children","className","sx","ALTAInner_style","minWidth","maxWidth","height","margin","backgroundColor","ALTA_InputItem","label","labelSize","focused","focusHandler","wrapper","focus","onFocus","htmlFor","labelstyle_m","labelstyle_s","fieldStyle","display","justifyContent","width","minHeight","transition","marginRight","fontSize","flex","flexDirection","alignItems","position","transform","map","Map","ALTA_CodeSubmitContents","navigate","useNavigate","useParams","problemId","studyId","codeId","problem","language","useState","commitMessage","setCommitMessage","fileName","setFileName","code","setCode","loading","setLoading","goStudyDetail","goCodeDetail","summitCode","generateError","checkLogin","submitCodeApi","parseInt","message","editCodeApi","Box","wrapperStyle","TextField","id","variant","placeholder","value","onChange","e","target","FileInput","type","files","tmp","name","split","slice","length","join","reader","FileReader","onload","String","result","readAsText","ALTA_Tooltip","title","Button","uploadBtnStyle","Label","AddCircle","uploadIconStyle","ALTA_CodeBlock","get","marginTop","textAlign","btnStyle","onClick","CircularProgress","color","whiteColor","size","set","padding","blackColor","opacity","marginLeft","styled","ALTA_CodeSubmit","useEffect","document","ALTA_Template","header","Header","contents","Contents","ALTA_Header"],"sourceRoot":""}