-- MySQL dump 10.13  Distrib 8.0.28, for Win64 (x86_64)
--
-- Host: k6b203.p.ssafy.io    Database: alta
-- ------------------------------------------------------
-- Server version	8.0.28

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `activity_score`
--

DROP TABLE IF EXISTS `activity_score`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `activity_score` (
  `activity_score_id` bigint NOT NULL AUTO_INCREMENT,
  `activity_type` int DEFAULT NULL,
  `activity_date` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `fk_user_id` varchar(30) NOT NULL,
  `history` varchar(200) DEFAULT NULL,
  `fk_study_id` bigint NOT NULL,
  PRIMARY KEY (`activity_score_id`),
  KEY `activity_score_study_study_id_fk` (`fk_study_id`),
  KEY `activity_score_user_user_id_fk` (`fk_user_id`),
  CONSTRAINT `activity_score_study_study_id_fk` FOREIGN KEY (`fk_study_id`) REFERENCES `study` (`study_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `activity_score_user_user_id_fk` FOREIGN KEY (`fk_user_id`) REFERENCES `user` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=77 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `activity_score`
--

LOCK TABLES `activity_score` WRITE;
/*!40000 ALTER TABLE `activity_score` DISABLE KEYS */;
INSERT INTO `activity_score` VALUES (1,3,'2022-05-19 09:14:21','105216426','JAVA로 취뽀~ 스터디에 단어 순서 뒤집기 문제를 업로드 했습니다.',101),(2,3,'2022-05-19 09:14:42','105216426','JAVA로 취뽀~ 스터디에 요새푸스 문제 문제를 업로드 했습니다.',101),(3,3,'2022-05-19 09:14:57','105216426','JAVA로 취뽀~ 스터디에 제로 문제를 업로드 했습니다.',101),(4,2,'2022-05-19 09:15:10','55572165','JAVA로 취뽀~ 스터디에 s1 파일을 업로드 했습니다.',101),(5,3,'2022-05-19 09:15:17','105216426','JAVA로 취뽀~ 스터디에 카드2 문제를 업로드 했습니다.',101),(6,3,'2022-05-19 09:16:53','105216426','JAVA로 취뽀~ 스터디에 12034 - 김인천씨의 식료품가게 문제를 업로드 했습니다.',101),(7,3,'2022-05-19 09:17:33','105216426','JAVA로 취뽀~ 스터디에 2644 - 촌수계산 문제를 업로드 했습니다.',101),(8,3,'2022-05-19 09:17:59','105216426','JAVA로 취뽀~ 스터디에 2923 - 신기한 소수 문제를 업로드 했습니다.',101),(9,3,'2022-05-19 09:18:16','105216426','JAVA로 취뽀~ 스터디에 1388 - 바닥 장식 문제를 업로드 했습니다.',101),(10,3,'2022-05-19 09:18:36','105216426','JAVA로 취뽀~ 스터디에 2583 - 영역 구하기 문제를 업로드 했습니다.',101),(11,3,'2022-05-19 09:19:14','105216426','JAVA로 취뽀~ 스터디에 2667 - 단지번호붙이기 문제를 업로드 했습니다.',101),(12,3,'2022-05-19 09:19:51','105216426','JAVA로 취뽀~ 스터디에 21735 - 눈덩이 굴리기 문제를 업로드 했습니다.',101),(13,3,'2022-05-19 09:20:10','105216426','JAVA로 취뽀~ 스터디에 14889 - 스타트와 링크 문제를 업로드 했습니다.',101),(14,3,'2022-05-19 09:20:28','105216426','JAVA로 취뽀~ 스터디에 1759 - 암호 만들기 문제를 업로드 했습니다.',101),(15,3,'2022-05-19 09:20:52','105216426','JAVA로 취뽀~ 스터디에 10819 - 차이를 최대로 문제를 업로드 했습니다.',101),(16,3,'2022-05-19 09:21:08','105216426','JAVA로 취뽀~ 스터디에 6603 - 로또 문제를 업로드 했습니다.',101),(17,2,'2022-05-19 09:21:36','55572165','JAVA로 취뽀~ 스터디에 yjy_0519_신기한 소수 파일을 업로드 했습니다.',101),(19,2,'2022-05-19 09:22:17','105216426','JAVA로 취뽀~ 스터디에 _001_b12605 파일을 업로드 했습니다.',101),(20,2,'2022-05-19 09:22:21','46081043','JAVA로 취뽀~ 스터디에 단어순서뒤집기_지순 파일을 업로드 했습니다.',101),(21,2,'2022-05-19 09:22:35','105216426','JAVA로 취뽀~ 스터디에 _002_b1158 파일을 업로드 했습니다.',101),(22,2,'2022-05-19 09:22:49','105216426','JAVA로 취뽀~ 스터디에 _003_b10773 파일을 업로드 했습니다.',101),(23,2,'2022-05-19 09:22:59','46081043','JAVA로 취뽀~ 스터디에 단어순서뒤집기_지순 파일을 업로드 했습니다.',101),(25,2,'2022-05-19 09:23:22','46081043','JAVA로 취뽀~ 스터디에 요새푸스문제_지순 파일을 업로드 했습니다.',101),(26,2,'2022-05-19 09:23:24','53349284','JAVA로 취뽀~ 스터디에 단어순서뒤집기_서하 파일을 업로드 했습니다.',101),(27,2,'2022-05-19 09:23:33','105216426','JAVA로 취뽀~ 스터디에 _004_b2164 파일을 업로드 했습니다.',101),(28,2,'2022-05-19 09:23:39','46081043','JAVA로 취뽀~ 스터디에 제로_지순 파일을 업로드 했습니다.',101),(29,2,'2022-05-19 09:23:47','105216426','JAVA로 취뽀~ 스터디에 _005_b12034 파일을 업로드 했습니다.',101),(30,2,'2022-05-19 09:24:07','46081043','JAVA로 취뽀~ 스터디에 카드2_지순 파일을 업로드 했습니다.',101),(31,2,'2022-05-19 09:24:31','46081043','JAVA로 취뽀~ 스터디에 김인천씨의식료품가게_지순 파일을 업로드 했습니다.',101),(32,2,'2022-05-19 09:25:00','105216426','JAVA로 취뽀~ 스터디에 _007_b2644 파일을 업로드 했습니다.',101),(34,2,'2022-05-19 09:25:58','53349284','JAVA로 취뽀~ 스터디에 _033_b7576 파일을 업로드 했습니다.',101),(35,2,'2022-05-19 09:26:11','105216426','JAVA로 취뽀~ 스터디에 _008_b2023 파일을 업로드 했습니다.',101),(36,2,'2022-05-19 09:26:29','105216426','JAVA로 취뽀~ 스터디에 _009_b1388 파일을 업로드 했습니다.',101),(37,2,'2022-05-19 09:26:45','53349284','JAVA로 취뽀~ 스터디에 요새푸스 문제_서하 파일을 업로드 했습니다.',101),(38,2,'2022-05-19 09:26:55','105216426','JAVA로 취뽀~ 스터디에 _010_b2583 파일을 업로드 했습니다.',101),(39,2,'2022-05-19 09:27:07','105216426','JAVA로 취뽀~ 스터디에 _012_b2667 파일을 업로드 했습니다.',101),(40,2,'2022-05-19 09:27:15','46081043','JAVA로 취뽀~ 스터디에 촌수계산_지순 파일을 업로드 했습니다.',101),(41,2,'2022-05-19 09:27:18','53349284','JAVA로 취뽀~ 스터디에 제로 파일을 업로드 했습니다.',101),(42,2,'2022-05-19 09:27:21','105216426','JAVA로 취뽀~ 스터디에 _017_b6603 파일을 업로드 했습니다.',101),(43,2,'2022-05-19 09:28:33','105216426','JAVA로 취뽀~ 스터디에 _016_b10819 파일을 업로드 했습니다.',101),(44,2,'2022-05-19 09:28:48','105216426','JAVA로 취뽀~ 스터디에 _015_b1759 파일을 업로드 했습니다.',101),(45,2,'2022-05-19 09:29:01','105216426','JAVA로 취뽀~ 스터디에 _014_b14889 파일을 업로드 했습니다.',101),(46,2,'2022-05-19 09:29:15','105216426','JAVA로 취뽀~ 스터디에 _013_b21735 파일을 업로드 했습니다.',101),(47,2,'2022-05-19 09:29:19','46081043','JAVA로 취뽀~ 스터디에 바닥장식_지순 파일을 업로드 했습니다.',101),(48,2,'2022-05-19 09:29:51','46081043','JAVA로 취뽀~ 스터디에 영역구하기_지순 파일을 업로드 했습니다.',101),(49,2,'2022-05-19 09:30:37','46081043','JAVA로 취뽀~ 스터디에 단지번호붙이기_지순 파일을 업로드 했습니다.',101),(50,1,'2022-05-19 11:37:08','55572165','JAVA로 취뽀~ 스터디의 yjy_0519_신기한 소수 에 댓글을 남겼습니다.',101),(51,1,'2022-05-19 11:39:07','55572165','JAVA로 취뽀~ 스터디의 s1 에 댓글을 남겼습니다.',101),(52,1,'2022-05-19 12:04:49','55572165','JAVA로 취뽀~ 스터디의 yjy_0519_신기한 소수 에 댓글을 남겼습니다.',101),(53,1,'2022-05-19 12:05:17','55572165','JAVA로 취뽀~ 스터디의 단어순서뒤집기_지순 에 댓글을 남겼습니다.',101),(56,1,'2022-05-19 12:49:16','55572165','JAVA로 취뽀~ 스터디의 바닥장식_지순 에 댓글을 남겼습니다.',101),(59,1,'2022-05-19 16:06:06','46081043','JAVA로 취뽀~ 스터디의 yjy_0519_신기한 소수 에 댓글을 남겼습니다.',101),(60,1,'2022-05-19 16:06:45','55572165','JAVA로 취뽀~ 스터디의 _013_b21735 에 댓글을 남겼습니다.',101),(61,1,'2022-05-19 16:08:39','55572165','JAVA로 취뽀~ 스터디의 _014_b14889 에 댓글을 남겼습니다.',101),(62,1,'2022-05-19 16:08:40','46081043','JAVA로 취뽀~ 스터디의 yjy_0519_신기한 소수 에 댓글을 남겼습니다.',101),(63,2,'2022-05-19 17:24:38','55572165','JAVA로 취뽀~ 스터디에 _002_b1158 파일을 업로드 했습니다.',101),(64,2,'2022-05-19 17:24:57','55572165','JAVA로 취뽀~ 스터디에 _002_b1158 파일을 업로드 했습니다.',101),(65,2,'2022-05-19 17:25:08','55572165','JAVA로 취뽀~ 스터디에 _007_b2644 파일을 업로드 했습니다.',101),(66,2,'2022-05-19 17:25:26','55572165','JAVA로 취뽀~ 스터디에 _008_b2023 파일을 업로드 했습니다.',101),(67,2,'2022-05-19 17:25:54','55572165','JAVA로 취뽀~ 스터디에 _009_b1388 파일을 업로드 했습니다.',101),(68,2,'2022-05-19 17:26:05','55572165','JAVA로 취뽀~ 스터디에 _006_b2606 파일을 업로드 했습니다.',101),(69,2,'2022-05-19 17:26:20','55572165','JAVA로 취뽀~ 스터디에 _011_swea2383 파일을 업로드 했습니다.',101),(70,2,'2022-05-19 17:26:42','55572165','JAVA로 취뽀~ 스터디에 _012_b2667 파일을 업로드 했습니다.',101),(73,1,'2022-05-19 17:42:26','55572165','JAVA로 취뽀~ 스터디의 _015_b1759 에 댓글을 남겼습니다.',101),(74,1,'2022-05-19 17:42:36','46081043','JAVA로 취뽀~ 스터디의 _002_b1158 에 댓글을 남겼습니다.',101),(75,2,'2022-05-19 18:32:27','55572165','JAVA로 취뽀~ 스터디에 _013_b21735 파일을 업로드 했습니다.',101),(76,3,'2022-05-19 22:16:00','105216426','js 스터디 스터디에 adssad 문제를 업로드 했습니다.',107);
/*!40000 ALTER TABLE `activity_score` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `alert`
--

DROP TABLE IF EXISTS `alert`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `alert` (
  `alert_id` bigint NOT NULL AUTO_INCREMENT,
  `fk_receiver_id` varchar(30) NOT NULL,
  `fk_sender_id` varchar(30) DEFAULT NULL,
  `alert_type` int NOT NULL,
  `alert_content` varchar(100) NOT NULL,
  `alert_transmission_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `alert_redirect_url` varchar(150) DEFAULT NULL,
  `alert_is_checked` tinyint NOT NULL DEFAULT '0',
  PRIMARY KEY (`alert_id`),
  KEY `fk_alert_user1_idx` (`fk_receiver_id`),
  KEY `fk_alert_user2_idx` (`fk_sender_id`),
  CONSTRAINT `fk_alert_user1` FOREIGN KEY (`fk_receiver_id`) REFERENCES `user` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_alert_user2` FOREIGN KEY (`fk_sender_id`) REFERENCES `user` (`user_id`) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=142 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `alert`
--

LOCK TABLES `alert` WRITE;
/*!40000 ALTER TABLE `alert` DISABLE KEYS */;
INSERT INTO `alert` VALUES (1,'105216426','55572165',1,'yjydev님이 단어 순서 뒤집기문제에 풀이를 등록했습니다.','2022-05-19 09:15:10','/study/101/단어 순서 뒤집기/code/343',1),(2,'46081043','55572165',1,'yjydev님이 단어 순서 뒤집기문제에 풀이를 등록했습니다.','2022-05-19 09:15:10','/study/101/단어 순서 뒤집기/code/343',1),(3,'53349284','55572165',1,'yjydev님이 단어 순서 뒤집기문제에 풀이를 등록했습니다.','2022-05-19 09:15:10','/study/101/단어 순서 뒤집기/code/343',0),(4,'105216426','55572165',1,'yjydev님이 2923 - 신기한 소수문제에 풀이를 등록했습니다.','2022-05-19 09:21:37','/study/101/2923 - 신기한 소수/code/344',1),(5,'46081043','55572165',1,'yjydev님이 2923 - 신기한 소수문제에 풀이를 등록했습니다.','2022-05-19 09:21:37','/study/101/2923 - 신기한 소수/code/344',1),(6,'53349284','55572165',1,'yjydev님이 2923 - 신기한 소수문제에 풀이를 등록했습니다.','2022-05-19 09:21:37','/study/101/2923 - 신기한 소수/code/344',0),(10,'55572165','105216426',1,'alta-test님이 12605 - 단어 순서 뒤집기문제에 풀이를 등록했습니다.','2022-05-19 09:22:17','/study/101/12605 - 단어 순서 뒤집기/code/346',1),(11,'46081043','105216426',1,'alta-test님이 12605 - 단어 순서 뒤집기문제에 풀이를 등록했습니다.','2022-05-19 09:22:17','/study/101/12605 - 단어 순서 뒤집기/code/346',1),(12,'53349284','105216426',1,'alta-test님이 12605 - 단어 순서 뒤집기문제에 풀이를 등록했습니다.','2022-05-19 09:22:17','/study/101/12605 - 단어 순서 뒤집기/code/346',0),(13,'105216426','46081043',1,'JISOONLEE님이 2923 - 신기한 소수문제에 풀이를 등록했습니다.','2022-05-19 09:22:21','/study/101/2923 - 신기한 소수/code/347',0),(14,'55572165','46081043',1,'JISOONLEE님이 2923 - 신기한 소수문제에 풀이를 등록했습니다.','2022-05-19 09:22:21','/study/101/2923 - 신기한 소수/code/347',1),(15,'53349284','46081043',1,'JISOONLEE님이 2923 - 신기한 소수문제에 풀이를 등록했습니다.','2022-05-19 09:22:21','/study/101/2923 - 신기한 소수/code/347',0),(16,'55572165','105216426',1,'alta-test님이 1158 - 요새푸스 문제문제에 풀이를 등록했습니다.','2022-05-19 09:22:36','/study/101/1158 - 요새푸스 문제/code/348',1),(17,'46081043','105216426',1,'alta-test님이 1158 - 요새푸스 문제문제에 풀이를 등록했습니다.','2022-05-19 09:22:36','/study/101/1158 - 요새푸스 문제/code/348',1),(18,'53349284','105216426',1,'alta-test님이 1158 - 요새푸스 문제문제에 풀이를 등록했습니다.','2022-05-19 09:22:36','/study/101/1158 - 요새푸스 문제/code/348',0),(19,'55572165','105216426',1,'alta-test님이 10773 - 제로문제에 풀이를 등록했습니다.','2022-05-19 09:22:50','/study/101/10773 - 제로/code/349',1),(20,'46081043','105216426',1,'alta-test님이 10773 - 제로문제에 풀이를 등록했습니다.','2022-05-19 09:22:50','/study/101/10773 - 제로/code/349',1),(21,'53349284','105216426',1,'alta-test님이 10773 - 제로문제에 풀이를 등록했습니다.','2022-05-19 09:22:50','/study/101/10773 - 제로/code/349',0),(22,'105216426','46081043',1,'JISOONLEE님이 12605 - 단어 순서 뒤집기문제에 풀이를 등록했습니다.','2022-05-19 09:23:00','/study/101/12605 - 단어 순서 뒤집기/code/350',0),(23,'55572165','46081043',1,'JISOONLEE님이 12605 - 단어 순서 뒤집기문제에 풀이를 등록했습니다.','2022-05-19 09:23:00','/study/101/12605 - 단어 순서 뒤집기/code/350',1),(24,'53349284','46081043',1,'JISOONLEE님이 12605 - 단어 순서 뒤집기문제에 풀이를 등록했습니다.','2022-05-19 09:23:00','/study/101/12605 - 단어 순서 뒤집기/code/350',0),(28,'105216426','46081043',1,'JISOONLEE님이 1158 - 요새푸스 문제문제에 풀이를 등록했습니다.','2022-05-19 09:23:23','/study/101/1158 - 요새푸스 문제/code/352',0),(29,'55572165','46081043',1,'JISOONLEE님이 1158 - 요새푸스 문제문제에 풀이를 등록했습니다.','2022-05-19 09:23:23','/study/101/1158 - 요새푸스 문제/code/352',1),(30,'53349284','46081043',1,'JISOONLEE님이 1158 - 요새푸스 문제문제에 풀이를 등록했습니다.','2022-05-19 09:23:23','/study/101/1158 - 요새푸스 문제/code/352',0),(31,'105216426','53349284',1,'Seoha-Oh님이 2923 - 신기한 소수문제에 풀이를 등록했습니다.','2022-05-19 09:23:24','/study/101/2923 - 신기한 소수/code/353',0),(32,'55572165','53349284',1,'Seoha-Oh님이 2923 - 신기한 소수문제에 풀이를 등록했습니다.','2022-05-19 09:23:24','/study/101/2923 - 신기한 소수/code/353',1),(33,'46081043','53349284',1,'Seoha-Oh님이 2923 - 신기한 소수문제에 풀이를 등록했습니다.','2022-05-19 09:23:24','/study/101/2923 - 신기한 소수/code/353',1),(34,'55572165','105216426',1,'alta-test님이 2164 - 카드2문제에 풀이를 등록했습니다.','2022-05-19 09:23:33','/study/101/2164 - 카드2/code/354',1),(35,'46081043','105216426',1,'alta-test님이 2164 - 카드2문제에 풀이를 등록했습니다.','2022-05-19 09:23:33','/study/101/2164 - 카드2/code/354',1),(36,'53349284','105216426',1,'alta-test님이 2164 - 카드2문제에 풀이를 등록했습니다.','2022-05-19 09:23:33','/study/101/2164 - 카드2/code/354',0),(37,'105216426','46081043',1,'JISOONLEE님이 10773 - 제로문제에 풀이를 등록했습니다.','2022-05-19 09:23:40','/study/101/10773 - 제로/code/355',0),(38,'55572165','46081043',1,'JISOONLEE님이 10773 - 제로문제에 풀이를 등록했습니다.','2022-05-19 09:23:40','/study/101/10773 - 제로/code/355',1),(39,'53349284','46081043',1,'JISOONLEE님이 10773 - 제로문제에 풀이를 등록했습니다.','2022-05-19 09:23:40','/study/101/10773 - 제로/code/355',0),(40,'55572165','105216426',1,'alta-test님이 12034 - 김인천씨의 식료품가게문제에 풀이를 등록했습니다.','2022-05-19 09:23:48','/study/101/12034 - 김인천씨의 식료품가게/code/356',1),(41,'46081043','105216426',1,'alta-test님이 12034 - 김인천씨의 식료품가게문제에 풀이를 등록했습니다.','2022-05-19 09:23:48','/study/101/12034 - 김인천씨의 식료품가게/code/356',1),(42,'53349284','105216426',1,'alta-test님이 12034 - 김인천씨의 식료품가게문제에 풀이를 등록했습니다.','2022-05-19 09:23:48','/study/101/12034 - 김인천씨의 식료품가게/code/356',0),(43,'105216426','46081043',1,'JISOONLEE님이 2164 - 카드2문제에 풀이를 등록했습니다.','2022-05-19 09:24:07','/study/101/2164 - 카드2/code/357',0),(44,'55572165','46081043',1,'JISOONLEE님이 2164 - 카드2문제에 풀이를 등록했습니다.','2022-05-19 09:24:07','/study/101/2164 - 카드2/code/357',1),(45,'53349284','46081043',1,'JISOONLEE님이 2164 - 카드2문제에 풀이를 등록했습니다.','2022-05-19 09:24:07','/study/101/2164 - 카드2/code/357',0),(46,'105216426','46081043',1,'JISOONLEE님이 12034 - 김인천씨의 식료품가게문제에 풀이를 등록했습니다.','2022-05-19 09:24:32','/study/101/12034 - 김인천씨의 식료품가게/code/358',0),(47,'55572165','46081043',1,'JISOONLEE님이 12034 - 김인천씨의 식료품가게문제에 풀이를 등록했습니다.','2022-05-19 09:24:32','/study/101/12034 - 김인천씨의 식료품가게/code/358',1),(48,'53349284','46081043',1,'JISOONLEE님이 12034 - 김인천씨의 식료품가게문제에 풀이를 등록했습니다.','2022-05-19 09:24:32','/study/101/12034 - 김인천씨의 식료품가게/code/358',0),(49,'55572165','105216426',1,'alta-test님이 2644 - 촌수계산문제에 풀이를 등록했습니다.','2022-05-19 09:25:00','/study/101/2644 - 촌수계산/code/359',1),(50,'46081043','105216426',1,'alta-test님이 2644 - 촌수계산문제에 풀이를 등록했습니다.','2022-05-19 09:25:00','/study/101/2644 - 촌수계산/code/359',1),(51,'53349284','105216426',1,'alta-test님이 2644 - 촌수계산문제에 풀이를 등록했습니다.','2022-05-19 09:25:00','/study/101/2644 - 촌수계산/code/359',0),(55,'105216426','53349284',1,'Seoha-Oh님이 12605 - 단어 순서 뒤집기문제에 풀이를 등록했습니다.','2022-05-19 09:25:58','/study/101/12605 - 단어 순서 뒤집기/code/361',0),(56,'55572165','53349284',1,'Seoha-Oh님이 12605 - 단어 순서 뒤집기문제에 풀이를 등록했습니다.','2022-05-19 09:25:58','/study/101/12605 - 단어 순서 뒤집기/code/361',1),(57,'46081043','53349284',1,'Seoha-Oh님이 12605 - 단어 순서 뒤집기문제에 풀이를 등록했습니다.','2022-05-19 09:25:58','/study/101/12605 - 단어 순서 뒤집기/code/361',1),(58,'55572165','105216426',1,'alta-test님이 2023 - 신기한 소수문제에 풀이를 등록했습니다.','2022-05-19 09:26:11','/study/101/2023 - 신기한 소수/code/362',1),(59,'46081043','105216426',1,'alta-test님이 2023 - 신기한 소수문제에 풀이를 등록했습니다.','2022-05-19 09:26:11','/study/101/2023 - 신기한 소수/code/362',1),(60,'53349284','105216426',1,'alta-test님이 2023 - 신기한 소수문제에 풀이를 등록했습니다.','2022-05-19 09:26:11','/study/101/2023 - 신기한 소수/code/362',0),(61,'55572165','105216426',1,'alta-test님이 1388 - 바닥 장식문제에 풀이를 등록했습니다.','2022-05-19 09:26:29','/study/101/1388 - 바닥 장식/code/363',1),(62,'46081043','105216426',1,'alta-test님이 1388 - 바닥 장식문제에 풀이를 등록했습니다.','2022-05-19 09:26:29','/study/101/1388 - 바닥 장식/code/363',1),(63,'53349284','105216426',1,'alta-test님이 1388 - 바닥 장식문제에 풀이를 등록했습니다.','2022-05-19 09:26:29','/study/101/1388 - 바닥 장식/code/363',0),(64,'105216426','53349284',1,'Seoha-Oh님이 1158 - 요새푸스 문제문제에 풀이를 등록했습니다.','2022-05-19 09:26:46','/study/101/1158 - 요새푸스 문제/code/364',0),(65,'55572165','53349284',1,'Seoha-Oh님이 1158 - 요새푸스 문제문제에 풀이를 등록했습니다.','2022-05-19 09:26:46','/study/101/1158 - 요새푸스 문제/code/364',1),(66,'46081043','53349284',1,'Seoha-Oh님이 1158 - 요새푸스 문제문제에 풀이를 등록했습니다.','2022-05-19 09:26:46','/study/101/1158 - 요새푸스 문제/code/364',1),(67,'55572165','105216426',1,'alta-test님이 2583 - 영역 구하기문제에 풀이를 등록했습니다.','2022-05-19 09:26:55','/study/101/2583 - 영역 구하기/code/365',1),(68,'46081043','105216426',1,'alta-test님이 2583 - 영역 구하기문제에 풀이를 등록했습니다.','2022-05-19 09:26:55','/study/101/2583 - 영역 구하기/code/365',1),(69,'53349284','105216426',1,'alta-test님이 2583 - 영역 구하기문제에 풀이를 등록했습니다.','2022-05-19 09:26:55','/study/101/2583 - 영역 구하기/code/365',0),(70,'55572165','105216426',1,'alta-test님이 2667 - 단지번호붙이기문제에 풀이를 등록했습니다.','2022-05-19 09:27:08','/study/101/2667 - 단지번호붙이기/code/366',1),(71,'46081043','105216426',1,'alta-test님이 2667 - 단지번호붙이기문제에 풀이를 등록했습니다.','2022-05-19 09:27:08','/study/101/2667 - 단지번호붙이기/code/366',1),(72,'53349284','105216426',1,'alta-test님이 2667 - 단지번호붙이기문제에 풀이를 등록했습니다.','2022-05-19 09:27:08','/study/101/2667 - 단지번호붙이기/code/366',0),(73,'105216426','46081043',1,'JISOONLEE님이 2644 - 촌수계산문제에 풀이를 등록했습니다.','2022-05-19 09:27:15','/study/101/2644 - 촌수계산/code/367',0),(74,'55572165','46081043',1,'JISOONLEE님이 2644 - 촌수계산문제에 풀이를 등록했습니다.','2022-05-19 09:27:15','/study/101/2644 - 촌수계산/code/367',1),(75,'53349284','46081043',1,'JISOONLEE님이 2644 - 촌수계산문제에 풀이를 등록했습니다.','2022-05-19 09:27:15','/study/101/2644 - 촌수계산/code/367',0),(76,'105216426','53349284',1,'Seoha-Oh님이 10773 - 제로문제에 풀이를 등록했습니다.','2022-05-19 09:27:18','/study/101/10773 - 제로/code/368',0),(77,'55572165','53349284',1,'Seoha-Oh님이 10773 - 제로문제에 풀이를 등록했습니다.','2022-05-19 09:27:18','/study/101/10773 - 제로/code/368',1),(78,'46081043','53349284',1,'Seoha-Oh님이 10773 - 제로문제에 풀이를 등록했습니다.','2022-05-19 09:27:18','/study/101/10773 - 제로/code/368',1),(79,'55572165','105216426',1,'alta-test님이 6603 - 로또문제에 풀이를 등록했습니다.','2022-05-19 09:27:21','/study/101/6603 - 로또/code/369',1),(80,'46081043','105216426',1,'alta-test님이 6603 - 로또문제에 풀이를 등록했습니다.','2022-05-19 09:27:21','/study/101/6603 - 로또/code/369',1),(81,'53349284','105216426',1,'alta-test님이 6603 - 로또문제에 풀이를 등록했습니다.','2022-05-19 09:27:21','/study/101/6603 - 로또/code/369',0),(82,'55572165','105216426',1,'alta-test님이 10819 - 차이를 최대로문제에 풀이를 등록했습니다.','2022-05-19 09:28:33','/study/101/10819 - 차이를 최대로/code/370',1),(83,'46081043','105216426',1,'alta-test님이 10819 - 차이를 최대로문제에 풀이를 등록했습니다.','2022-05-19 09:28:33','/study/101/10819 - 차이를 최대로/code/370',1),(84,'53349284','105216426',1,'alta-test님이 10819 - 차이를 최대로문제에 풀이를 등록했습니다.','2022-05-19 09:28:33','/study/101/10819 - 차이를 최대로/code/370',0),(85,'55572165','105216426',1,'alta-test님이 1759 - 암호 만들기문제에 풀이를 등록했습니다.','2022-05-19 09:28:49','/study/101/1759 - 암호 만들기/code/371',1),(86,'46081043','105216426',1,'alta-test님이 1759 - 암호 만들기문제에 풀이를 등록했습니다.','2022-05-19 09:28:49','/study/101/1759 - 암호 만들기/code/371',1),(87,'53349284','105216426',1,'alta-test님이 1759 - 암호 만들기문제에 풀이를 등록했습니다.','2022-05-19 09:28:49','/study/101/1759 - 암호 만들기/code/371',0),(88,'55572165','105216426',1,'alta-test님이 14889 - 스타트와 링크문제에 풀이를 등록했습니다.','2022-05-19 09:29:02','/study/101/14889 - 스타트와 링크/code/372',1),(89,'46081043','105216426',1,'alta-test님이 14889 - 스타트와 링크문제에 풀이를 등록했습니다.','2022-05-19 09:29:02','/study/101/14889 - 스타트와 링크/code/372',1),(90,'53349284','105216426',1,'alta-test님이 14889 - 스타트와 링크문제에 풀이를 등록했습니다.','2022-05-19 09:29:02','/study/101/14889 - 스타트와 링크/code/372',0),(91,'55572165','105216426',1,'alta-test님이 21735 - 눈덩이 굴리기문제에 풀이를 등록했습니다.','2022-05-19 09:29:16','/study/101/21735 - 눈덩이 굴리기/code/373',1),(92,'46081043','105216426',1,'alta-test님이 21735 - 눈덩이 굴리기문제에 풀이를 등록했습니다.','2022-05-19 09:29:16','/study/101/21735 - 눈덩이 굴리기/code/373',1),(93,'53349284','105216426',1,'alta-test님이 21735 - 눈덩이 굴리기문제에 풀이를 등록했습니다.','2022-05-19 09:29:16','/study/101/21735 - 눈덩이 굴리기/code/373',0),(94,'105216426','46081043',1,'JISOONLEE님이 1388 - 바닥 장식문제에 풀이를 등록했습니다.','2022-05-19 09:29:20','/study/101/1388 - 바닥 장식/code/374',0),(95,'55572165','46081043',1,'JISOONLEE님이 1388 - 바닥 장식문제에 풀이를 등록했습니다.','2022-05-19 09:29:20','/study/101/1388 - 바닥 장식/code/374',1),(96,'53349284','46081043',1,'JISOONLEE님이 1388 - 바닥 장식문제에 풀이를 등록했습니다.','2022-05-19 09:29:20','/study/101/1388 - 바닥 장식/code/374',0),(97,'105216426','46081043',1,'JISOONLEE님이 2583 - 영역 구하기문제에 풀이를 등록했습니다.','2022-05-19 09:29:52','/study/101/2583 - 영역 구하기/code/375',0),(98,'55572165','46081043',1,'JISOONLEE님이 2583 - 영역 구하기문제에 풀이를 등록했습니다.','2022-05-19 09:29:52','/study/101/2583 - 영역 구하기/code/375',1),(99,'53349284','46081043',1,'JISOONLEE님이 2583 - 영역 구하기문제에 풀이를 등록했습니다.','2022-05-19 09:29:52','/study/101/2583 - 영역 구하기/code/375',0),(100,'105216426','46081043',1,'JISOONLEE님이 2667 - 단지번호붙이기문제에 풀이를 등록했습니다.','2022-05-19 09:30:37','/study/101/2667 - 단지번호붙이기/code/376',0),(101,'55572165','46081043',1,'JISOONLEE님이 2667 - 단지번호붙이기문제에 풀이를 등록했습니다.','2022-05-19 09:30:37','/study/101/2667 - 단지번호붙이기/code/376',1),(102,'53349284','46081043',1,'JISOONLEE님이 2667 - 단지번호붙이기문제에 풀이를 등록했습니다.','2022-05-19 09:30:37','/study/101/2667 - 단지번호붙이기/code/376',0),(103,'55572165','55572165',2,'yjydev님이 2023 - 신기한 소수문제의 코드에 댓글을 달았습니다.','2022-05-19 11:37:09','/study/101/2023 - 신기한 소수/code/344',1),(104,'55572165','55572165',2,'yjydev님이 12605 - 단어 순서 뒤집기문제의 코드에 댓글을 달았습니다.','2022-05-19 11:39:08','/study/101/12605 - 단어 순서 뒤집기/code/343',1),(105,'46081043','55572165',2,'yjydev님이 12605 - 단어 순서 뒤집기문제의 코드에 댓글을 달았습니다.','2022-05-19 12:05:18','/study/101/12605 - 단어 순서 뒤집기/code/350',1),(106,'46081043','55572165',2,'yjydev님이 1388 - 바닥 장식문제의 코드에 댓글을 달았습니다.','2022-05-19 12:49:17','/study/101/1388 - 바닥 장식/code/374',1),(107,'92253127','55572165',1,'yjydev님이 폰켓몬문제에 풀이를 등록했습니다.','2022-05-19 16:04:26','/study/104/폰켓몬/code/378',1),(108,'55572165','46081043',2,'JISOONLEE님이 2023 - 신기한 소수문제의 코드에 댓글을 달았습니다.','2022-05-19 16:06:07','/study/101/2023 - 신기한 소수/code/344',1),(109,'105216426','55572165',2,'yjydev님이 21735 - 눈덩이 굴리기문제의 코드에 댓글을 달았습니다.','2022-05-19 16:06:45','/study/101/21735 - 눈덩이 굴리기/code/373',0),(110,'105216426','55572165',2,'yjydev님이 14889 - 스타트와 링크문제의 코드에 댓글을 달았습니다.','2022-05-19 16:08:39','/study/101/14889 - 스타트와 링크/code/372',0),(111,'55572165','46081043',2,'JISOONLEE님이 2023 - 신기한 소수문제의 코드에 댓글을 달았습니다.','2022-05-19 16:08:41','/study/101/2023 - 신기한 소수/code/344',1),(112,'105216426','55572165',1,'yjydev님이 1158 - 요새푸스 문제문제에 풀이를 등록했습니다.','2022-05-19 17:24:39','/study/101/1158 - 요새푸스 문제/code/379',0),(113,'46081043','55572165',1,'yjydev님이 1158 - 요새푸스 문제문제에 풀이를 등록했습니다.','2022-05-19 17:24:39','/study/101/1158 - 요새푸스 문제/code/379',1),(114,'53349284','55572165',1,'yjydev님이 1158 - 요새푸스 문제문제에 풀이를 등록했습니다.','2022-05-19 17:24:39','/study/101/1158 - 요새푸스 문제/code/379',0),(115,'105216426','55572165',1,'yjydev님이 10773 - 제로문제에 풀이를 등록했습니다.','2022-05-19 17:24:58','/study/101/10773 - 제로/code/380',0),(116,'46081043','55572165',1,'yjydev님이 10773 - 제로문제에 풀이를 등록했습니다.','2022-05-19 17:24:58','/study/101/10773 - 제로/code/380',1),(117,'53349284','55572165',1,'yjydev님이 10773 - 제로문제에 풀이를 등록했습니다.','2022-05-19 17:24:58','/study/101/10773 - 제로/code/380',0),(118,'105216426','55572165',1,'yjydev님이 2164 - 카드2문제에 풀이를 등록했습니다.','2022-05-19 17:25:09','/study/101/2164 - 카드2/code/381',0),(119,'46081043','55572165',1,'yjydev님이 2164 - 카드2문제에 풀이를 등록했습니다.','2022-05-19 17:25:09','/study/101/2164 - 카드2/code/381',1),(120,'53349284','55572165',1,'yjydev님이 2164 - 카드2문제에 풀이를 등록했습니다.','2022-05-19 17:25:09','/study/101/2164 - 카드2/code/381',0),(121,'105216426','55572165',1,'yjydev님이 12034 - 김인천씨의 식료품가게문제에 풀이를 등록했습니다.','2022-05-19 17:25:26','/study/101/12034 - 김인천씨의 식료품가게/code/382',0),(122,'46081043','55572165',1,'yjydev님이 12034 - 김인천씨의 식료품가게문제에 풀이를 등록했습니다.','2022-05-19 17:25:26','/study/101/12034 - 김인천씨의 식료품가게/code/382',1),(123,'53349284','55572165',1,'yjydev님이 12034 - 김인천씨의 식료품가게문제에 풀이를 등록했습니다.','2022-05-19 17:25:26','/study/101/12034 - 김인천씨의 식료품가게/code/382',0),(124,'105216426','55572165',1,'yjydev님이 1388 - 바닥 장식문제에 풀이를 등록했습니다.','2022-05-19 17:25:54','/study/101/1388 - 바닥 장식/code/383',0),(125,'46081043','55572165',1,'yjydev님이 1388 - 바닥 장식문제에 풀이를 등록했습니다.','2022-05-19 17:25:54','/study/101/1388 - 바닥 장식/code/383',1),(126,'53349284','55572165',1,'yjydev님이 1388 - 바닥 장식문제에 풀이를 등록했습니다.','2022-05-19 17:25:54','/study/101/1388 - 바닥 장식/code/383',0),(127,'105216426','55572165',1,'yjydev님이 2644 - 촌수계산문제에 풀이를 등록했습니다.','2022-05-19 17:26:05','/study/101/2644 - 촌수계산/code/384',0),(128,'46081043','55572165',1,'yjydev님이 2644 - 촌수계산문제에 풀이를 등록했습니다.','2022-05-19 17:26:05','/study/101/2644 - 촌수계산/code/384',1),(129,'53349284','55572165',1,'yjydev님이 2644 - 촌수계산문제에 풀이를 등록했습니다.','2022-05-19 17:26:05','/study/101/2644 - 촌수계산/code/384',0),(130,'105216426','55572165',1,'yjydev님이 2583 - 영역 구하기문제에 풀이를 등록했습니다.','2022-05-19 17:26:20','/study/101/2583 - 영역 구하기/code/385',0),(131,'46081043','55572165',1,'yjydev님이 2583 - 영역 구하기문제에 풀이를 등록했습니다.','2022-05-19 17:26:20','/study/101/2583 - 영역 구하기/code/385',1),(132,'53349284','55572165',1,'yjydev님이 2583 - 영역 구하기문제에 풀이를 등록했습니다.','2022-05-19 17:26:20','/study/101/2583 - 영역 구하기/code/385',0),(133,'105216426','55572165',1,'yjydev님이 2667 - 단지번호붙이기문제에 풀이를 등록했습니다.','2022-05-19 17:26:42','/study/101/2667 - 단지번호붙이기/code/386',0),(134,'46081043','55572165',1,'yjydev님이 2667 - 단지번호붙이기문제에 풀이를 등록했습니다.','2022-05-19 17:26:42','/study/101/2667 - 단지번호붙이기/code/386',1),(135,'53349284','55572165',1,'yjydev님이 2667 - 단지번호붙이기문제에 풀이를 등록했습니다.','2022-05-19 17:26:42','/study/101/2667 - 단지번호붙이기/code/386',0),(136,'92253127','55572165',1,'yjydev님이 폰켓몬문제에 풀이를 등록했습니다.','2022-05-19 17:40:51','/study/105/폰켓몬/code/387',0),(137,'105216426','55572165',2,'yjydev님이 1759 - 암호 만들기문제의 코드에 댓글을 달았습니다.','2022-05-19 17:42:27','/study/101/1759 - 암호 만들기/code/371',0),(138,'55572165','46081043',2,'JISOONLEE님이 1158 - 요새푸스 문제문제의 코드에 댓글을 달았습니다.','2022-05-19 17:42:37','/study/101/1158 - 요새푸스 문제/code/379',1),(139,'105216426','55572165',1,'yjydev님이 21735 - 눈덩이 굴리기문제에 풀이를 등록했습니다.','2022-05-19 18:32:28','/study/101/21735 - 눈덩이 굴리기/code/388',0),(140,'46081043','55572165',1,'yjydev님이 21735 - 눈덩이 굴리기문제에 풀이를 등록했습니다.','2022-05-19 18:32:28','/study/101/21735 - 눈덩이 굴리기/code/388',1),(141,'53349284','55572165',1,'yjydev님이 21735 - 눈덩이 굴리기문제에 풀이를 등록했습니다.','2022-05-19 18:32:28','/study/101/21735 - 눈덩이 굴리기/code/388',0);
/*!40000 ALTER TABLE `alert` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `chat`
--

DROP TABLE IF EXISTS `chat`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `chat` (
  `chat_id` bigint NOT NULL AUTO_INCREMENT,
  `chat_message` varchar(200) NOT NULL,
  `chat_write_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `fk_study_id` bigint NOT NULL,
  `fk_user_id` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`chat_id`),
  KEY `fk_chat_study1_idx` (`fk_study_id`) /*!80000 INVISIBLE */,
  KEY `fk_chat_user1_idx` (`fk_user_id`),
  CONSTRAINT `fk_chat_study1` FOREIGN KEY (`fk_study_id`) REFERENCES `study` (`study_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_chat_user1` FOREIGN KEY (`fk_user_id`) REFERENCES `user` (`user_id`) ON DELETE SET NULL ON UPDATE SET NULL
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `chat`
--

LOCK TABLES `chat` WRITE;
/*!40000 ALTER TABLE `chat` DISABLE KEYS */;
INSERT INTO `chat` VALUES (1,'안녕하세요~','2022-05-19 09:27:31',101,'55572165'),(2,'금요일에 바빠서 이번 주 문제 먼저 다 풀어 놓을게요','2022-05-19 09:27:56',101,'105216426'),(3,'미리보기 금지에요 ㅡㅡ','2022-05-19 09:28:02',101,'105216426'),(4,'안녕하세요!!','2022-05-19 09:28:05',101,'46081043'),(5,'안녕하세어어어어어~','2022-05-19 09:28:31',101,'53349284'),(6,'저 취업하고 싶어요','2022-05-19 09:28:37',101,'53349284'),(7,'알고리즘 공부하러 가시죠','2022-05-19 09:28:47',101,'46081043'),(8,'대신 해주세요','2022-05-19 09:28:53',101,'53349284'),(10,'지영님 이번주 코드 올려주세요!','2022-05-19 16:10:51',101,'46081043'),(11,'많이 밀리셨습니다','2022-05-19 16:10:55',101,'46081043'),(12,'곧 올리겠습니다...','2022-05-19 16:11:14',101,'55572165'),(13,'내일 코테 보시는 분 계신가요?','2022-05-19 17:44:42',101,'55572165'),(14,'저 내일 삼성 코테봅니다!','2022-05-19 17:44:44',101,'46081043');
/*!40000 ALTER TABLE `chat` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `code`
--

DROP TABLE IF EXISTS `code`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `code` (
  `code_id` bigint NOT NULL AUTO_INCREMENT,
  `fk_user_id` varchar(30) DEFAULT NULL,
  `fk_problem_id` bigint NOT NULL,
  `code_create_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `code_file_name` varchar(200) NOT NULL,
  `code_sha` varchar(100) DEFAULT NULL,
  `code_content` varchar(16000) NOT NULL,
  PRIMARY KEY (`code_id`),
  KEY `fk_code_user1_idx` (`fk_user_id`),
  KEY `fk_code_problem1_idx` (`fk_problem_id`),
  CONSTRAINT `fk_code_problem1` FOREIGN KEY (`fk_problem_id`) REFERENCES `problem` (`problem_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_code_user1` FOREIGN KEY (`fk_user_id`) REFERENCES `user` (`user_id`) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=389 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `code`
--

LOCK TABLES `code` WRITE;
/*!40000 ALTER TABLE `code` DISABLE KEYS */;
INSERT INTO `code` VALUES (343,'55572165',156,'2022-05-19 09:15:10','s1','83676fee749a432abbb13978d62080b845a4012f','function solution(nums) {\r\n  let sumList = [];\r\n  for (let i = 0; i < nums.length - 2; i++) {\r\n    for (let j = i + 1; j < nums.length - 1; j++) {\r\n      for (let k = j + 1; k < nums.length; k++) {\r\n        sumList.push(nums[i] + nums[j] + nums[k]);\r\n      }\r\n    }\r\n  }\r\n  let cnt = 0;\r\n  for (candidate of sumList) {\r\n    let measure = false;\r\n    for (let i = 2; i <= Math.ceil(Math.sqrt(candidate)); i++) {\r\n      if (candidate % i === 0) {\r\n        measure = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!measure) {\r\n      cnt += 1;\r\n    }\r\n  }\r\n  return cnt;\r\n}\r\n'),(344,'55572165',162,'2022-05-19 16:10:05','yjy_0519_신기한 소수','64873d4ad45fb72f3ede8dc0fcffbbdab6487cf4','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\npublic class _031_b15828 {\r\n	public static void main(String args[]) throws IOException {\r\n		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\r\n		\r\n		int N = Integer.parseInt(bf.readLine());\r\n		Queue<Integer> queue = new LinkedList<Integer>();\r\n		\r\n		while(true) {\r\n			int input = Integer.parseInt(bf.readLine());\r\n			if (input == - 1) break;\r\n			\r\n			if(input != 0 && queue.size() < N) queue.add(input);\r\n			else if(input == 0 && !queue.isEmpty()) queue.poll();\r\n		}\r\n		print_q(queue);\r\n	}\r\n	private static void print_q(Queue<Integer> queue) {\r\n		if(queue.isEmpty()) System.out.printf(\"empty\");\r\n		else\r\n			while(!queue.isEmpty()) System.out.printf(\"%d \", queue.poll());	\r\n		return ;\r\n	}\r\n}\r\n'),(346,'105216426',156,'2022-05-19 09:22:17','_001_b12605','ea33638d65eddedffb5258e50e2a64518ec45857','package algorithm;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\n\r\npublic class _001_b12605 {\r\n\r\n	public static void main(String[] args) throws IOException {\r\n		BufferedReader input = new BufferedReader(new InputStreamReader(System.in));\r\n		int n = Integer.parseInt(input.readLine());\r\n		int idx = 0;\r\n		while(idx++ < n) {\r\n			String st = input.readLine();\r\n			String []tokens = st.split(\" \");\r\n			StringBuilder builder = new StringBuilder();\r\n			builder.append(\"Case #\").append(n).append(\": \");\r\n			for(int i = tokens.length - 1 ; i >= 0 ; i--) {\r\n				builder.append(tokens[i]).append(\" \");\r\n			}\r\n			System.out.println(builder.toString());\r\n		}\r\n	}\r\n}\r\n'),(347,'46081043',162,'2022-05-19 09:27:52','신기한소수_지순','72ede1de44233c0b4b0fa133b6e88069908961e5','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.Scanner;\r\n\r\npublic class _008_b2023 {\r\n	public static void main(String[] args) throws IOException {\r\n		Scanner sc = new Scanner(System.in);\r\n		int N = sc.nextInt();\r\n		DFS(0, 0, N);\r\n	}\r\n	private static void DFS(int buffer, int count, int size) {\r\n		if(count == size) {\r\n			System.out.println(buffer);\r\n			return;\r\n		}\r\n		\r\n		int idx = 1;\r\n		if (count == 0) idx=2;\r\n		\r\n		\r\n		buffer *= 10;\r\n				\r\n		loop:\r\n		while (idx < 10) {\r\n			buffer += idx;\r\n			for(int i = 2; i<buffer;i++) {\r\n				if(buffer % i == 0) {\r\n					buffer -= idx;\r\n					idx++;\r\n					continue loop;\r\n				}\r\n			}\r\n			DFS(buffer, count+1, size);\r\n			buffer -= idx;\r\n			idx++;\r\n		}\r\n	}\r\n}\r\n'),(348,'105216426',157,'2022-05-19 09:22:35','_002_b1158','c16756d9fd0376ef991c562196fa6c8053b6af5f','package algorithm;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.util.StringTokenizer;\r\n\r\npublic class _002_b1158 {\r\n\r\n	public static void main(String[] args) throws IOException {\r\n		BufferedReader input = new BufferedReader(new InputStreamReader(System.in));\r\n		StringTokenizer token = new StringTokenizer(input.readLine(), \" \");\r\n		StringBuilder result = new StringBuilder();\r\n		result.append(\"<\");\r\n\r\n		int N = Integer.parseInt(token.nextToken());\r\n		int K = Integer.parseInt(token.nextToken());\r\n		\r\n		int[] nums = new int[N];\r\n		\r\n		for(int idx = 0; idx< N; idx++) {\r\n			nums[idx] = idx + 1;\r\n		}\r\n		int idx = 0;\r\n		int length = N;\r\n		while (length > 0) {\r\n			idx = (idx + K - 1) % length;\r\n			result.append(nums[idx]).append(\", \");\r\n			for(int i = idx; i < length - 1; i++) {\r\n				nums[i] = nums[i+1];\r\n			}\r\n			length--;\r\n		}\r\n		result.setLength(result.length()-2);\r\n		result.append(\">\");\r\n		System.out.println(result.toString());\r\n	}\r\n}\r\n'),(349,'105216426',158,'2022-05-19 09:22:49','_003_b10773','fda99fa803f39d606a3d4ae7834bdb3d4b3d7887','package algorithm;\r\n\r\nimport java.io.IOException;\r\nimport java.util.Scanner;\r\n\r\npublic class _003_b10773 {\r\n	public static void main(String[] args) throws IOException {\r\n		Scanner sc = new Scanner(System.in);\r\n		int K = sc.nextInt();\r\n		int idx = 0;\r\n		int[] result = new int[K];\r\n		for (int i = 0; i< K; i++) {\r\n			int num = sc.nextInt();\r\n			if (num != 0) {\r\n				result[idx++] = num;\r\n			}\r\n			else {\r\n				result[--idx] = 0;\r\n			}\r\n		}\r\n		if (idx == 0) {\r\n			System.out.println(idx);\r\n		}\r\n		else {\r\n			int answer = 0;\r\n			for (int j = 0; j < idx; j++) {\r\n				answer += result[j];\r\n			}\r\n			System.out.println(answer);\r\n		}\r\n	}\r\n}\r\n'),(350,'46081043',156,'2022-05-19 09:22:59','단어순서뒤집기_지순','ea33638d65eddedffb5258e50e2a64518ec45857','package algorithm;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\n\r\npublic class _001_b12605 {\r\n\r\n	public static void main(String[] args) throws IOException {\r\n		BufferedReader input = new BufferedReader(new InputStreamReader(System.in));\r\n		int n = Integer.parseInt(input.readLine());\r\n		int idx = 0;\r\n		while(idx++ < n) {\r\n			String st = input.readLine();\r\n			String []tokens = st.split(\" \");\r\n			StringBuilder builder = new StringBuilder();\r\n			builder.append(\"Case #\").append(n).append(\": \");\r\n			for(int i = tokens.length - 1 ; i >= 0 ; i--) {\r\n				builder.append(tokens[i]).append(\" \");\r\n			}\r\n			System.out.println(builder.toString());\r\n		}\r\n	}\r\n}\r\n'),(352,'46081043',157,'2022-05-19 09:23:22','요새푸스문제_지순','c16756d9fd0376ef991c562196fa6c8053b6af5f','package algorithm;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.util.StringTokenizer;\r\n\r\npublic class _002_b1158 {\r\n\r\n	public static void main(String[] args) throws IOException {\r\n		BufferedReader input = new BufferedReader(new InputStreamReader(System.in));\r\n		StringTokenizer token = new StringTokenizer(input.readLine(), \" \");\r\n		StringBuilder result = new StringBuilder();\r\n		result.append(\"<\");\r\n\r\n		int N = Integer.parseInt(token.nextToken());\r\n		int K = Integer.parseInt(token.nextToken());\r\n		\r\n		int[] nums = new int[N];\r\n		\r\n		for(int idx = 0; idx< N; idx++) {\r\n			nums[idx] = idx + 1;\r\n		}\r\n		int idx = 0;\r\n		int length = N;\r\n		while (length > 0) {\r\n			idx = (idx + K - 1) % length;\r\n			result.append(nums[idx]).append(\", \");\r\n			for(int i = idx; i < length - 1; i++) {\r\n				nums[i] = nums[i+1];\r\n			}\r\n			length--;\r\n		}\r\n		result.setLength(result.length()-2);\r\n		result.append(\">\");\r\n		System.out.println(result.toString());\r\n	}\r\n}\r\n'),(353,'53349284',162,'2022-05-19 09:23:24','단어순서뒤집기_서하','ea33638d65eddedffb5258e50e2a64518ec45857','package algorithm;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\n\r\npublic class _001_b12605 {\r\n\r\n	public static void main(String[] args) throws IOException {\r\n		BufferedReader input = new BufferedReader(new InputStreamReader(System.in));\r\n		int n = Integer.parseInt(input.readLine());\r\n		int idx = 0;\r\n		while(idx++ < n) {\r\n			String st = input.readLine();\r\n			String []tokens = st.split(\" \");\r\n			StringBuilder builder = new StringBuilder();\r\n			builder.append(\"Case #\").append(n).append(\": \");\r\n			for(int i = tokens.length - 1 ; i >= 0 ; i--) {\r\n				builder.append(tokens[i]).append(\" \");\r\n			}\r\n			System.out.println(builder.toString());\r\n		}\r\n	}\r\n}\r\n'),(354,'105216426',159,'2022-05-19 09:23:33','_004_b2164','55503ff00a90a72ee4d0dfb2a623a2c57fc7f221','package algorithm;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.util.LinkedList;\r\nimport java.util.Queue;\r\n\r\npublic class _004_b2164 {\r\n	public static void main(String arg[]) throws IOException {\r\n		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n		int num = Integer.parseInt(br.readLine());\r\n		Queue<Integer> q = new LinkedList<>();\r\n		\r\n		for(int i = 1; i<=num; i++) q.add(i);\r\n		\r\n		while(q.size() != 1) {\r\n			q.poll();\r\n			q.offer(q.poll());\r\n		}\r\n		\r\n		System.out.println(q.poll());\r\n	}\r\n}\r\n'),(355,'46081043',158,'2022-05-19 09:23:39','제로_지순','fda99fa803f39d606a3d4ae7834bdb3d4b3d7887','package algorithm;\r\n\r\nimport java.io.IOException;\r\nimport java.util.Scanner;\r\n\r\npublic class _003_b10773 {\r\n	public static void main(String[] args) throws IOException {\r\n		Scanner sc = new Scanner(System.in);\r\n		int K = sc.nextInt();\r\n		int idx = 0;\r\n		int[] result = new int[K];\r\n		for (int i = 0; i< K; i++) {\r\n			int num = sc.nextInt();\r\n			if (num != 0) {\r\n				result[idx++] = num;\r\n			}\r\n			else {\r\n				result[--idx] = 0;\r\n			}\r\n		}\r\n		if (idx == 0) {\r\n			System.out.println(idx);\r\n		}\r\n		else {\r\n			int answer = 0;\r\n			for (int j = 0; j < idx; j++) {\r\n				answer += result[j];\r\n			}\r\n			System.out.println(answer);\r\n		}\r\n	}\r\n}\r\n'),(356,'105216426',160,'2022-05-19 09:23:47','_005_b12034','474bcd01afc113870ac9ce8522b96ec94c893a1e','package algorithm;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.util.StringTokenizer;\r\n\r\npublic class _005_b12034 {\r\n	public static void main (String arg[]) throws IOException{\r\n		BufferedReader input = new BufferedReader(new InputStreamReader(System.in));\r\n		int T = Integer.parseInt(input.readLine());\r\n		\r\n		long start = System.currentTimeMillis();\r\n		for(int i=0;i<T;i++) {\r\n			int N = Integer.parseInt(input.readLine());\r\n			double[] price = new double[N*2];\r\n			double[] result = new double[N];\r\n			StringTokenizer token = new StringTokenizer(input.readLine(), \" \");\r\n			\r\n			for(int j=0;j<N*2;j++) {				\r\n				price[j] = Integer.parseInt(token.nextToken());			\r\n			}\r\n			int idx = 0;\r\n			loop:\r\n			for(int j=0;j<N*2;j++) {\r\n				if(price[j] == -100) continue;\r\n				for(int k=j+1;k<N*2;k++) {\r\n					if(price[k] == -100) continue;\r\n					if(price[j] * 4/3 == price[k]) {\r\n						result[idx++] = price[j];\r\n						price[k] = -10;\r\n						if(idx >= N) break loop;\r\n						break;\r\n					}\r\n				}\r\n			}\r\n\r\n\r\n			StringBuilder b = new StringBuilder();\r\n			b.append(\"Case #\").append(i+1).append(\": \");\r\n			for(int u=0;u<result.length;u++) {\r\n				b.append(Math.round(result[u])).append(\" \");\r\n			}\r\n			System.out.println(b.toString());\r\n		}\r\n		long end = System.currentTimeMillis();\r\n		System.out.println(\"SDB���� ������������ ����ð� : \" + (end - start)/1000.0);\r\n	}\r\n}\r\n'),(357,'46081043',159,'2022-05-19 09:24:07','카드2_지순','55503ff00a90a72ee4d0dfb2a623a2c57fc7f221','package algorithm;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.util.LinkedList;\r\nimport java.util.Queue;\r\n\r\npublic class _004_b2164 {\r\n	public static void main(String arg[]) throws IOException {\r\n		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n		int num = Integer.parseInt(br.readLine());\r\n		Queue<Integer> q = new LinkedList<>();\r\n		\r\n		for(int i = 1; i<=num; i++) q.add(i);\r\n		\r\n		while(q.size() != 1) {\r\n			q.poll();\r\n			q.offer(q.poll());\r\n		}\r\n		\r\n		System.out.println(q.poll());\r\n	}\r\n}\r\n'),(358,'46081043',160,'2022-05-19 09:24:31','김인천씨의식료품가게_지순','474bcd01afc113870ac9ce8522b96ec94c893a1e','package algorithm;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.util.StringTokenizer;\r\n\r\npublic class _005_b12034 {\r\n	public static void main (String arg[]) throws IOException{\r\n		BufferedReader input = new BufferedReader(new InputStreamReader(System.in));\r\n		int T = Integer.parseInt(input.readLine());\r\n		\r\n		long start = System.currentTimeMillis();\r\n		for(int i=0;i<T;i++) {\r\n			int N = Integer.parseInt(input.readLine());\r\n			double[] price = new double[N*2];\r\n			double[] result = new double[N];\r\n			StringTokenizer token = new StringTokenizer(input.readLine(), \" \");\r\n			\r\n			for(int j=0;j<N*2;j++) {				\r\n				price[j] = Integer.parseInt(token.nextToken());			\r\n			}\r\n			int idx = 0;\r\n			loop:\r\n			for(int j=0;j<N*2;j++) {\r\n				if(price[j] == -100) continue;\r\n				for(int k=j+1;k<N*2;k++) {\r\n					if(price[k] == -100) continue;\r\n					if(price[j] * 4/3 == price[k]) {\r\n						result[idx++] = price[j];\r\n						price[k] = -10;\r\n						if(idx >= N) break loop;\r\n						break;\r\n					}\r\n				}\r\n			}\r\n\r\n\r\n			StringBuilder b = new StringBuilder();\r\n			b.append(\"Case #\").append(i+1).append(\": \");\r\n			for(int u=0;u<result.length;u++) {\r\n				b.append(Math.round(result[u])).append(\" \");\r\n			}\r\n			System.out.println(b.toString());\r\n		}\r\n		long end = System.currentTimeMillis();\r\n		System.out.println(\"SDB���� ������������ ����ð� : \" + (end - start)/1000.0);\r\n	}\r\n}\r\n'),(359,'105216426',161,'2022-05-19 09:25:00','_007_b2644','b5532fea08208b517a300290f1687f1eff8c70cd','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.StringTokenizer;\r\n\r\npublic class _007_b2644 {\r\n	static int result = -1;\r\n	static byte[] visited;\r\n	static int[][] matrix;\r\n	private static void DFS(int s, int d, int count, int size) {\r\n		if(s == d) {\r\n			result = count;\r\n			return;\r\n		}\r\n		\r\n		visited[s] = 1;\r\n		for(int i = 1; i<size; i++) {\r\n			if (matrix[s][i] == 1 && visited[i] == 0) {\r\n				DFS(i, d, count+1, size);\r\n			}\r\n		}\r\n	}\r\n	public static void main(String args[]) throws IOException {\r\n		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n		StringTokenizer st = new StringTokenizer(br.readLine()); // ã�ƾ� �ϴ� ��� �Է�\r\n		\r\n		int n = Integer.parseInt(st.nextToken()); // ��� �� �Է�\r\n		visited = new byte[n+1];\r\n		matrix = new int[n+1][n+1];\r\n		\r\n		st = new StringTokenizer(br.readLine()); // �̼� ����� ��� �Է�\r\n		int s = Integer.parseInt(st.nextToken());\r\n		int d = Integer.parseInt(st.nextToken());\r\n		\r\n		st = new StringTokenizer(br.readLine()); // �̼� ���� ���� �Է�\r\n		int m = Integer.parseInt(st.nextToken());\r\n		\r\n		// ������� ����\r\n		while(m-- > 0) {\r\n			st = new StringTokenizer(br.readLine());\r\n			int[] buffer = {Integer.parseInt(st.nextToken()), Integer.parseInt(st.nextToken())};\r\n			matrix[buffer[0]][buffer[1]] = 1;\r\n			matrix[buffer[1]][buffer[0]] = 1;\r\n		}\r\n		DFS(s, d, 0, n+1);\r\n		System.out.println(result);\r\n	}\r\n}\r\n'),(361,'53349284',156,'2022-05-19 09:25:58','_033_b7576','be16097e6b6f3a5346a07d4e817b0fb3de0d630a','package algorithm;\r\n\r\nimport java.util.*;\r\nimport java.io.*;\r\n\r\npublic class _033_b7576 {\r\n	\r\n	static final int RIPE = 1;\r\n	static final int UNRIPE = 0;\r\n	static final int EMPTY = -1;\r\n	static int[] delta_row = {-1, 1, 0, 0};\r\n	static int[] delta_col = {0, 0, -1, 1};\r\n	\r\n	public static void main(String args[]) throws IOException {\r\n		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\r\n		\r\n		String[] tmp = bf.readLine().split(\" \");\r\n		int ROW = Integer.parseInt(tmp[1]);\r\n		int COL = Integer.parseInt(tmp[0]);\r\n		int tomato_cnt = ROW * COL;\r\n		\r\n		int[][] box = new int[ROW][COL];\r\n		Queue<int[]> queue = new LinkedList<int[]>();\r\n		for(int r=0; r<ROW; r++) {\r\n			tmp = bf.readLine().split(\" \");\r\n			for(int c=0; c<COL; c++) {\r\n				box[r][c] = Integer.parseInt(tmp[c]);\r\n				if(box[r][c] == RIPE) queue.add(new int[] {r, c});\r\n				if(box[r][c] == EMPTY) tomato_cnt--;\r\n			}\r\n		}\r\n		\r\n		System.out.println(BFS(box, queue, tomato_cnt));\r\n	}\r\n	private static int BFS(int[][] box, Queue<int[]> queue, int tomato_cnt) {\r\n		\r\n		int turn = 0;\r\n		int cnt = queue.size();\r\n		\r\n		while(!queue.isEmpty()) {\r\n			int size = queue.size();\r\n			for(int idx=0; idx<size; idx++) {\r\n				int[] tmp = queue.poll();\r\n				int row = tmp[0];\r\n				int col = tmp[1];\r\n				\r\n				for(int i=0; i<4; i++) {\r\n					int nxt_row = row + delta_row[i];\r\n					int nxt_col = col + delta_col[i];\r\n					if(0 <= nxt_row && nxt_row < box.length && 0 <= nxt_col && nxt_col < box[row].length) {\r\n						if(box[nxt_row][nxt_col] == 0) {\r\n							queue.add(new int[] {nxt_row, nxt_col});\r\n							box[nxt_row][nxt_col] = 1;\r\n							cnt++;\r\n						}\r\n					}\r\n				}\r\n			}\r\n			turn++;\r\n		}\r\n		return cnt == tomato_cnt ? turn-1:-1;\r\n	}\r\n}\r\n '),(362,'105216426',162,'2022-05-19 09:26:11','_008_b2023','72ede1de44233c0b4b0fa133b6e88069908961e5','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.Scanner;\r\n\r\npublic class _008_b2023 {\r\n	public static void main(String[] args) throws IOException {\r\n		Scanner sc = new Scanner(System.in);\r\n		int N = sc.nextInt();\r\n		DFS(0, 0, N);\r\n	}\r\n	private static void DFS(int buffer, int count, int size) {\r\n		if(count == size) {\r\n			System.out.println(buffer);\r\n			return;\r\n		}\r\n		\r\n		int idx = 1;\r\n		if (count == 0) idx=2;\r\n		\r\n		\r\n		buffer *= 10;\r\n				\r\n		loop:\r\n		while (idx < 10) {\r\n			buffer += idx;\r\n			for(int i = 2; i<buffer;i++) {\r\n				if(buffer % i == 0) {\r\n					buffer -= idx;\r\n					idx++;\r\n					continue loop;\r\n				}\r\n			}\r\n			DFS(buffer, count+1, size);\r\n			buffer -= idx;\r\n			idx++;\r\n		}\r\n	}\r\n}\r\n'),(363,'105216426',163,'2022-05-19 09:26:29','_009_b1388','8ff6dbf10cc56a53fc4393c6fa3e738e8f6440f5','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.Stack;\r\nimport java.util.StringTokenizer;\r\n\r\npublic class _009_b1388 {\r\n	private static int check(int row, int col, char[][] tile, char target) {\r\n		int count = 0;\r\n		Stack<Character> stack = new Stack<Character>();\r\n		\r\n		if (target == \'|\') {\r\n			for(int j=0; j<col; j++) {\r\n				char flag = \'+\';\r\n				for(int i=0; i<row; i++) {\r\n					if(flag != tile[i][j] && target == tile[i][j]) {\r\n						count++;\r\n					}\r\n					flag = tile[i][j];\r\n				}\r\n			}\r\n		}\r\n		else {\r\n			for(int i=0; i<row; i++) {\r\n				char flag = \'+\';\r\n				for(int j=0; j<col; j++) {\r\n					if(flag != tile[i][j] && target == tile[i][j]) {\r\n						count++;\r\n					}\r\n					flag = tile[i][j];\r\n				}\r\n			}\r\n		}\r\n\r\n		return count;\r\n	}\r\n	public static void main (String args[]) throws IOException {\r\n		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\r\n		StringTokenizer st = new StringTokenizer(bf.readLine());\r\n		int N = Integer.parseInt(st.nextToken());\r\n		int M = Integer.parseInt(st.nextToken());\r\n		char[][] tile = new char[N][M];\r\n		for(int i=0; i<N; i++) {\r\n			String tmp = bf.readLine();\r\n			for(int j=0; j<M; j++) {\r\n				tile[i][j] = tmp.charAt(j);\r\n			}\r\n		}\r\n		System.out.println(check(N, M, tile, \'-\') + check(N, M, tile, \'|\'));\r\n	}\r\n}\r\n'),(364,'53349284',157,'2022-05-19 09:26:45','요새푸스 문제_서하','c16756d9fd0376ef991c562196fa6c8053b6af5f','package algorithm;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.util.StringTokenizer;\r\n\r\npublic class _002_b1158 {\r\n\r\n	public static void main(String[] args) throws IOException {\r\n		BufferedReader input = new BufferedReader(new InputStreamReader(System.in));\r\n		StringTokenizer token = new StringTokenizer(input.readLine(), \" \");\r\n		StringBuilder result = new StringBuilder();\r\n		result.append(\"<\");\r\n\r\n		int N = Integer.parseInt(token.nextToken());\r\n		int K = Integer.parseInt(token.nextToken());\r\n		\r\n		int[] nums = new int[N];\r\n		\r\n		for(int idx = 0; idx< N; idx++) {\r\n			nums[idx] = idx + 1;\r\n		}\r\n		int idx = 0;\r\n		int length = N;\r\n		while (length > 0) {\r\n			idx = (idx + K - 1) % length;\r\n			result.append(nums[idx]).append(\", \");\r\n			for(int i = idx; i < length - 1; i++) {\r\n				nums[i] = nums[i+1];\r\n			}\r\n			length--;\r\n		}\r\n		result.setLength(result.length()-2);\r\n		result.append(\">\");\r\n		System.out.println(result.toString());\r\n	}\r\n}\r\n'),(365,'105216426',164,'2022-05-19 09:26:55','_010_b2583','ac0eef9926aefe045df6261eaf274f55c8c03893','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\npublic class _010_b2583 {\r\n	static int[][] matrix;\r\n	static int[][] visited;\r\n	static int count;\r\n	static ArrayList<Integer> result = new ArrayList<Integer>();\r\n	\r\n	static int[] delta_row = {-1, 1, 0, 0};\r\n	static int[] delta_col = {0, 0, -1, 1};\r\n	\r\n	private static void check(int row, int col, int M, int N) {\r\n		visited[row][col] = 1;\r\n		count++;\r\n		for(int i=0;i<4;i++) {\r\n			int nxt_row = row + delta_row[i];\r\n			int nxt_col = col + delta_col[i];\r\n			if (0 <= nxt_row && nxt_row < M && 0 <= nxt_col && nxt_col < N) {\r\n				if(visited[nxt_row][nxt_col] == 0 && matrix[nxt_row][nxt_col] == 0) {\r\n					check(nxt_row, nxt_col, M, N);\r\n				}\r\n			}\r\n		}\r\n	}\r\n	\r\n	public static void main (String args[]) throws IOException {\r\n		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\r\n		StringTokenizer st = new StringTokenizer(bf.readLine());\r\n		\r\n		int M = Integer.parseInt(st.nextToken());\r\n		int N = Integer.parseInt(st.nextToken());\r\n		int K = Integer.parseInt(st.nextToken());\r\n		\r\n		matrix = new int[M][N];\r\n		visited = new int[M][N];		\r\n		for(int i=0; i<K; i++) {\r\n			st = new StringTokenizer(bf.readLine());\r\n			int cs = Integer.parseInt(st.nextToken());\r\n			int rs = Integer.parseInt(st.nextToken());\r\n			int ce = Integer.parseInt(st.nextToken());\r\n			int re = Integer.parseInt(st.nextToken());\r\n			\r\n			for(int row = rs; row< re; row++) {\r\n				for(int col = cs; col<ce; col++) {\r\n					matrix[M-row-1][col] = 1;\r\n				}\r\n			}\r\n		}\r\n		for(int i=0; i<M; i++) {\r\n			for(int j=0; j<N; j++) {\r\n				if(matrix[i][j] == 0 && visited[i][j] == 0) check(i, j, M, N);\r\n				if (count != 0)	result.add(count);\r\n				count = 0;\r\n			}\r\n		}\r\n		System.out.printf(\"%d\\n\", result.size());\r\n		int[] array = new int[result.size()];\r\n		for(int i=0;i<result.size();i++) {\r\n			array[i] = result.get(i);\r\n		}\r\n		Arrays.sort(array);\r\n		for(int i=0;i<result.size();i++) {\r\n			System.out.printf(\"%d \", array[i]);\r\n		}\r\n	}\r\n}\r\n'),(366,'105216426',165,'2022-05-19 09:27:07','_012_b2667','2ffc1a2b50c85c1158cb60fb00b9014d93882d4c','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\npublic class _012_b2667 {\r\n	static int[][] matrix;\r\n	static int[][] visited;\r\n	\r\n	static int[] delta_row = {-1, 1, 0, 0};\r\n	static int[] delta_col = {0, 0, -1, 1};\r\n	\r\n	public static void main(String args[]) throws IOException {\r\n		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\r\n		\r\n		int N = Integer.parseInt(bf.readLine());\r\n		ArrayList<Integer> result = new ArrayList<Integer>(1);\r\n		\r\n		matrix = new int[N][N];\r\n		visited = new int[N][N];\r\n		\r\n		for(int i=0; i<N; i++) {\r\n			String str = bf.readLine();\r\n			for(int j=0; j<N; j++) {\r\n				matrix[i][j] = Character.getNumericValue(str.charAt(j));\r\n			}\r\n		}\r\n		for(int i=0; i<N; i++) {\r\n			for(int j=0; j<N; j++) {\r\n				int tmp = 0;\r\n				if(matrix[i][j] == 1 && visited[i][j] == 0) tmp = check(i, j, N);\r\n				if(tmp != 0)\r\n					result.add(tmp);\r\n			}\r\n		}\r\n		result.sort(null);\r\n		System.out.println(result.size());\r\n		for(int i=0; i<result.size(); i++) {\r\n			System.out.println(result.get(i));\r\n		}\r\n	}\r\n	\r\n	private static int check(int row, int col, int size) {\r\n		int result = 1;\r\n		visited[row][col] = 1;\r\n		for(int i=0; i<4; i++) {\r\n			int nxt_row = row + delta_row[i];\r\n			int nxt_col = col + delta_col[i];\r\n			if(0 <= nxt_row && nxt_row < size && 0 <= nxt_col && nxt_col < size) {\r\n				if(matrix[nxt_row][nxt_col] == 1 && visited[nxt_row][nxt_col] == 0) {\r\n					result += check(nxt_row, nxt_col, size);	\r\n				}\r\n			}\r\n		}\r\n		return result;\r\n	}\r\n}\r\n'),(367,'46081043',161,'2022-05-19 09:27:15','촌수계산_지순','b5532fea08208b517a300290f1687f1eff8c70cd','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.StringTokenizer;\r\n\r\npublic class _007_b2644 {\r\n	static int result = -1;\r\n	static byte[] visited;\r\n	static int[][] matrix;\r\n	private static void DFS(int s, int d, int count, int size) {\r\n		if(s == d) {\r\n			result = count;\r\n			return;\r\n		}\r\n		\r\n		visited[s] = 1;\r\n		for(int i = 1; i<size; i++) {\r\n			if (matrix[s][i] == 1 && visited[i] == 0) {\r\n				DFS(i, d, count+1, size);\r\n			}\r\n		}\r\n	}\r\n	public static void main(String args[]) throws IOException {\r\n		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n		StringTokenizer st = new StringTokenizer(br.readLine()); // ã�ƾ� �ϴ� ��� �Է�\r\n		\r\n		int n = Integer.parseInt(st.nextToken()); // ��� �� �Է�\r\n		visited = new byte[n+1];\r\n		matrix = new int[n+1][n+1];\r\n		\r\n		st = new StringTokenizer(br.readLine()); // �̼� ����� ��� �Է�\r\n		int s = Integer.parseInt(st.nextToken());\r\n		int d = Integer.parseInt(st.nextToken());\r\n		\r\n		st = new StringTokenizer(br.readLine()); // �̼� ���� ���� �Է�\r\n		int m = Integer.parseInt(st.nextToken());\r\n		\r\n		// ������� ����\r\n		while(m-- > 0) {\r\n			st = new StringTokenizer(br.readLine());\r\n			int[] buffer = {Integer.parseInt(st.nextToken()), Integer.parseInt(st.nextToken())};\r\n			matrix[buffer[0]][buffer[1]] = 1;\r\n			matrix[buffer[1]][buffer[0]] = 1;\r\n		}\r\n		DFS(s, d, 0, n+1);\r\n		System.out.println(result);\r\n	}\r\n}\r\n'),(368,'53349284',158,'2022-05-19 09:27:18','제로','fda99fa803f39d606a3d4ae7834bdb3d4b3d7887','package algorithm;\r\n\r\nimport java.io.IOException;\r\nimport java.util.Scanner;\r\n\r\npublic class _003_b10773 {\r\n	public static void main(String[] args) throws IOException {\r\n		Scanner sc = new Scanner(System.in);\r\n		int K = sc.nextInt();\r\n		int idx = 0;\r\n		int[] result = new int[K];\r\n		for (int i = 0; i< K; i++) {\r\n			int num = sc.nextInt();\r\n			if (num != 0) {\r\n				result[idx++] = num;\r\n			}\r\n			else {\r\n				result[--idx] = 0;\r\n			}\r\n		}\r\n		if (idx == 0) {\r\n			System.out.println(idx);\r\n		}\r\n		else {\r\n			int answer = 0;\r\n			for (int j = 0; j < idx; j++) {\r\n				answer += result[j];\r\n			}\r\n			System.out.println(answer);\r\n		}\r\n	}\r\n}\r\n'),(369,'105216426',170,'2022-05-19 09:27:21','_017_b6603','8f0590367b76d1c348662a4111d6932df364f190','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\npublic class _017_b6603 {\r\n	public static void main(String args[]) throws IOException {\r\n		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\r\n		while(true) {\r\n			StringTokenizer st = new StringTokenizer(bf.readLine());\r\n			int k = Integer.parseInt(st.nextToken());\r\n			if(k == 0) break;\r\n			\r\n			int[] arr = new int[k];\r\n			boolean[] visited = new boolean[k];\r\n			for(int i=0; i<k;i++) \r\n				arr[i] = Integer.parseInt(st.nextToken());\r\n			combination(visited, arr, k, 6, 0);\r\n			System.out.println();\r\n		}\r\n	}\r\n	\r\n	private static void combination(boolean[] visited, int[] arr, int n, int r, int start) {\r\n		if(r == 0) {\r\n			for(int i=0; i<n; i++) \r\n				if(visited[i]) \r\n					System.out.printf(\"%d \",arr[i]); \r\n			System.out.println();\r\n		}\r\n		\r\n		for(int i=start; i<n; i++) {\r\n			visited[i] = true;\r\n			combination(visited, arr, n, r-1, i + 1);\r\n			visited[i] = false;\r\n		}\r\n	}\r\n}\r\n'),(370,'105216426',169,'2022-05-19 09:28:33','_016_b10819','21f446e475481429f73f5d64944982c5a2257dce','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\npublic class _016_b10819 {\r\n	static int result = 0;\r\n	public static void main(String args[]) throws IOException {\r\n		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\r\n		\r\n		StringTokenizer st = new StringTokenizer(bf.readLine());\r\n		int N = Integer.parseInt(st.nextToken());\r\n		\r\n		st = new StringTokenizer(bf.readLine());\r\n		int[] arr = new int[N];\r\n		for(int i=0; i<N; i++) {\r\n			arr[i] = Integer.parseInt(st.nextToken());\r\n		}\r\n		permutation(arr, 0, N, N);		\r\n		System.out.println(result);\r\n	}\r\n	\r\n	private static void permutation(int[] arr, int idx, int n, int r){\r\n		int tmp = 0;\r\n		\r\n		if(idx == r) {\r\n			cal(arr);\r\n		}\r\n		\r\n		for(int i=idx; i<n; i++) {	\r\n			swap(arr, idx, i);\r\n			permutation(arr, idx+1, n, r);\r\n			swap(arr, idx, i);\r\n		}\r\n	}\r\n	private static void swap(int arr[], int idx, int i) {\r\n		int tmp = arr[idx];\r\n		arr[idx] = arr[i];\r\n		arr[i] = tmp;\r\n	}\r\n	private static void cal(int arr[]) {\r\n		int sum = 0;\r\n		for(int i=0; i<arr.length-1;i++) sum += Math.abs(arr[i] - arr[i+1]);\r\n		if(sum > result) result = sum;\r\n	}\r\n}\r\n'),(371,'105216426',168,'2022-05-19 09:28:48','_015_b1759','41a35956373a908f435fd48916402637006fbea6','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\npublic class _015_b1759 {\r\n	static char[] alpha;\r\n	static ArrayList<String> codes = new ArrayList<String>();\r\n	public static void main(String args[]) throws IOException {\r\n		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\r\n		StringTokenizer st = new StringTokenizer(bf.readLine());\r\n		\r\n		int L = Integer.parseInt(st.nextToken());\r\n		int C = Integer.parseInt(st.nextToken());\r\n		alpha = new char[C];\r\n		st = new StringTokenizer(bf.readLine());\r\n		for(int i=0; i<C; i++) alpha[i] = st.nextToken().charAt(0);\r\n		\r\n		boolean[] visited = new boolean[C];\r\n		combination(visited, C, L, 0, L);\r\n		\r\n		codes.sort(null);\r\n		for(int i=0; i<codes.size(); i++) System.out.println(codes.get(i));\r\n	}\r\n	\r\n	private static void combination(boolean[] visited, int n, int r, int start, int l) {\r\n		if(r == 0) {\r\n			check(visited, n, l, 0);\r\n			return;\r\n		}\r\n		\r\n		for(int i=start; i<n; i++) {\r\n			visited[i] = true;\r\n			combination(visited, n, r-1, i+1, l);\r\n			visited[i] = false;\r\n		}\r\n	}\r\n	\r\n	private static void check(boolean[] visited, int n, int l, int v_idx) {\r\n		char[] code = new char[l];\r\n		int idx = 0;\r\n		int	con_cnt = 0;\r\n		int vo_cnt = 0;\r\n		while(idx < l) {\r\n			if(visited[v_idx]) {\r\n				code[idx] = alpha[v_idx];\r\n				if(alpha[v_idx] == \'a\' || \r\n					alpha[v_idx] == \'e\' || \r\n					alpha[v_idx] == \'i\' || \r\n					alpha[v_idx] == \'o\' || \r\n					alpha[v_idx] == \'u\') vo_cnt++;\r\n				else con_cnt++;\r\n				idx++;\r\n			}\r\n			v_idx++;\r\n		}\r\n		Arrays.sort(code);\r\n		if(vo_cnt > 0 && con_cnt > 1) codes.add(new String(code));\r\n	}\r\n}\r\n'),(372,'105216426',167,'2022-05-19 09:29:01','_014_b14889','04247a74f9ec8e242b62c7434df42d7ccdcb6c72','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\npublic class _014_b14889 {\r\n	static int[][] matrix;\r\n	static int result;\r\n\r\n	public static void main(String args[]) throws IOException {\r\n		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\r\n		StringTokenizer st = new StringTokenizer(bf.readLine());\r\n		\r\n		int N = Integer.parseInt(st.nextToken());\r\n		\r\n		matrix = new int[N][N];\r\n		result = 200;\r\n		\r\n		for(int i=0; i<N; i++) {\r\n			st = new StringTokenizer(bf.readLine());\r\n			for(int j=0; j<N; j++) {\r\n				matrix[i][j] = Integer.parseInt(st.nextToken());\r\n			}\r\n		}\r\n		\r\n		int cnt = combination_count(N, N/2);\r\n		\r\n		boolean[] visited = new boolean[N];\r\n		combination(visited, N, N/2, 0);\r\n		System.out.println(result);\r\n	}\r\n	private static int combination_count(int n, int r) {\r\n		if(n == r || r == 0) return 1;\r\n		else return combination_count(n - 1, r - 1) + combination_count(n - 1, r);\r\n	}\r\n	private static void combination(boolean[] visited, int n, int r, int start) {\r\n		if(r == 0) {\r\n			ArrayList<Integer> set_true = new ArrayList<Integer>(n/2);\r\n			ArrayList<Integer> set_false = new ArrayList<Integer>(n/2);\r\n			for(int i= 0; i<n; i++) {\r\n				if (visited[i]) set_true.add(i);\r\n				else set_false.add(i);\r\n			}\r\n			\r\n			int tmp = Math.abs(member(set_true) - member(set_false));\r\n			result = result > tmp ? tmp : result;\r\n		}\r\n		\r\n		for(int i=start; i<n; i++) {\r\n			visited[i] = true;\r\n			combination(visited, n, r-1, i+1);\r\n			visited[i] = false;\r\n		}\r\n	}\r\n	private static int member(ArrayList<Integer> people) {\r\n		int sum = 0;\r\n		int[] player_set = new int[2];\r\n		boolean[] visited = new boolean[people.size()];\r\n		\r\n		for(int i=0; i< people.size(); i++) {\r\n			player_set[0] = people.get(i);\r\n			for(int j=i+1; j<people.size(); j++) {\r\n				player_set[1] = people.get(j);\r\n				sum += matrix[player_set[0]][player_set[1]] + matrix[player_set[1]][player_set[0]];\r\n			}\r\n		}\r\n		return sum;\r\n	}\r\n}\r\n\r\n'),(373,'105216426',166,'2022-05-19 09:29:15','_013_b21735','c446416116b7924a30b24220485f83d37d7128aa','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\npublic class _013_b21735 {\r\n	static int[] yard;\r\n	static int result = -1;\r\n	public static void main(String args[]) throws IOException {\r\n		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\r\n		StringTokenizer st = new StringTokenizer(bf.readLine());\r\n		int N = Integer.parseInt(st.nextToken());\r\n		int M = Integer.parseInt(st.nextToken());\r\n		\r\n		yard = new int[N+1];\r\n		st = new StringTokenizer(bf.readLine());\r\n		for(int i=1; i<N+1; i++) {\r\n			yard[i] = Integer.parseInt(st.nextToken());\r\n		}\r\n		\r\n		make_ball(0, 0, M, 1);\r\n		System.out.println(result);\r\n		\r\n	}\r\n	\r\n	private static void make_ball(int idx, int cnt, int M, int size) {\r\n		if(cnt > M) return;\r\n		\r\n		if(cnt <= M) {\r\n			if (result < size) result = size;\r\n		}\r\n		\r\n		if(idx+1 < yard.length) make_ball(idx+1, cnt+1, M, size + yard[idx+1]);\r\n		if(idx+2 < yard.length) make_ball(idx+2, cnt+1, M, size/2 + yard[idx+2]);\r\n	}\r\n}\r\n'),(374,'46081043',163,'2022-05-19 09:29:19','바닥장식_지순','8ff6dbf10cc56a53fc4393c6fa3e738e8f6440f5','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.Stack;\r\nimport java.util.StringTokenizer;\r\n\r\npublic class _009_b1388 {\r\n	private static int check(int row, int col, char[][] tile, char target) {\r\n		int count = 0;\r\n		Stack<Character> stack = new Stack<Character>();\r\n		\r\n		if (target == \'|\') {\r\n			for(int j=0; j<col; j++) {\r\n				char flag = \'+\';\r\n				for(int i=0; i<row; i++) {\r\n					if(flag != tile[i][j] && target == tile[i][j]) {\r\n						count++;\r\n					}\r\n					flag = tile[i][j];\r\n				}\r\n			}\r\n		}\r\n		else {\r\n			for(int i=0; i<row; i++) {\r\n				char flag = \'+\';\r\n				for(int j=0; j<col; j++) {\r\n					if(flag != tile[i][j] && target == tile[i][j]) {\r\n						count++;\r\n					}\r\n					flag = tile[i][j];\r\n				}\r\n			}\r\n		}\r\n\r\n		return count;\r\n	}\r\n	public static void main (String args[]) throws IOException {\r\n		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\r\n		StringTokenizer st = new StringTokenizer(bf.readLine());\r\n		int N = Integer.parseInt(st.nextToken());\r\n		int M = Integer.parseInt(st.nextToken());\r\n		char[][] tile = new char[N][M];\r\n		for(int i=0; i<N; i++) {\r\n			String tmp = bf.readLine();\r\n			for(int j=0; j<M; j++) {\r\n				tile[i][j] = tmp.charAt(j);\r\n			}\r\n		}\r\n		System.out.println(check(N, M, tile, \'-\') + check(N, M, tile, \'|\'));\r\n	}\r\n}\r\n'),(375,'46081043',164,'2022-05-19 09:29:51','영역구하기_지순','ac0eef9926aefe045df6261eaf274f55c8c03893','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\npublic class _010_b2583 {\r\n	static int[][] matrix;\r\n	static int[][] visited;\r\n	static int count;\r\n	static ArrayList<Integer> result = new ArrayList<Integer>();\r\n	\r\n	static int[] delta_row = {-1, 1, 0, 0};\r\n	static int[] delta_col = {0, 0, -1, 1};\r\n	\r\n	private static void check(int row, int col, int M, int N) {\r\n		visited[row][col] = 1;\r\n		count++;\r\n		for(int i=0;i<4;i++) {\r\n			int nxt_row = row + delta_row[i];\r\n			int nxt_col = col + delta_col[i];\r\n			if (0 <= nxt_row && nxt_row < M && 0 <= nxt_col && nxt_col < N) {\r\n				if(visited[nxt_row][nxt_col] == 0 && matrix[nxt_row][nxt_col] == 0) {\r\n					check(nxt_row, nxt_col, M, N);\r\n				}\r\n			}\r\n		}\r\n	}\r\n	\r\n	public static void main (String args[]) throws IOException {\r\n		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\r\n		StringTokenizer st = new StringTokenizer(bf.readLine());\r\n		\r\n		int M = Integer.parseInt(st.nextToken());\r\n		int N = Integer.parseInt(st.nextToken());\r\n		int K = Integer.parseInt(st.nextToken());\r\n		\r\n		matrix = new int[M][N];\r\n		visited = new int[M][N];		\r\n		for(int i=0; i<K; i++) {\r\n			st = new StringTokenizer(bf.readLine());\r\n			int cs = Integer.parseInt(st.nextToken());\r\n			int rs = Integer.parseInt(st.nextToken());\r\n			int ce = Integer.parseInt(st.nextToken());\r\n			int re = Integer.parseInt(st.nextToken());\r\n			\r\n			for(int row = rs; row< re; row++) {\r\n				for(int col = cs; col<ce; col++) {\r\n					matrix[M-row-1][col] = 1;\r\n				}\r\n			}\r\n		}\r\n		for(int i=0; i<M; i++) {\r\n			for(int j=0; j<N; j++) {\r\n				if(matrix[i][j] == 0 && visited[i][j] == 0) check(i, j, M, N);\r\n				if (count != 0)	result.add(count);\r\n				count = 0;\r\n			}\r\n		}\r\n		System.out.printf(\"%d\\n\", result.size());\r\n		int[] array = new int[result.size()];\r\n		for(int i=0;i<result.size();i++) {\r\n			array[i] = result.get(i);\r\n		}\r\n		Arrays.sort(array);\r\n		for(int i=0;i<result.size();i++) {\r\n			System.out.printf(\"%d \", array[i]);\r\n		}\r\n	}\r\n}\r\n'),(376,'46081043',165,'2022-05-19 09:30:37','단지번호붙이기_지순','2ffc1a2b50c85c1158cb60fb00b9014d93882d4c','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\npublic class _012_b2667 {\r\n	static int[][] matrix;\r\n	static int[][] visited;\r\n	\r\n	static int[] delta_row = {-1, 1, 0, 0};\r\n	static int[] delta_col = {0, 0, -1, 1};\r\n	\r\n	public static void main(String args[]) throws IOException {\r\n		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\r\n		\r\n		int N = Integer.parseInt(bf.readLine());\r\n		ArrayList<Integer> result = new ArrayList<Integer>(1);\r\n		\r\n		matrix = new int[N][N];\r\n		visited = new int[N][N];\r\n		\r\n		for(int i=0; i<N; i++) {\r\n			String str = bf.readLine();\r\n			for(int j=0; j<N; j++) {\r\n				matrix[i][j] = Character.getNumericValue(str.charAt(j));\r\n			}\r\n		}\r\n		for(int i=0; i<N; i++) {\r\n			for(int j=0; j<N; j++) {\r\n				int tmp = 0;\r\n				if(matrix[i][j] == 1 && visited[i][j] == 0) tmp = check(i, j, N);\r\n				if(tmp != 0)\r\n					result.add(tmp);\r\n			}\r\n		}\r\n		result.sort(null);\r\n		System.out.println(result.size());\r\n		for(int i=0; i<result.size(); i++) {\r\n			System.out.println(result.get(i));\r\n		}\r\n	}\r\n	\r\n	private static int check(int row, int col, int size) {\r\n		int result = 1;\r\n		visited[row][col] = 1;\r\n		for(int i=0; i<4; i++) {\r\n			int nxt_row = row + delta_row[i];\r\n			int nxt_col = col + delta_col[i];\r\n			if(0 <= nxt_row && nxt_row < size && 0 <= nxt_col && nxt_col < size) {\r\n				if(matrix[nxt_row][nxt_col] == 1 && visited[nxt_row][nxt_col] == 0) {\r\n					result += check(nxt_row, nxt_col, size);	\r\n				}\r\n			}\r\n		}\r\n		return result;\r\n	}\r\n}\r\n'),(379,'55572165',157,'2022-05-19 17:43:31','_002_b1158','e72a322f0f0127809b0ead477cfdc03f92662f78','package algorithm;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.util.StringTokenizer;\r\n\r\npublic class _002_b1158 {\r\n\r\n	public static void main(String[] args) throws IOException {\r\n		BufferedReader input = new BufferedReader(new InputStreamReader(System.in));\r\n		StringTokenizer token = new StringTokenizer(input.readLine(), \" \");\r\n		StringBuilder result = new StringBuilder();\r\n		result.append(\"<\");\r\n\r\n		int N = Integer.parseInt(token.nextToken());\r\n		int K = Integer.parseInt(token.nextToken());\r\n		int[] nums = new int[N];\r\n		\r\n		for(int idx = 0; idx< N; idx++) {\r\n			nums[idx] = idx + 1;\r\n		}\r\n		int idx = 0;\r\n		int length = N;\r\n		while (length > 0) {\r\n			idx = (idx + K - 1) % length;\r\n			result.append(nums[idx]).append(\", \");\r\n			for(int i = idx; i < length - 1; i++) {\r\n				nums[i] = nums[i+1];\r\n			}\r\n			length--;\r\n		}\r\n		result.setLength(result.length()-2);\r\n		result.append(\">\");\r\n		System.out.println(result.toString());\r\n	}\r\n}\r\n'),(380,'55572165',158,'2022-05-19 17:24:57','_002_b1158','c16756d9fd0376ef991c562196fa6c8053b6af5f','package algorithm;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.util.StringTokenizer;\r\n\r\npublic class _002_b1158 {\r\n\r\n	public static void main(String[] args) throws IOException {\r\n		BufferedReader input = new BufferedReader(new InputStreamReader(System.in));\r\n		StringTokenizer token = new StringTokenizer(input.readLine(), \" \");\r\n		StringBuilder result = new StringBuilder();\r\n		result.append(\"<\");\r\n\r\n		int N = Integer.parseInt(token.nextToken());\r\n		int K = Integer.parseInt(token.nextToken());\r\n		\r\n		int[] nums = new int[N];\r\n		\r\n		for(int idx = 0; idx< N; idx++) {\r\n			nums[idx] = idx + 1;\r\n		}\r\n		int idx = 0;\r\n		int length = N;\r\n		while (length > 0) {\r\n			idx = (idx + K - 1) % length;\r\n			result.append(nums[idx]).append(\", \");\r\n			for(int i = idx; i < length - 1; i++) {\r\n				nums[i] = nums[i+1];\r\n			}\r\n			length--;\r\n		}\r\n		result.setLength(result.length()-2);\r\n		result.append(\">\");\r\n		System.out.println(result.toString());\r\n	}\r\n}\r\n'),(381,'55572165',159,'2022-05-19 17:25:08','_007_b2644','b5532fea08208b517a300290f1687f1eff8c70cd','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.StringTokenizer;\r\n\r\npublic class _007_b2644 {\r\n	static int result = -1;\r\n	static byte[] visited;\r\n	static int[][] matrix;\r\n	private static void DFS(int s, int d, int count, int size) {\r\n		if(s == d) {\r\n			result = count;\r\n			return;\r\n		}\r\n		\r\n		visited[s] = 1;\r\n		for(int i = 1; i<size; i++) {\r\n			if (matrix[s][i] == 1 && visited[i] == 0) {\r\n				DFS(i, d, count+1, size);\r\n			}\r\n		}\r\n	}\r\n	public static void main(String args[]) throws IOException {\r\n		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n		StringTokenizer st = new StringTokenizer(br.readLine()); // ã�ƾ� �ϴ� ��� �Է�\r\n		\r\n		int n = Integer.parseInt(st.nextToken()); // ��� �� �Է�\r\n		visited = new byte[n+1];\r\n		matrix = new int[n+1][n+1];\r\n		\r\n		st = new StringTokenizer(br.readLine()); // �̼� ����� ��� �Է�\r\n		int s = Integer.parseInt(st.nextToken());\r\n		int d = Integer.parseInt(st.nextToken());\r\n		\r\n		st = new StringTokenizer(br.readLine()); // �̼� ���� ���� �Է�\r\n		int m = Integer.parseInt(st.nextToken());\r\n		\r\n		// ������� ����\r\n		while(m-- > 0) {\r\n			st = new StringTokenizer(br.readLine());\r\n			int[] buffer = {Integer.parseInt(st.nextToken()), Integer.parseInt(st.nextToken())};\r\n			matrix[buffer[0]][buffer[1]] = 1;\r\n			matrix[buffer[1]][buffer[0]] = 1;\r\n		}\r\n		DFS(s, d, 0, n+1);\r\n		System.out.println(result);\r\n	}\r\n}\r\n'),(382,'55572165',160,'2022-05-19 17:25:26','_008_b2023','72ede1de44233c0b4b0fa133b6e88069908961e5','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.Scanner;\r\n\r\npublic class _008_b2023 {\r\n	public static void main(String[] args) throws IOException {\r\n		Scanner sc = new Scanner(System.in);\r\n		int N = sc.nextInt();\r\n		DFS(0, 0, N);\r\n	}\r\n	private static void DFS(int buffer, int count, int size) {\r\n		if(count == size) {\r\n			System.out.println(buffer);\r\n			return;\r\n		}\r\n		\r\n		int idx = 1;\r\n		if (count == 0) idx=2;\r\n		\r\n		\r\n		buffer *= 10;\r\n				\r\n		loop:\r\n		while (idx < 10) {\r\n			buffer += idx;\r\n			for(int i = 2; i<buffer;i++) {\r\n				if(buffer % i == 0) {\r\n					buffer -= idx;\r\n					idx++;\r\n					continue loop;\r\n				}\r\n			}\r\n			DFS(buffer, count+1, size);\r\n			buffer -= idx;\r\n			idx++;\r\n		}\r\n	}\r\n}\r\n'),(383,'55572165',163,'2022-05-19 17:25:54','_009_b1388','8ff6dbf10cc56a53fc4393c6fa3e738e8f6440f5','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.Stack;\r\nimport java.util.StringTokenizer;\r\n\r\npublic class _009_b1388 {\r\n	private static int check(int row, int col, char[][] tile, char target) {\r\n		int count = 0;\r\n		Stack<Character> stack = new Stack<Character>();\r\n		\r\n		if (target == \'|\') {\r\n			for(int j=0; j<col; j++) {\r\n				char flag = \'+\';\r\n				for(int i=0; i<row; i++) {\r\n					if(flag != tile[i][j] && target == tile[i][j]) {\r\n						count++;\r\n					}\r\n					flag = tile[i][j];\r\n				}\r\n			}\r\n		}\r\n		else {\r\n			for(int i=0; i<row; i++) {\r\n				char flag = \'+\';\r\n				for(int j=0; j<col; j++) {\r\n					if(flag != tile[i][j] && target == tile[i][j]) {\r\n						count++;\r\n					}\r\n					flag = tile[i][j];\r\n				}\r\n			}\r\n		}\r\n\r\n		return count;\r\n	}\r\n	public static void main (String args[]) throws IOException {\r\n		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\r\n		StringTokenizer st = new StringTokenizer(bf.readLine());\r\n		int N = Integer.parseInt(st.nextToken());\r\n		int M = Integer.parseInt(st.nextToken());\r\n		char[][] tile = new char[N][M];\r\n		for(int i=0; i<N; i++) {\r\n			String tmp = bf.readLine();\r\n			for(int j=0; j<M; j++) {\r\n				tile[i][j] = tmp.charAt(j);\r\n			}\r\n		}\r\n		System.out.println(check(N, M, tile, \'-\') + check(N, M, tile, \'|\'));\r\n	}\r\n}\r\n'),(384,'55572165',161,'2022-05-19 17:26:05','_006_b2606','6d5f14e344abc3b984be4cda26dd2ff422a4c9d8','package algorithm;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.util.Stack;\r\nimport java.util.StringTokenizer;\r\n\r\npublic class _006_b2606 {\r\n	public static int DFS(int[][] links, int[] visited, int cnt, int sp, int size) {\r\n		Stack<Integer> stack = new Stack<Integer>();\r\n		stack.push(1);\r\n		while (stack.size() != 0) {\r\n			int cur = stack.pop();\r\n			if(visited[cur] == 0) {				\r\n				visited[cur] = 1;\r\n				cnt++;\r\n				for(int i = 1; i < size; i++) {\r\n					if(visited[i] == 0 && links[cur][i] == 1) {\r\n						stack.push(i);\r\n					}\r\n				}\r\n			}\r\n		}\r\n		return cnt - 1;\r\n	}\r\n	public static void main (String arg[]) throws IOException {\r\n		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n		int C = Integer.parseInt(br.readLine());\r\n		int N = Integer.parseInt(br.readLine());\r\n		int[] visited = new int[C+1];\r\n		int[][] links = new int[C+1][C+1];\r\n		while(N-- > 0) {\r\n			StringTokenizer st = new StringTokenizer(br.readLine());\r\n			int[] link = {Integer.parseInt(st.nextToken()), Integer.parseInt(st.nextToken())};\r\n			links[link[0]][link[1]] = 1;\r\n			links[link[1]][link[0]] = 1;\r\n		}\r\n		System.out.println(DFS(links, visited, 0, 1, C+1));\r\n	}\r\n}\r\n'),(385,'55572165',164,'2022-05-19 17:26:20','_011_swea2383','63638409b86cb28e7dbe9603eae1b446f797cc1d','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\npublic class _011_swea2383 {\r\n	private static int[][] matrix;							// �Է� ���� ������ �迭\r\n	private static int[][] people = new int[10][4];			// ����� ��ġ   | row, col, ���, �Ÿ�\r\n	private static int[][] stair = {{-1, -1, 0}, {-1, -1, 0}};	// 1�� ��� ��ġ | row, col, ��� �ð�\r\n	private static int result = 999;\r\n	\r\n	public static void main (String args[]) throws IOException {\r\n//		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\r\n		BufferedReader bf = new BufferedReader(new FileReader(\"D:\\\\Users\\\\agang\\\\Desktop\\\\java_study\\\\Beakjoon_algorithm\\\\sample_input.txt\"));\r\n		\r\n		int T = Integer.parseInt(bf.readLine());\r\n		for(int tc = 1; tc <= T; tc++) {\r\n			int N = Integer.parseInt(bf.readLine());	// �迭 ũ��\r\n\r\n			int people_cnt = 0;							// �ο� ��\r\n			matrix = new int[N][N];\r\n			stair[0][0] = -1;\r\n			// ������ �Է�\r\n			for(int i=0; i<N; i++) {\r\n				StringTokenizer st = new StringTokenizer(bf.readLine());\r\n				for(int j=0; j<N; j++) {\r\n					matrix[i][j] = Integer.parseInt(st.nextToken());\r\n					if (matrix[i][j] == 1) {\r\n						people[people_cnt][0] = i;\r\n						people[people_cnt][1] = j;\r\n						people[people_cnt][2] = 0;\r\n						people_cnt++;\r\n					}\r\n					else if(matrix[i][j] >= 2) {\r\n						if (stair[0][0] == -1) {\r\n							stair[0][0] = i;\r\n							stair[0][1] = j;\r\n							stair[0][2] = matrix[i][j];\r\n						}\r\n						else {\r\n							stair[1][0] = i;\r\n							stair[1][1] = j;\r\n							stair[1][2] = matrix[i][j];\r\n						}\r\n					}\r\n				}\r\n			}\r\n		\r\n			// �Է� ����\r\n			boolean[] visited = new boolean[people_cnt];\r\n			for(int i=0; i<=people_cnt;i++) {				\r\n				combination(visited, 0, people_cnt, i);\r\n			}\r\n			\r\n			System.out.printf(\"#%d %d\\n\",tc, result);\r\n			result = 999;\r\n		}\r\n	}\r\n	private static void combination(boolean[] visited, int start, int people_cnt, int r) {\r\n		if(r == 0) {\r\n			category(visited, people_cnt);\r\n			return ;\r\n		}\r\n		\r\n		for(int i = start; i<people_cnt; i++) {\r\n			visited[i] = true;\r\n			combination(visited, i+1, people_cnt, r-1);\r\n			visited[i] = false;\r\n		}\r\n	}\r\n	private static void category(boolean[] visited, int people_cnt) {\r\n		byte ROW = 0;	// ��\r\n		byte COL = 1; // ��\r\n		byte stair1_cnt = 0;\r\n\r\n		for(int i=0; i<people_cnt;i++) {\r\n			if(visited[i]) {\r\n				people[i][2] = 1;\r\n				stair1_cnt++;\r\n			}\r\n			else people[i][2] = 0;\r\n			people[i][3] = Math.abs(people[i][ROW] - stair[people[i][2]][ROW]) + Math.abs(people[i][COL] - stair[people[i][2]][COL]); // �Ÿ� ���\r\n		}\r\n		int tmp1 = time(0, people_cnt, people_cnt - stair1_cnt);\r\n		int tmp2 = time(1, people_cnt, stair1_cnt);\r\n		int min_time = (tmp1<tmp2 ? tmp2:tmp1);\r\n		result = min_time<result ? min_time:result;\r\n	}\r\n	private static int time(int stair_num, int people_cnt, int exit) {\r\n		if(exit == 0) return 0;\r\n		Queue<Integer> stair_queue = new LinkedList<Integer>();\r\n		Queue<Integer> wait_queue = new LinkedList<Integer>();\r\n		int time_cnt = 0;\r\n		int out_cnt = 0;\r\n		while (true) {\r\n			if (time_cnt >= result) return time_cnt;\r\n 			for(int i=0; i<people_cnt;i++) {\r\n				if(people[i][2] == stair_num) {\r\n					people[i][3]--;\r\n				}\r\n			}\r\n   			for(int i=0; i<people_cnt;i++) {\r\n   				if(people[i][2] == stair_num) {\r\n					if(people[i][3] == -1) {\r\n						if(stair_queue.size() < 3)\r\n							stair_queue.add(i);\r\n						else {						\r\n							wait_queue.add(i);\r\n							people[i][3] = -11;\r\n						}\r\n					}\r\n					else if(people[i][3] == -stair[stair_num][2]-1) {\r\n						stair_queue.poll();\r\n						if(!wait_queue.isEmpty()) {						\r\n							int tmp = wait_queue.poll();\r\n							stair_queue.add(tmp);\r\n							people[tmp][3] = -1;\r\n						}\r\n						out_cnt++;\r\n					}\r\n   				}\r\n			}\r\n			time_cnt++;\r\n			if (out_cnt == exit) return time_cnt;\r\n		}\r\n	}\r\n}\r\n'),(386,'55572165',165,'2022-05-19 17:26:42','_012_b2667','2ffc1a2b50c85c1158cb60fb00b9014d93882d4c','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\npublic class _012_b2667 {\r\n	static int[][] matrix;\r\n	static int[][] visited;\r\n	\r\n	static int[] delta_row = {-1, 1, 0, 0};\r\n	static int[] delta_col = {0, 0, -1, 1};\r\n	\r\n	public static void main(String args[]) throws IOException {\r\n		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\r\n		\r\n		int N = Integer.parseInt(bf.readLine());\r\n		ArrayList<Integer> result = new ArrayList<Integer>(1);\r\n		\r\n		matrix = new int[N][N];\r\n		visited = new int[N][N];\r\n		\r\n		for(int i=0; i<N; i++) {\r\n			String str = bf.readLine();\r\n			for(int j=0; j<N; j++) {\r\n				matrix[i][j] = Character.getNumericValue(str.charAt(j));\r\n			}\r\n		}\r\n		for(int i=0; i<N; i++) {\r\n			for(int j=0; j<N; j++) {\r\n				int tmp = 0;\r\n				if(matrix[i][j] == 1 && visited[i][j] == 0) tmp = check(i, j, N);\r\n				if(tmp != 0)\r\n					result.add(tmp);\r\n			}\r\n		}\r\n		result.sort(null);\r\n		System.out.println(result.size());\r\n		for(int i=0; i<result.size(); i++) {\r\n			System.out.println(result.get(i));\r\n		}\r\n	}\r\n	\r\n	private static int check(int row, int col, int size) {\r\n		int result = 1;\r\n		visited[row][col] = 1;\r\n		for(int i=0; i<4; i++) {\r\n			int nxt_row = row + delta_row[i];\r\n			int nxt_col = col + delta_col[i];\r\n			if(0 <= nxt_row && nxt_row < size && 0 <= nxt_col && nxt_col < size) {\r\n				if(matrix[nxt_row][nxt_col] == 1 && visited[nxt_row][nxt_col] == 0) {\r\n					result += check(nxt_row, nxt_col, size);	\r\n				}\r\n			}\r\n		}\r\n		return result;\r\n	}\r\n}\r\n'),(388,'55572165',166,'2022-05-19 18:32:27','_013_b21735','6ff2acb905b8a85e3b9162414aca887f47b6928f','package algorithm;\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\npublic class _013_b21735 {\r\n	static int[] yard;\r\n	static int result = -1;\r\n	public static void main(String args[]) throws IOException {\r\n		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\r\n		StringTokenizer st = new StringTokenizer(bf.readLine());\r\n		int N = Integer.parseInt(st.nextToken());\r\n		int M = Integer.parseInt(st.nextToken());\r\n		int A = 0;\r\n\r\n		yard = new int[N+1];\r\n		st = new StringTokenizer(bf.readLine());\r\n		for(int i=1; i<N+1; i++) {\r\n			yard[i] = Integer.parseInt(st.nextToken());\r\n		}\r\n		\r\n		make_ball(0, 0, M, 1);\r\n		System.out.println(result);\r\n		\r\n	}\r\n	\r\n	private static void make_ball(int idx, int cnt, int M, int size) {\r\n		if(cnt > M) return;\r\n		\r\n		if(cnt <= M) {\r\n			if (result < size) result = size;\r\n		}\r\n		\r\n		if(idx+1 < yard.length) make_ball(idx+1, cnt+1, M, size + yard[idx+1]);\r\n		if(idx+2 < yard.length) make_ball(idx+2, cnt+1, M, size/2 + yard[idx+2]);\r\n	}\r\n}\r\n');
/*!40000 ALTER TABLE `code` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `comment`
--

DROP TABLE IF EXISTS `comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `comment` (
  `comment_id` bigint NOT NULL AUTO_INCREMENT,
  `fk_user_id` varchar(30) NOT NULL,
  `fk_code_id` bigint NOT NULL,
  `comment_content` varchar(30) NOT NULL,
  `comment_create_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `comment_line` int DEFAULT NULL,
  `comment_is_solved` tinyint NOT NULL DEFAULT '0',
  PRIMARY KEY (`comment_id`),
  KEY `fk_comment_user1_idx` (`fk_user_id`),
  KEY `fk_comment_code1_idx` (`fk_code_id`),
  CONSTRAINT `fk_comment_code1` FOREIGN KEY (`fk_code_id`) REFERENCES `code` (`code_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_comment_user1` FOREIGN KEY (`fk_user_id`) REFERENCES `user` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `comment`
--

LOCK TABLES `comment` WRITE;
/*!40000 ALTER TABLE `comment` DISABLE KEYS */;
INSERT INTO `comment` VALUES (2,'55572165',343,'cnt는 어디서 정의했나요?','2022-05-19 11:39:07',23,0),(3,'55572165',344,'print_q 는 무슨 메서드인가요?','2022-05-19 12:04:49',20,1),(4,'55572165',350,'이부분은 필요한 코드 인건가요?','2022-05-19 12:05:17',21,0),(5,'55572165',374,'Stack 자료 구조를 사용하신 이유가 뭘까요..?','2022-05-19 12:49:16',10,0),(7,'55572165',373,'이 부분 왜 비어있을까요?','2022-05-19 16:06:45',23,0),(8,'55572165',372,'이 부분은 왜 비어있는 걸까요?','2022-05-19 16:08:39',44,0),(9,'46081043',344,'불필요한 개행 문자는 지워주세요!','2022-05-19 16:08:40',27,1),(10,'55572165',371,'이 부분은 왜 비어있는걸까요?','2022-05-19 17:42:26',38,0),(11,'46081043',379,'공백 제거가 필요할 거 같습니다!','2022-05-19 17:42:36',18,1);
/*!40000 ALTER TABLE `comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `notice`
--

DROP TABLE IF EXISTS `notice`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `notice` (
  `notice_id` bigint NOT NULL AUTO_INCREMENT,
  `fk_study_id` bigint DEFAULT NULL,
  `notice_content` varchar(500) DEFAULT NULL,
  `notice_write_date` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`notice_id`),
  KEY `notice_study_study_id_fk` (`fk_study_id`),
  CONSTRAINT `notice_study_study_id_fk` FOREIGN KEY (`fk_study_id`) REFERENCES `study` (`study_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=58 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `notice`
--

LOCK TABLES `notice` WRITE;
/*!40000 ALTER TABLE `notice` DISABLE KEYS */;
INSERT INTO `notice` VALUES (57,101,'1. 한 주에 3문제를 필수로 제출해야합니다.<br />2. 별다른 공지 없이 문제 제출이 없다면 3번의 경고 후 강퇴됩니다.<br />3. 열심히 참여해주세요!?','2022-05-19 16:26:23');
/*!40000 ALTER TABLE `notice` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `problem`
--

DROP TABLE IF EXISTS `problem`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `problem` (
  `problem_id` bigint NOT NULL AUTO_INCREMENT,
  `fk_schedule_id` bigint NOT NULL,
  `problem_name` varchar(100) NOT NULL,
  `problem_link` varchar(150) NOT NULL,
  `problem_is_cancel` tinyint NOT NULL DEFAULT '0',
  PRIMARY KEY (`problem_id`),
  KEY `fk_problem_schedule1_idx` (`fk_schedule_id`),
  CONSTRAINT `fk_problem_schedule1` FOREIGN KEY (`fk_schedule_id`) REFERENCES `schedule` (`schedule_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=175 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `problem`
--

LOCK TABLES `problem` WRITE;
/*!40000 ALTER TABLE `problem` DISABLE KEYS */;
INSERT INTO `problem` VALUES (156,103,'12605 - 단어 순서 뒤집기','https://www.acmicpc.net/problem/12605',0),(157,103,'1158 - 요새푸스 문제','https://www.acmicpc.net/problem/1158',0),(158,103,'10773 - 제로','https://www.acmicpc.net/problem/10773',0),(159,103,'2164 - 카드2','https://www.acmicpc.net/problem/2164',0),(160,103,'12034 - 김인천씨의 식료품가게','https://www.acmicpc.net/problem/2164',0),(161,104,'2644 - 촌수계산','https://www.acmicpc.net/problem/2644',0),(162,104,'2023 - 신기한 소수','https://www.acmicpc.net/problem/2023',0),(163,104,'1388 - 바닥 장식','https://www.acmicpc.net/problem/1388',0),(164,104,'2583 - 영역 구하기','https://www.acmicpc.net/problem/2583',0),(165,104,'2667 - 단지번호붙이기','https://www.acmicpc.net/problem/2667',0),(166,105,'21735 - 눈덩이 굴리기','https://www.acmicpc.net/problem/21735',0),(167,105,'14889 - 스타트와 링크','https://www.acmicpc.net/problem/14889',0),(168,105,'1759 - 암호 만들기','https://www.acmicpc.net/problem/1759',0),(169,105,'10819 - 차이를 최대로','https://www.acmicpc.net/problem/10819',0),(170,105,'6603 - 로또','https://www.acmicpc.net/search#q=6603&c=Problems',0),(174,109,'adssad','asdasd',0);
/*!40000 ALTER TABLE `problem` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `schedule`
--

DROP TABLE IF EXISTS `schedule`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `schedule` (
  `schedule_id` bigint NOT NULL AUTO_INCREMENT,
  `fk_study_id` bigint NOT NULL,
  `schedule_start_date` date NOT NULL,
  `schedule_end_date` date NOT NULL,
  `schedule_is_cancel` tinyint NOT NULL DEFAULT '0',
  `schedule_round` int DEFAULT NULL,
  PRIMARY KEY (`schedule_id`),
  KEY `fk_schedule_study1_idx` (`fk_study_id`),
  CONSTRAINT `fk_schedule_study1` FOREIGN KEY (`fk_study_id`) REFERENCES `study` (`study_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=110 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `schedule`
--

LOCK TABLES `schedule` WRITE;
/*!40000 ALTER TABLE `schedule` DISABLE KEYS */;
INSERT INTO `schedule` VALUES (103,101,'2022-05-02','2022-05-08',0,NULL),(104,101,'2022-05-09','2022-05-15',0,NULL),(105,101,'2022-05-16','2022-05-22',0,NULL),(109,107,'2022-05-20','2022-05-21',0,NULL);
/*!40000 ALTER TABLE `schedule` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `study`
--

DROP TABLE IF EXISTS `study`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `study` (
  `study_id` bigint NOT NULL AUTO_INCREMENT,
  `fk_user_id` varchar(30) DEFAULT NULL,
  `study_name` varchar(50) NOT NULL,
  `study_introduction` varchar(150) DEFAULT NULL,
  `study_is_public` tinyint NOT NULL DEFAULT '1',
  `study_language` varchar(50) DEFAULT NULL,
  `study_max_people` int NOT NULL,
  `study_repository_name` varchar(30) DEFAULT NULL,
  `study_code` varchar(30) NOT NULL,
  PRIMARY KEY (`study_id`),
  UNIQUE KEY `study_code_UNIQUE` (`study_code`),
  KEY `fk_study_user1_idx` (`fk_user_id`),
  CONSTRAINT `fk_study_user1` FOREIGN KEY (`fk_user_id`) REFERENCES `user` (`user_id`) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=108 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `study`
--

LOCK TABLES `study` WRITE;
/*!40000 ALTER TABLE `study` DISABLE KEYS */;
INSERT INTO `study` VALUES (101,'105216426','JAVA로 취뽀~','자바로 진행하는 알고리즘 스터디',1,'Java',4,'java-algorithm-study','b819db97'),(106,'92253127','JS스터디','1일 1알고!',1,'Java Script',6,'JSStudy','5ba88f79'),(107,'105216426','js 스터디','test',1,'Java Script',4,'TEST','1ffc15ae');
/*!40000 ALTER TABLE `study` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `study_join_info`
--

DROP TABLE IF EXISTS `study_join_info`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `study_join_info` (
  `sji_id` bigint NOT NULL AUTO_INCREMENT,
  `fk_user_id` varchar(30) NOT NULL,
  `fk_study_id` bigint NOT NULL,
  `sji_state` varchar(10) NOT NULL,
  `sji_position` varchar(10) NOT NULL,
  `sji_is_receivable` tinyint NOT NULL DEFAULT '1',
  `sji_registration_date` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`sji_id`),
  KEY `fk_study_join_info_user1_idx` (`fk_user_id`),
  KEY `fk_study_join_info_study1_idx` (`fk_study_id`),
  CONSTRAINT `fk_study_join_info_study1` FOREIGN KEY (`fk_study_id`) REFERENCES `study` (`study_id`),
  CONSTRAINT `fk_study_join_info_user1` FOREIGN KEY (`fk_user_id`) REFERENCES `user` (`user_id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `study_join_info`
--

LOCK TABLES `study_join_info` WRITE;
/*!40000 ALTER TABLE `study_join_info` DISABLE KEYS */;
INSERT INTO `study_join_info` VALUES (1,'105216426',101,'가입','그룹장',1,'2022-05-19 09:05:08'),(2,'55572165',101,'가입','그룹원',1,'2022-05-19 09:10:16'),(3,'92253127',101,'초대대기','그룹원',0,NULL),(4,'46081043',101,'가입','그룹원',1,'2022-05-19 09:13:02'),(5,'53349284',101,'가입','그룹원',1,'2022-05-19 09:13:05'),(14,'92253127',106,'가입','그룹장',1,'2022-05-19 18:34:35'),(15,'105216426',107,'가입','그룹장',1,'2022-05-19 22:15:42');
/*!40000 ALTER TABLE `study_join_info` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user`
--

DROP TABLE IF EXISTS `user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `user` (
  `user_id` varchar(30) NOT NULL,
  `user_name` varchar(30) NOT NULL,
  `user_nickname` varchar(30) NOT NULL,
  `user_email` varchar(50) DEFAULT NULL,
  `user_email_alert` int NOT NULL DEFAULT '3',
  `user_site_alert` int NOT NULL DEFAULT '3',
  `user_introduction` varchar(100) DEFAULT NULL,
  `user_activity_time` varchar(20) DEFAULT NULL,
  `user_language` int DEFAULT NULL,
  `user_image` varchar(200) DEFAULT NULL,
  `user_role` varchar(10) DEFAULT NULL,
  PRIMARY KEY (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user`
--

LOCK TABLES `user` WRITE;
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` VALUES ('104122261','ssafytest001','김유진','ssafytest001@gmail.com',0,3,'김유진입니다.',NULL,1,'https://algorithmtime.com/api/images/ff758a2b-fc73-4ec0-ab1f-676bf8bc5644테스트용.jpg','ROLE_USER'),('105216426','alta-test','alta-test','david.test.alta@gmail.com',3,3,'나는야 퉁퉁이 골목대장이라네',NULL,2,'https://algorithmtime.com/api/images/3bee506b-e394-470a-aef9-d9bbb1462f24logo.png','ROLE_USER'),('46081043','JISOONLEE','JISOONLEE','jisoon806@gmail.com',3,3,'안녕하세요! 이지순입니다. \n자바로 코딩테스트 준비중입니다!',NULL,1,'https://algorithmtime.com/api/images/28f15fc5-d9ed-49a7-8d1c-f774ae99a9baKakaoTalk_20220421_110406876.jpg','ROLE_USER'),('53349284','Seoha-Oh','Seoha-Oh','seoha8952@gmail.com',3,3,NULL,NULL,NULL,NULL,'ROLE_USER'),('55572165','yjydev','yjydev','yun22287@naver.com',0,3,'안녕하세요. 프론트 엔드 개발 지망생입니다!!',NULL,2,'https://algorithmtime.com/api/images/24f12ee4-14bd-487f-b9e9-a85a71d4f1f0사진.jpg','ROLE_USER'),('57592095','David-Lee-dev','David-Lee-dev','aganga7427@gmail.com',3,3,NULL,NULL,NULL,NULL,'ROLE_USER'),('77470435','shs9509','shs9509','shs950930@gmail.com',3,3,'1일1알해요~',NULL,2,'https://algorithmtime.com/api/images/d79396e3-8476-437d-ac78-170e7fbdcf08화면 캡처 2022-04-26 154635.png','ROLE_USER'),('92253127','WooJeongYeon','WooJeongYeon','woo9515jy@gmail.com',3,3,NULL,NULL,NULL,'https://algorithmtime.com/api/images/fdb83216-94ce-47c2-8be9-a8530f9e98ab둥이2.jpg','ROLE_USER');
/*!40000 ALTER TABLE `user` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2022-05-20  9:46:33
