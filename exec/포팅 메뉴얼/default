##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

server {
	listen 80 default_server;
	listen [::]:80 default_server;

	location / {
		return 301 https://$host$request_uri;
	}
}

server {
	#listen 80 default_server;
	#listen [::]:80 default_server;

	# SSL configuration
	#
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;

	#ssl_certificate /etc/letsencrypt/live/k6b203.p.ssafy.io/fullchain.pem;
	#ssl_certificate_key /etc/letsencrypt/live/k6b203.p.ssafy.io/privkey.pem;
	#ssl_certificate /home/ubuntu/cert/live/k6b203.p.ssafy.io/fullchain.pem;
	#ssl_certificate_key /home/ubuntu/cert/live/k6b203.p.ssafy.io/privkey.pem;
	ssl_certificate /home/ubuntu/cert/live/algorithmtime.com/fullchain.pem;
	ssl_certificate_key /home/ubuntu/cert/live/algorithmtime.com/privkey.pem;
	ssl_session_cache shared:le_nginx_SSL:10m;
	ssl_session_timeout 1440m;
	ssl_session_tickets off;
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_prefer_server_ciphers off;
	ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384";

	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /jenkins/workspace/alta/frontend/build;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	underscores_in_headers on;
	
	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404
		try_files $uri $uri/ /index.html;
	}

         location /api/ws {
                proxy_pass http://localhost:8000;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                 proxy_set_header Connection "upgrade";
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $http_x_real_ip;
        }

	
	location /api {
	#	proxy_pass http://localhost:8000;
	#	proxy_http_version 1.1;
		#proxy_set_header Connection "upgrade";
		#proxy_set_header Upgrade $http_upgrade;
	#	proxy_set_header       Upgrade $http_upgrade;
      	#	proxy_set_header       Connection "upgrade";
	#	proxy_set_header Host $host;
		proxy_pass http://localhost:8000;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $http_x_real_ip;
		chunked_transfer_encoding off;
                proxy_buffering off;
                proxy_cache off;
		include /etc/nginx/proxy_params;
	}
	
	


	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
